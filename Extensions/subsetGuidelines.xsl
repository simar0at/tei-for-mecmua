<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet 
 xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:exsl="http://exslt.org/common"
  extension-element-prefixes="exsl"
  exclude-result-prefixes="tei exsl" 
  version="1.0">
<xsl:key name="TAGMODS" match="Tag|Class|Attclass" use="Tagset"/>
<xsl:key name="MODS" match="tei:module" use="@ident"/>
<xsl:param name="ODDROOT">/TEI/P5/Source/</xsl:param>
<xsl:key name="LOCAL"
	 match="tei:classSpec|tei:elementSpec|tei:macroSpec" use="@ident"/>
<xsl:output method="xml" indent="yes"/>
<xsl:param name="verbose">true</xsl:param>
<xsl:variable name="TEITAGS">http://www.tei-c.org.uk/tei-bin/files.pl?name=tags.xml</xsl:variable>

<xsl:variable name="MAIN" select="/"/>

<xsl:template match="/">
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>P5 subset</title>
            <author>generated by Roma</author>
         </titleStmt>
         <publicationStmt>
	   <p>part of P5</p>
	 </publicationStmt>
         <sourceDesc>
            <p>written from scratch</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
<text>
<body>
<div0>
<head>ODD SUBSET</head>
<div1 id="REFCLA">
<head>Class catalogue</head>
<divGen type="classcat"/>
</div1>
<div1 id="REFENT">
<head>Pattern catalogue</head>
<divGen type="patterncat"/>
</div1>
<div1 id="REFTAG">
<head>Element catalogue</head>
<divGen type="tagcat"/>
</div1>

</div0>
  <xsl:apply-templates select=".//tei:schema"/>
  <xsl:apply-templates select=".//tei:module"/>
</body>
</text>
</TEI>
</xsl:template>

<xsl:template match="tei:schema">
  <xsl:for-each select="tei:moduleRef">
    <xsl:variable name="test" select="@key"/>
    <xsl:if test="not(key('MODS',$test))">
      <xsl:choose>
	<xsl:when test="$test='tei'">
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">core</xsl:with-param>
	    </xsl:call-template>
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">header</xsl:with-param>
	    </xsl:call-template>
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">teikeywords</xsl:with-param>
	    </xsl:call-template>
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">teiclasses</xsl:with-param>
	    </xsl:call-template>
	</xsl:when>
	<xsl:when test="$test='general'">
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">structure</xsl:with-param>
	    </xsl:call-template>
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">frontmatter</xsl:with-param>
	    </xsl:call-template>
	    <xsl:call-template name="findNames">
	      <xsl:with-param name="modname">backmatter</xsl:with-param>
	    </xsl:call-template>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:call-template name="findNames">
	    <xsl:with-param name="modname">
	      <xsl:value-of select="$test"/>
	    </xsl:with-param>
	  </xsl:call-template>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:for-each>
</xsl:template>

<xsl:template match="tei:module">
    <xsl:choose>
      <xsl:when test="@ident='tei'">
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">core</xsl:with-param>
	</xsl:call-template>
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">header</xsl:with-param>
	</xsl:call-template>
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">teikeywords</xsl:with-param>
	</xsl:call-template>
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">teiclasses</xsl:with-param>
	</xsl:call-template>
      </xsl:when>
      <xsl:when test="@ident='general'">
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">structure</xsl:with-param>
	</xsl:call-template>
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">frontmatter</xsl:with-param>
	</xsl:call-template>
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">backmatter</xsl:with-param>
	</xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
	<xsl:call-template name="findNames">
	  <xsl:with-param name="modname">
	    <xsl:value-of select="@ident"/>
	  </xsl:with-param>
	</xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
</xsl:template>

<xsl:template name="findNames">
  <xsl:param name="modname"/>
  <xsl:variable name="HERE" select="."/>
  <xsl:for-each
   select="document($TEITAGS)/Table">
	    <xsl:message>Module <xsl:value-of
  select="$modname"/></xsl:message>
  <module xmlns="http://www.tei-c.org/ns/1.0" ident="{$modname}">
    <xsl:for-each select="key('TAGMODS',$modname)">
      <xsl:call-template name="processThing"/>
    </xsl:for-each>
  </module>
  </xsl:for-each>
</xsl:template>

<xsl:template match="tei:*|rng:*" mode="change">
  <xsl:copy>
    <xsl:apply-templates select="@*|*|text()|comment()" mode="change"/>
  </xsl:copy>
</xsl:template>

<xsl:template match="@*|comment()|text()" mode="change">
  <xsl:copy/>
</xsl:template>

<xsl:template match="tei:elementSpec|tei:classSpec|tei:patternSpec"
	      mode="change">
  <xsl:variable name="me" select="@ident"/>
  <xsl:copy>
    <xsl:apply-templates select="@*" mode="change"/>
    <xsl:for-each select="$MAIN">
      <xsl:for-each select="key('LOCAL',$me)">
	<xsl:copy-of select="tei:altIdent"/>
      </xsl:for-each>
    </xsl:for-each>
    <xsl:apply-templates select="*|text()|comment()" mode="change"/>
  </xsl:copy>
</xsl:template>

<xsl:template name="processThing">
  <xsl:variable name="file" select="@filelocation"/>
  <xsl:variable name="me" select="ident"/>
<!--
	    <xsl:message>Look at <xsl:value-of
  select="$me"/></xsl:message>
-->
  <xsl:for-each select="$MAIN">
  <xsl:choose>
    <xsl:when test="key('LOCAL',$me)">
      <xsl:for-each select="key('LOCAL',$me)">
	<xsl:choose>
	  <xsl:when test="@mode='delete'"/>
	  <xsl:when test="@mode='change'">
	    <xsl:message> try to change <xsl:value-of select="$me"/></xsl:message>
	    <xsl:for-each select="document(concat($ODDROOT,$file))">
	      <xsl:apply-templates mode="change"/>
	    </xsl:for-each>
	  </xsl:when>
	  <xsl:otherwise>
	    <xsl:copy>
	      <xsl:apply-templates select="@*"/>
	      <xsl:copy-of select="*"/>
	    </xsl:copy>
	  </xsl:otherwise>
	</xsl:choose>
      </xsl:for-each>
    </xsl:when>
    <xsl:otherwise>
      <xsl:for-each select="document(concat($ODDROOT,$file))">
	<xsl:copy-of select="."/>
      </xsl:for-each>
    </xsl:otherwise>
  </xsl:choose>
  </xsl:for-each>
</xsl:template>


<xsl:template match="@mode"/>

<xsl:template match="@*">
  <xsl:copy/>
</xsl:template>
</xsl:stylesheet>