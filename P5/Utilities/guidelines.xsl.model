<xsl:stylesheet
  exclude-result-prefixes="xlink dbk rng tei teix xhtml a edate estr html pantor xd xs xsl fo"
  extension-element-prefixes="exsl estr edate" version="1.0"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:dbk="http://docbook.org/ns/docbook"
  xmlns:edate="http://exslt.org/dates-and-times"
  xmlns:estr="http://exslt.org/strings"
  xmlns:exsl="http://exslt.org/common"
  xmlns:fo="http://www.w3.org/1999/XSL/Format"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:pantor="http://www.pantor.com/ns/local"
  xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:teix="http://www.tei-c.org/ns/Examples"
  xmlns:xd="http://www.pnp-software.com/XSLTdoc"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:import href="/usr/share/xml/tei/stylesheet/odds/odd2html.xsl"/>
  <xsl:key name="HEADS" match="tei:head" use="concat(@xml:lang,@corresp)"/>
  <xsl:param name="lang"/>
  <xsl:param name="doclang"/>
  <xsl:param name="splitLevel">0</xsl:param>
  <xsl:param name="footnoteFile">false</xsl:param>
  <xsl:param name="auto">false</xsl:param>
  <xsl:param name="numberFrontHeadings">true</xsl:param>
  <xsl:param name="displayMode">both</xsl:param>
  <xsl:param name="feedbackURL">http://www.tei-c.org/Consortium/contact.xml</xsl:param>
  <xsl:param name="homeLabel">TEI P5 Guidelines</xsl:param>
  <xsl:param name="homeWords">TEI P5</xsl:param>
  <xsl:param name="institution">Text Encoding Initiative</xsl:param>
  <xsl:param name="outputDir">Guidelines</xsl:param>
  <xsl:param name="parentURL">http://www.tei-c.org/Consortium/</xsl:param>
  <xsl:param name="parentWords">TEI Consortium</xsl:param>
  <xsl:param name="cssFile">guidelines.css</xsl:param>
  <xsl:param name="cssSecondaryFile">odd.css</xsl:param>
  <xsl:param name="cssPrintFile">guidelines-print.css</xsl:param>

  <xsl:key name="BACKLINKS" match="teix:egXML[@corresp]"
	   use="substring-after(@corresp,'#')"/>
  
  <xsl:key name="BACKLINKS" match="tei:ptr[@type='cit']"
	 use="substring-after(@target,'#')"/>


  <xsl:template name="copyrightStatement">Copyright TEI Consortium 2007</xsl:template>

  <xsl:template name="metaHook">
    <xsl:param name="title"/>
    <meta name="DC.Title" content="{$title}"/>
    <meta name="DC.Language" content="(SCHEME=iso639) en"/> 
    <meta name="DC.Creator" content="TEI,Oxford University Computing Services, 13 Banbury Road, Oxford OX2 6NN, United Kingdom"/>
    <meta name="DC.Creator.Address" content="tei@oucs.ox.ac.uk"/>
  </xsl:template>
  

  <xsl:template name="startDivHook">
    <xsl:if
      test="not(parent::tei:div) or not(local-name(preceding::*[1])='head')">
      <div>
	<xsl:choose>
        <xsl:when test="not(parent::tei:div) and child::tei:div">
	  <xsl:attribute name="class">
	    <xsl:text>miniTOC miniTOC_left</xsl:text>
	  </xsl:attribute>
	  <xsl:call-template name="subtoc"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:attribute name="class">
	    <xsl:text>miniTOC miniTOC_right</xsl:text>
	  </xsl:attribute>
	</xsl:otherwise>
	</xsl:choose>
	<ul class="subtoc">
	  <li class="subtoc"><xsl:call-template name="previousLink"/></li>
	  <li class="subtoc"><xsl:call-template name="nextLink"/></li>
	  <li class="subtoc"><a class="navigation" href="index.html">
	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">homeWord</xsl:with-param>
	  </xsl:call-template>
	  </a> | <a
	  class="navigation" href="index-toc.html">
	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">tocWords</xsl:with-param>
	  </xsl:call-template>
	  </a></li>
	  <li class="subtoc">
	  <xsl:choose>
	    <xsl:when test="self::tei:elementSpec">
		<a class="navigation" href="REF-ELEMENTS.html">
		  <xsl:call-template name="showHead">
		    <xsl:with-param name="ID">
		      <xsl:text>REF-ELEMENTS</xsl:text>
		    </xsl:with-param>
		  </xsl:call-template>
		</a>
	    </xsl:when>
	    <xsl:when test="self::tei:classSpec[@type='model']">
		<a class="navigation" href="REF-CLASSES-MODEL.html">
		  <xsl:call-template name="showHead">
		    <xsl:with-param name="ID">
		      <xsl:text>REF-CLASSES-MODEL</xsl:text>
		    </xsl:with-param>
		  </xsl:call-template>
		</a>
	    </xsl:when>
	    <xsl:when test="self::tei:classSpec[@type='atts']">
		<a class="navigation" href="REF-CLASSES-ATTS.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>REF-CLASSES-ATTS</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
		</a>
	    </xsl:when>
	    <xsl:when test="self::tei:macroSpec">
		<a class="navigation" href="REF-MACROS.html">
		  <xsl:call-template name="showHead">
		    <xsl:with-param name="ID">
		      <xsl:text>REF-MACROS</xsl:text>
		    </xsl:with-param>
		  </xsl:call-template>
		</a>
	    </xsl:when>
	    <xsl:otherwise>
	      <!--
	      <xsl:for-each select="ancestor::tei:div">
		<div>
		  <xsl:attribute name="style">
		    <xsl:text>margin-left:</xsl:text>
		    <xsl:value-of select="count(ancestor::tei:div) + 1"/>
		    <xsl:text>em;</xsl:text>
		  </xsl:attribute>
		  <xsl:text>&#x21B3;</xsl:text>
		<a class="UP">
		  <xsl:attribute name="href">
		    <xsl:apply-templates mode="generateLink"
					 select="."/>
		  </xsl:attribute>
		  <xsl:call-template name="headerLink">
		    <xsl:with-param name="minimal"
				    select="$minimalCrossRef"/>
		  </xsl:call-template>
		</a>
		</div>
	      </xsl:for-each>
	      -->
	    </xsl:otherwise>
	  </xsl:choose>
	  </li>
	</ul>
      </div>
    </xsl:if>
  </xsl:template>


  <xsl:template name="mainPage">
    <xsl:param name="currentID"/>
    <xsl:call-template name="teiTOP"/>
    <div id="onecol" class="main-content">
      <xsl:call-template name="mainFrame">
        <xsl:with-param name="currentID" select="$currentID"/>
        <xsl:with-param name="minimal">true</xsl:with-param>
      </xsl:call-template>
      <xsl:if test="$currentID=''">
        <div style="float:left; margin:4%;">
          <h3>
	  	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Versions of the Guidelines</xsl:with-param>
		  </xsl:call-template>
	  </h3>
          <ul>
            <li>
              <a href="index-toc.html">
	      	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">tocWords</xsl:with-param>
		  </xsl:call-template>
	      </a>
            </li>
            <li>
              <a href="guidelines.pdf">PDF</a>
            </li>
            <li><a
              href="http://www.tei-c.org/Council/tcw06.xml">
	      	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Getting the most recent version</xsl:with-param>
		  </xsl:call-template>
	    </a></li>
            <li><a
              href="http://tei.svn.sourceforge.net/viewvc/tei/">
              	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Sourceforge Subversion Repository</xsl:with-param>
		  </xsl:call-template>
	    </a></li>
            <li>
              <a
                href="http://sourceforge.net/tracker/?group_id=106328&amp;func=browse">
	      	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">BugsFeatures</xsl:with-param>
		  </xsl:call-template>
	      </a>
	    </li>
          </ul>
        </div>
        <div style="float:left; margin:4%;">
          <h3>
	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Some Popular Sections</xsl:with-param>
	  </xsl:call-template>
	  </h3>
          <ul>
            <li>
	      <a href="AB.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>AB</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="ST.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>ST</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="SG.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>SG</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="HD.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>HD</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="CO.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>CO</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="REF-CLASSES-MODEL.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>REF-CLASSES-MODEL</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="REF-CLASSES-ATTS.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>REF-CLASSES-ATTS</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="REF-ELEMENTS.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>REF-ELEMENTS</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
            <li>
	      <a href="USE.html">
		<xsl:call-template name="showHead">
		  <xsl:with-param name="ID">
		    <xsl:text>USE</xsl:text>
		  </xsl:with-param>
		</xsl:call-template>
	      </a>
            </li>
          </ul>
        </div>


        <xsl:variable name="name">TEI Guidelines TOC </xsl:variable>
        <xsl:call-template name="outputChunk">
          <xsl:with-param name="ident">
            <xsl:text>index-toc</xsl:text>
          </xsl:with-param>
          <xsl:with-param name="content">
            <html>
              <xsl:comment>THIS IS A GENERATED FILE. DO NOT EDIT (99) </xsl:comment>
              <head>
                <title>
                  <xsl:value-of select="$name"/>
                </title>
                <xsl:choose>
                  <xsl:when test="$cssFile = ''"/>
                  <xsl:when test="$cssFileInclude='true'">
                    <style>
		      <include href="{$cssFile}" parse="text" xmlns="http://www.w3.org/2001/XInclude"/>
		    </style>
                  </xsl:when>
                  <xsl:otherwise>
                    <link href="{$cssFile}" rel="stylesheet"
                      type="text/css"/>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="not($cssSecondaryFile = '')">
                  <link href="{$cssSecondaryFile}" rel="stylesheet"
                    type="text/css"/>
                </xsl:if>
                <meta
                  content="Text Encoding Initiative Consortium XSLT stylesheets"
                  name="generator"/>
                <meta content="{$name}" name="DC.Title"/>
                <meta content="application/xhtml+xml; charset=utf-8"
                  http-equiv="Content-Type"/>
                <xsl:call-template name="includeJavascript"/>
                <xsl:call-template name="javascriptHook"/>
              </head>
              <body id="TOP">
                <xsl:attribute name="onload">
                  <xsl:text>startUp()</xsl:text>
                </xsl:attribute>
                <xsl:call-template name="bodyHook"/>
		<xsl:call-template name="teiTOP"/>
		<div id="onecol" class="main-content">
		  <xsl:call-template name="mainTOC"/>
		</div>
                <xsl:call-template name="stdfooter"/>
              </body>
            </html>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:if>
      <xsl:call-template name="stdfooter"/>

    </div>
  </xsl:template>


  <xsl:template name="showHead">
    <xsl:param name="ID"/>
    <xsl:variable name="Here" select="/"/>
    <xsl:for-each select="document('')">
      <xsl:choose>
	<xsl:when
	    test="key('HEADS',concat($documentationLanguage,$ID))">
	  <xsl:for-each select="key('HEADS',concat($documentationLanguage,$ID))">
	    <xsl:value-of select="."/>
	  </xsl:for-each>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:for-each select="$Here">
	    <xsl:for-each select="key('IDS',$ID)">
	      <xsl:value-of select="tei:head"/>
	    </xsl:for-each>
	  </xsl:for-each>
      </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>
  </xsl:template>

  <xsl:template name="numberFrontDiv">
    <xsl:param name="minimal"/>
    <xsl:if test="count(ancestor::tei:div)&lt;2">
      <xsl:number count="tei:div" format="i.i" level="multiple"/>
      <xsl:if test="$minimal='false'">
	<xsl:value-of select="$numberSpacer"/>
      </xsl:if>
    </xsl:if>
  </xsl:template>

  <xsl:template name="pageHeader">
    <xsl:param name="mode"/>
    <xsl:call-template name="makeHTMLHeading">
      <xsl:with-param name="class">title</xsl:with-param>
      <xsl:with-param name="text">
        <xsl:call-template name="generateTitle"/>
      </xsl:with-param>
      <xsl:with-param name="level">1</xsl:with-param>
    </xsl:call-template>

    <xsl:call-template name="makeHTMLHeading">
      <xsl:with-param name="class">subtitle</xsl:with-param>
      <xsl:with-param name="text">
        <xsl:call-template name="generateSubTitle"/>
      </xsl:with-param>
      <xsl:with-param name="level">2</xsl:with-param>
    </xsl:call-template>

  </xsl:template>

  <xsl:template name="stdheader">
    <xsl:param name="title" select="'(no title)'"/>
    <xsl:call-template name="pageHeader"/>
  </xsl:template>

  <xsl:template match="tei:titlePage">
    <!--
	<div class="titlePage">
	<h1>
	<xsl:apply-templates
	select="tei:docTitle/tei:titlePart/tei:title"/>
	</h1>
	<h2>
	<xsl:value-of select="tei:docAuthor"/>
	</h2>
	</div>
    -->
  </xsl:template>



  <!-- JC Adding headings -->
  <xsl:template name="class_toc">
    <xsl:param name="depth"/>
    <xsl:text>toc</xsl:text>
    <xsl:text> </xsl:text>
    <xsl:text>toc</xsl:text>
    <xsl:value-of select="$depth"/>
  </xsl:template>

  <xsl:template name="continuedToc">
    <xsl:if
      test="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
      <ul class="toc">
        <xsl:apply-templates mode="maketoc"
          select="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6"
        />
      </ul>
    </xsl:if>
  </xsl:template>

  <xsl:template match="tei:div" mode="maketoc">
    <xsl:param name="forcedepth"/>
    <xsl:variable name="myName">
      <xsl:value-of select="local-name(.)"/>
    </xsl:variable>
    <xsl:if test="tei:head or $autoHead='true'">
      <xsl:variable name="Depth">
        <xsl:choose>
          <xsl:when test="not($forcedepth='')">
            <xsl:value-of select="$forcedepth"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$tocDepth"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="thislevel">
	<xsl:value-of select="count(ancestor::tei:div)"/>
      </xsl:variable>
      <xsl:variable name="pointer">
        <xsl:apply-templates mode="generateLink" select="."/>
      </xsl:variable>
      <li>
	<xsl:choose>
	<xsl:when test="not(ancestor::tei:div) and tei:div">
	  <xsl:attribute name="class">
	    <xsl:text>tocTree</xsl:text>
	  </xsl:attribute>
	  <a class="collapsed" 
	     title="Click here to expand list of sections in this chapter" 
	     href="#" onclick="toggleToc(this);return false;">&#160;</a>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:attribute name="class">
	    <xsl:text>toc</xsl:text>
	  </xsl:attribute>
	  <a class="normaltoc">&#160;</a>
	</xsl:otherwise>
	</xsl:choose>
	<xsl:call-template name="header">
	  <xsl:with-param name="toc" select="$pointer"/>
	  <xsl:with-param name="minimal">false</xsl:with-param>
	  <xsl:with-param name="display">plain</xsl:with-param>
	</xsl:call-template>
	<xsl:if test="$thislevel &lt; $Depth">
	    <xsl:call-template name="continuedToc"/>
        </xsl:if>
      </li>
    </xsl:if>
  </xsl:template>

  <xsl:template name="mainTOC">
    <xsl:param name="force"/>

    <div class="toc_back">
      <h3>
      	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Back Matter</xsl:with-param>
	  </xsl:call-template>
      </h3>
      <xsl:for-each
	  select="ancestor-or-self::tei:TEI/tei:text/tei:back">
	<xsl:if
	    test="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
	  <ul class="toc{$force} toc_back">
	    <xsl:apply-templates mode="maketoc"
				 select="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
	      <xsl:with-param name="forcedepth" select="$force"/>
              </xsl:apply-templates>
	  </ul>
	</xsl:if>
      </xsl:for-each>
    </div>

    <div class="toc_front">
      <h3>
      	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Front Matter</xsl:with-param>
	  </xsl:call-template>
      </h3>
      <xsl:for-each
	  select="ancestor-or-self::tei:TEI/tei:text/tei:front">
	<xsl:if
	    test="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
	  <ul class="toc{$force} toc_front">
	    <xsl:apply-templates mode="maketoc"
				 select="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
	      <xsl:with-param name="forcedepth" select="$force"/>
	    </xsl:apply-templates>
            </ul>
	</xsl:if>
      </xsl:for-each>
    </div>

    <div class="toc_body">
      <h3>
      	  <xsl:call-template name="i18n">
	    <xsl:with-param name="word">Text body</xsl:with-param>
	  </xsl:call-template>
      </h3>
      <xsl:for-each
        select="ancestor-or-self::tei:TEI/tei:text/tei:body">
        <xsl:if
          test="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
          <ul class="toc{$force}  toc_body">
            <xsl:apply-templates mode="maketoc"
              select="tei:div|tei:div0|tei:div1|tei:div2|tei:div3|tei:div4|tei:div5|tei:div6">
              <xsl:with-param name="forcedepth" select="$force"/>
            </xsl:apply-templates>
          </ul>
        </xsl:if>
      </xsl:for-each>
    </div>

  </xsl:template>


  <xsl:template match="tei:divGen[@type='toc']"/>

  <xsl:template name="javascriptHook">
    <script type="text/javascript" src="udm-all.js">
       <xsl:comment>&#160;</xsl:comment>
    </script>
    <xsl:call-template name="jsForOdds"/>

  </xsl:template>

  <xsl:template name="sectionHeadHook">
    <xsl:variable name="ident">
      <xsl:apply-templates mode="ident" select="."/>
    </xsl:variable>
    <xsl:variable name="d">
      <xsl:apply-templates mode="depth" select="."/>
    </xsl:variable>
    <xsl:if test="$d &gt; 0">
    <span class="bookmarklink">
      <a class="bookmarklink" href="#{$ident}">
	<xsl:attribute name="title">
	  <xsl:text>link to this section </xsl:text>
	</xsl:attribute>
	<span class="invisible">
	  <xsl:text>TEI: </xsl:text>
	  <xsl:value-of select="tei:head[1]"/>
	</span>
	<xsl:text>&#x00B6;</xsl:text>
      </a>
    </span>
    </xsl:if>
  </xsl:template>

  <xsl:template match="/div"> </xsl:template>


  <xsl:template name="myi18n">
    <xsl:param name="word"/>
    <xsl:choose>
      <xsl:when test="$word='previousWord'">
        <span class="icon">
          <xsl:text>&#xab; </xsl:text>
        </span>
      </xsl:when>
      <xsl:when test="$word='upWord'">
        <span class="icon">
          <xsl:text>&#8593; </xsl:text>
        </span>
      </xsl:when>
      <xsl:when test="$word='nextWord'">
        <span class="icon">
          <xsl:text>&#xbb; </xsl:text>
        </span>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

<!-- link from bibl back to egXML -->
<xsl:template match="tei:listBibl/tei:biblStruct|tei:listBibl/tei:bibl">
  <xsl:apply-templates/>
  <xsl:for-each select="key('BACKLINKS',@xml:id)">
    <xsl:if test="self::teix:egXML">
      <xsl:text> </xsl:text>
      <a class="link_return"
	 title="Go back to text">
	<xsl:attribute name="href">
	  <xsl:apply-templates select="." mode="generateLink"/>
	</xsl:attribute>
	<xsl:text>&#8629;</xsl:text>
      </a>
    </xsl:if>
  </xsl:for-each>
</xsl:template>

<xsl:template name="egXMLHook">
  <xsl:if test="@corresp and key('IDS',substring-after(@corresp,'#'))">
    <div style="float: right;">
	<a>
	  <xsl:attribute name="href">
	    <xsl:apply-templates mode="generateLink"
				 select="key('IDS',substring-after(@corresp,'#'))"/>
	  </xsl:attribute>
	  <xsl:text>bibliography</xsl:text>
<!--	  <span class="citLink">&#x270d;</span>-->
	</a>
    </div>
  </xsl:if>
</xsl:template>


<xsl:template name="figureHook">
  <xsl:if test="@corresp and key('IDS',substring-after(@corresp,'#'))">
    <div style="float: right;">
      <a>
	<xsl:attribute name="href">
	  <xsl:apply-templates mode="generateLink"
			       select="key('IDS',substring-after(@corresp,'#'))"/>
	</xsl:attribute>
	<xsl:text>bibliography</xsl:text>
      </a>
    </div>
  </xsl:if>
</xsl:template>


  <xsl:template name="stdfooter">
    <xsl:param name="style" select="'plain'"/>
    <xsl:variable name="date">
      <xsl:call-template name="generateDate"/>
    </xsl:variable>
    <xsl:variable name="author">
      <xsl:call-template name="generateAuthor"/>
    </xsl:variable>
    <div class="stdfooter">
    <p>
    [<a href="../../en/html/">English</a>]
    [<a href="../../de/html/">Deutsch</a>]
    [<a href="../../es/html/">Español</a>]
    [<a href="../../it/html/">Italiano</a>]
    [<a href="../../fr/html/">Français</a>]
    [<a href="../../ja/html/">日本語</a>]
    [<a href="../../zh-tw/html/">中文</a>]
    </p>
      <hr/>
      <xsl:if test="$linkPanel='true'">
        <div class="footer">
          <xsl:if test="not($parentURL='')"><a class="{$style}"
              href="{$parentURL}">
              <xsl:value-of select="$parentWords"/>
            </a>  </xsl:if>
          <xsl:if test="$searchURL"> | <a class="{$style}" href="{$searchURL}"
              target="_top">
              <xsl:call-template name="searchWords"/>
            </a>
          </xsl:if>
          <xsl:if test="$feedbackURL"> | <a class="{$style}" href="{$feedbackURL}">
              <xsl:call-template name="feedbackWords"/>
            </a>
          </xsl:if>
        </div>
        <hr/>
      </xsl:if>
      <address>
        <xsl:call-template name="copyrightStatement"/>
        <xsl:text> </xsl:text>
        <a href="COPYING.txt">Licensed under the GPL.</a>
        <xsl:text> Copying and redistribution is permitted and encouraged. </xsl:text>
	<br/>
        <xsl:text>Version </xsl:text>
        <xsl:value-of 
select="ancestor-or-self::tei:TEI/tei:teiHeader/tei:fileDesc/tei:editionStmt/tei:edition"/>
        <xsl:text>This page generated on </xsl:text> 
	<xsl:call-template name="whatsTheDate"/>

    </address>
    </div>
  </xsl:template>

<xsl:template name="teiTOP">
  <xsl:param name="name"/>
  
  <script type="text/javascript" src="udm-dom.js">
    <xsl:comment>&#160;</xsl:comment>
  </script>
  <script type="text/javascript" src="udm-mod-keyboard.js">
    <xsl:comment>&#160;</xsl:comment>
  </script>
  
  <div id="container">
    <a href="#contentstart" 
       title="Skip to content" 
       class="skip">skip to content</a>
    <div id="banner">
      <img src="Images/banner.jpg"
	   alt="Text Encoding Initiative logo and banner"/>
    </div>
    
    <xsl:copy-of select="document('staticnav.xml')/html:ul"/>
  </div>
  <div
      class="mainhead">
    <h1>P5: 
    <xsl:call-template name="i18n">
      <xsl:with-param name="word">GuidelinesTEI</xsl:with-param>
    </xsl:call-template>
    </h1>
  </div>
</xsl:template>

<heads xmlns="http://www.tei-c.org/ns/1.0">
<head xml:lang="fr" corresp="AB">À propos des Principes directeurs</head>
<head xml:lang="fr" corresp="AI">Mécanismes analytiques simples</head>
<head xml:lang="fr" corresp="BIB">Bibliographie</head>
<head xml:lang="fr" corresp="CC">Corpus linguistiques</head>
<head xml:lang="fr" corresp="CE">Degré de certitude et responsabilité</head>
<head xml:lang="fr" corresp="CH">Langues et jeux de caractères </head>
<head xml:lang="fr" corresp="CO">Éléments disponibles pour tous les documents TEI</head>
<head xml:lang="fr" corresp="COL">Colophon</head>
<head xml:lang="fr" corresp="dedication">Dédicace</head>
<head xml:lang="fr" corresp="DI">Dictionnaires</head>
<head xml:lang="fr" corresp="DR">Théâtre</head>
<head xml:lang="fr" corresp="DS">Structure textuelle par défaut</head>
<head xml:lang="fr" corresp="FS">Structures de traits</head>
<head xml:lang="fr" corresp="FT">Tableaux, formules et graphiques</head>
<head xml:lang="fr" corresp="GD">Graphes, réseaux et arbres</head>
<head xml:lang="fr" corresp="HD">En-tête TEI</head>
<head xml:lang="fr" corresp="MS">Description de manuscrits</head>
<head xml:lang="fr" corresp="ND">Noms, dates, personnes et lieux</head>
<head xml:lang="fr" corresp="NH">Structures non hiérarchiques</head>
<head xml:lang="fr" corresp="PH">Représentation de sources primaires</head>
<head xml:lang="fr" corresp="PREF">Préface et remerciements</head>
<head xml:lang="fr" corresp="PREFS">Notes préliminaires </head>
<head xml:lang="fr" corresp="REF-CLASSES-ATTS">Classes attributives</head>
<head xml:lang="fr" corresp="REF-CLASSES-MODEL">Classes structurales</head>
<head xml:lang="fr" corresp="REF-ELEMENTS">Éléments</head>
<head xml:lang="fr" corresp="REF-MACROS">Types de données et autres macros </head>
<head xml:lang="fr" corresp="SA">Liens, segmentation et alignement</head>
<head xml:lang="fr" corresp="SG">Petite introduction à XML</head>
<head xml:lang="fr" corresp="ST">Infrastructure de la TEI</head>
<head xml:lang="fr" corresp="TC">Apparat critique</head>
<head xml:lang="fr" corresp="TD">Éléments de déclaration d’un modèle</head>
<head xml:lang="fr" corresp="TitlePageVerso">Versions des Principes directeurs</head>
<head xml:lang="fr" corresp="TS">Transcriptions de la parole</head>
<head xml:lang="fr" corresp="USE">Utiliser la TEI</head>
<head xml:lang="fr" corresp="VE">Poésie</head>
<head xml:lang="fr" corresp="WD">Représentation des caractères et des glyphes non standard</head>
</heads>


</xsl:stylesheet>
