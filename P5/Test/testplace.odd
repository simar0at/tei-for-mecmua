<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:lang="en"  xmlns="http://www.tei-c.org/ns/1.0"
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:rng="http://relaxng.org/ns/structure/1.0"
 n="testndextra">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Draft proposals for representation of geographic information</title>
<!--            <author>Lou Burnard and Sebastian Rahtz</author>-->
         </titleStmt>
         <publicationStmt>
	   <p> </p>
	 </publicationStmt>
         <sourceDesc>
            <p>authored from scratch</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
<text>
<body>
<div xmlns:rng="http://relaxng.org/ns/structure/1.0"
     xmlns="http://www.tei-c.org/ns/1.0"     
     xmlns:gml="http://www.opengis.net/gml">


<div xmlns="http://www.tei-c.org/ns/1.0" type="div2" xml:id="NDX" >

<head>Places</head>

<p>In section X of the Guidelines, we discuss various ways of naming
places such as towns, countries etc. In much the same way as these
guidelines distinguish between the encoding of names for people and
the encoding of other data about people, so they also distinguish
between the encoding of names for places and the encoding of other
data about places. In this section we present elements which may be
used to record in a structured way data about places of any kind which
might be named or referenced within a text. Such data may be useful as
a way of normalising or standardizing references to particular places,
as the raw material for a gazeteer or similar reference document
associated with a particular text or set of texts, or in conjunction
with any form of geographical information system.</p>

<p>The following elements are provided for this purpose:
<specList>
<specDesc key="listPlace"/>
<specDesc key="place"/>
</specList>
</p>

<p>A <gi>place</gi> element will usually contain at least one, and
possibly several, <gi>placeName</gi>-like elements indicating the
names associated with it, by different people or at different times.
A place is defined, however, by its physical location. Locations may
be specified in a number of ways: as a set of co-ordinates defining a
point or an area on the surface of the earth, or by providing a
description of how the place may identified, usually in terms of other
placeNames. For example, we can identify the location of the Canadian
city of London, either by specifying its latitute and longitude, or by
specifying that we mean the city called London located in the province
called Ontario within the country called Canada. </p>

<p>In addition we may wish to supply a brief characterization of the place
identified, for example to state that it is a city, 
an administrative area such as a country, or a landmark of some kind
such as a monument or a battlefield. The following elements are
available within <gi>place</gi> for these purposes:
<specList>
<specDesc key="placeName"/>
<specDesc key="location"/> 
<!--specDesc key="locale"/-->
</specList>
</p>

<p> For example, the modern city of Lyon in France was in Roman times
known as Lugdunum. Although the modern and the Roman city are not
physically co-extensive, they have significant areas which overlap,
and we may therefore wish to regard them as the same place. In the
following example, we have defined the place <soCalled>Lyon</soCalled>
in terms of its geographical
co-ordinates specified using the Geographical Markup Language being
defined by the OGC<note place="foot">The OGC is an international
voluntary consensus standards organization whose members maintain the
Geography Markup Language standard. The OGC coordinates with the ISO
TC 211 standards organization to maintain consistency between OGC and
ISO standards work. GML is in the process of being adopted as an ISO
standard (ISO 19136) and is expected to be released as an
International Standard in 2007.</note> and indicated the two names
associated with it at different times:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="LYON1">
<placeName notBefore="1400">Lyon</placeName>
<placeName notAfter="56">Lugdunum</placeName>
<location><gml:Polygon>
  <gml:exterior>
   <gml:LinearRing>
   45.256 -110.45 46.46 -109.48 43.84 -109.86 45.8 -109.2 45.256 -110.45
   </gml:LinearRing>
   </gml:exterior>
</gml:Polygon></location>
<locale>city</locale>
</place>
</egXML>
</p>

<p>Alternatively, or in addition, we might identify Lyon by its
geo-political status as a settlement within a country forming part of
a larger political entity, independent of its geographic location:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="LYON2">
<placeName notBefore="1400">Lyon</placeName>
<placeName notAfter="56">Lugdunum</placeName>
<location><bloc>EU</bloc><country>France</country></location>
<locale>city</locale>
</place>
</egXML>
The elements <gi>bloc</gi> etc. are specialised forms of
<gi>placeName</gi>, as discussed in <ptr target="NDPLGU"/>. </p>

<p>The <att>type</att> attribute is available  to categorize more precisely
both the kind of place concerned, and the kind of name
used to locate it. For example, a single building may be regarded as a
kind of place, and a location component such as
<soCalled>district</soCalled> may be more precisely specified as an
<soCalled>arrondissement</soCalled> as in this example:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place type="building">
<placeName>Brasserie Georges</placeName>
<location>
  <country key="#FR"/>
  <settlement type="city">Lyon</settlement>
  <district type="arrondissement">Perrache</district>
  <placeName type="street">Rue de la Charit√©</placeName>
</location>
<locale>Restaurant</locale>
</place></egXML>

</p>

<p>Over time, a place may change its name but not its location, or its
location and not its name, or both. These possibilities are all
catered for in the same way, by supplying multiple <gi>placeName</gi>
or <gi>location</gi> elements along with attributes taken from the
att.dating class. For example, we may indicate the differing physical
locations of Roman and modern Lyon as follows:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="LYON3">
<placeName notBefore="1400">Lyon</placeName>
<placeName notAfter="-0056">Lugdunum</placeName>
<location notAfter="-0056"><gml:Polygon>
  <gml:exterior>
   <gml:LinearRing>
   45.1 -110.23 46.48 -99.08 31.74 -108.86 45.3 -78.2 42.25 -103.45
   </gml:LinearRing>
   </gml:exterior>
</gml:Polygon></location>
<location notBefore="1950"><gml:Polygon>
  <gml:exterior>
   <gml:LinearRing>
   45.256 -110.45 46.46 -109.48 43.84 -109.86 45.8 -109.2 45.256 -110.45
   </gml:LinearRing>
   </gml:exterior>
</gml:Polygon></location>
</place></egXML></p>



<p>We may know very little about a place: for example, we may know its
location but have no name for it:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="HARRYS">
<location>Junction of Park Street and Charlotte Street</location>
<locale>fire hydrant</locale>
</place>
</egXML>
</p>
<p>We may even wish to treat imaginary places in the same way:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place>
<placename>Atlantis</placename>
<location>Unknown</location>
</place>
</egXML></p>

<p>The <gi>location</gi> element is not solely a way of naming or
identifying a place to a greater or lesser degree of precision: it is
used to physically locate a place whether by means of a name, a set of
names, or a set of co-ordinates. As in the following example, a
<gi>location</gi> sometimes resemble a set of instructions for finding
a place, rather than a name:

<egXML xmlns="http://www.tei-c.org/ns/Examples"><place xml:id="MYF">
<placeName notAfter="1969">Yasgur's Farm</placeName>
<placeName notBefore="1969">Woodstock Festival Site</placeName>
<location>
 <measure>one mile</measure>
 <offset>north west of</offset>
 <settlement>Bethel</settlement>
 <region>New York</region>
</location>
<location scheme="latlong">41.687142 -74.870109</location>
</place>
</egXML>
<!-- or why not have explicit <lat> and <long> elements? -->
</p>

<p>A place may contain other places. The containment relation is
explicitly modelled in XML: thus we can say that the towns of Vilnius
and Kaunas are both in a place called Lithuania as follows:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place>
  <country>Lithuania</country>
  <country xml:lang="lt">Lietuva</country>
  <place>
       <settlement>Vilnius</settlement>
  </place>
  <place>
       <settlement>Kaunas</settlement>
  </place>
</place>     
</egXML>
</p>

<p>This does not, however, imply that Vilnius and Kaunas are the
only places constituting Lithuania; only that they are within it. A
separate <gi>place</gi> element may indicate that it is a part of
Lithuania by supplying a <gi>relation</gi> element, as discussed
below (<ptr target=""/>).</p>

<p>Here is a more complex example, showing the variety of names
associated at different times and in different languages with a set
of hierarchically grouped places -- the settlement of Camarthen
Castle, within the town of Carmarthen, within the administrative county of
Carmarthenshire, Wales.

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="wales" type="country">
  <placeName xml:lang="cy">Cymru</placeName>
  <placeName xml:lang="en">Wales</placeName>
  <placeName xml:lang="la">Wallie</placeName>
  <placeName xml:lang="la">Wallia</placeName>
  <placeName xml:lang="fro">Le Waleis</placeName>
  <place xml:id="carmarthenshire" type="region" >
    <region type="county" xml:lang="en" notBefore="1284">Carmarthenshire</region>
    <place xml:id="carmarthen" type="settlement">
      <placeName xml:lang="en">Carmarthen</placeName>
      <placeName xml:lang="la" notBefore="1090" notAfter="1300">Kaermerdin</placeName>
      <placeName xml:lang="cy">Caerfyrddin</placeName>
      <place xml:id="carmarthen_castle" type="castle">
        <settlement>castle of Carmarthen</settlement>
      </place>
    </place>
  </place>
</place>
</egXML>
</p>
<p>As noted previously, <gi>country</gi>, <gi>region</gi>,
<gi>settlement</gi> are all specializations of the generic
<gi>placename</gi> element, and may not therefore be used as
specializations of the generic <gi>place</gi> element. If it is
desired to distinguish amongst kinds of <emph>place</emph> this can
only be done by means of the <att>type</att> attribute as in the above
example. The use of values for the type attribute which correspond to
the names of a naming element ("country", "region", "settlement") is
recommended when appropriate but not required. 
</p>

<!-- introduce use of listPlace -->


<p>These elements are specializations of the generic
<gi>placeState</gi> element, which performs a role for <gi>place</gi>
elements analogous to that performed for <gi>person</gi> elements by
the <gi>persState</gi> element. Also like people, places may be said
to have traits (characteristics such as climate, geographic type
etc.); we may also wish to record specific events about places, such
as their foundation or destruction. The following generic elements are
available for these purposes:
<specList>
<specDesc key="placeState"/>
<specDesc key="placeTrait"/>
<specDesc key="placeEvent"/>
</specList>
</p>


<p>There is great variation in the kind of information which it might
be desired to record about places; we therefore do not here attempt to
enumerate the possible values which might be appropriate for the
<att>type</att> attribute on any of these generic elements. Places
identified in terms of their human habitation such as countries or
cities might have <gi>placeState</gi>s such as "population",
"administrative status" etc.; they may also have <gi>placeEvent</gi>s
such as "foundation date" or "destruction" etc. Almost any kind of
place is likely to have <gi>placeTrait</gi>s such as "climate",
"terrain" etc. </p>

<p>Examples include:

<egXML xmlns="http://www.tei-c.org/ns/Examples"><place xml:id="IS">
    <placeName xml:lang="en">Iceland</placeName>
    <placeName xml:lang="is">√çsland</placeName>
    <location type="latlong">65 00 N, 18 00 W</location>
    <placeTrait type="area"><p>103,000 sq km</p></placeTrait>
    <placeState type="gov" notBefore="1944"><p>Constitutional
republic</p></placeState>
    <placeState type="gov" notAfter="1944"><p>Part of the kingdom of
<placeName key="#DK">Denmark</placeName></p></placeState>
<placeEvent type="independence" from="1944-06-17"><p> Iceland became independent
on 17 June 1944.</p></placeEvent>
</place></egXML>


</p>

<p>The <gi>relation</gi> element may be used to express relationships
of various kinds between places, or between places and persons, in
much the same way as it is used to express relationships between
persons alone. For example, the islands of
Mauritius, R√©union, and Rodrigues together form the Mascareignes Islands. One
way of representing this is as follows:

<egXML xmlns="http://www.tei-c.org/ns/Examples">

<place type="islandGroup">
  <placeName>Mascareignes Islands</placeName>
  <place type="island">
    <placeName>Mauritius</placeName>
  </place>
  <place type="island">
    <placeName>Rodrigues</placeName>
  </place>
  <place type="island">
    <placeName>R√©union</placeName>
  </place>
</place>
</egXML>

but the same relationship could also be represented as follows:

<egXML xmlns="http://www.tei-c.org/ns/Examples"><listPlace>
  <place type="country" xml:id="FRA">
    <placeName>France</placeName>
  </place>

<place xml:id="MASC">
  <placeName>Mascareigne islands</placeName>
  <listPlace type="island" >
  <place xml:id="MRU">
    <placeName>Mauritius</placeName>
  </place>
  <place  xml:id="ROD">
    <placeName>Rodrigues</placeName>
  </place>
  <place  xml:id="REN">
    <placeName>R√©union</placeName>
  </place>
  </listPlace>
  <listPlace type="attol">
    <place>
      <placeName>La roche qui pleure</placeName>
    </place>
    <place>
      <placeName>Ile aux cerfs</placeName>
    </place>
  </listPlace>
</place>  
  </listPlace>
  <relation type="contains" active="#MASC" passive="#ROD #MRU #REN"/>

  <relation type="partOf" active="#REN" passive="#FRA #MASC"/>
</listPlace>
</egXML>
</p>






</div>

<!--


MD: Empire State Bldg
TP: Wroclaw 
OR: Mount Sinai + examples from Lind
SR: Protestant Cemetery 
TT: Lithuania

place examples from each by end of next week.
-->

<div>
<head>Here are some more extensive examples</head>
<p>The Protestant Cemetery in Rome:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
          <place xmlns="http://www.tei-c.org/ns/1.0" xml:id="ProtCem">
            <placeName>Protestant Cemetery</placeName>
            <placeName xml:lang="en">English Cemetery</placeName>
            <placeName type="official" xml:lang="it">Cimitero
 Acattolico</placeName>
            <location type="geopolitical">
              <country>Italy</country>
              <settlement>Rome</settlement>
              <district>Testaccio</district>
            </location>

<!--            <placeState type="address">
              <p>
                <address>
                  <addrLine>Via Caio Cestio, 6</addrLine>
                  <addrLine>00153 Roma</addrLine>
                </address>
              </p>
            </placeState> shd be a location -->
    
            <location scheme="postcode">I 00153</location>

            <location xmlns:gml="http://www.opengis.net/gml">
              <gml:Point srsDimension="2" srsName="urn:ogc:def:crs:EPSG:6.6:4326">
                <gml:pos>41.876143755230956 12.479267120361328</gml:pos>
              </gml:Point>
            </location>
            <placeTrait>
              <label>Description</label>
              <p>A cemetery in Rome, located near
   <placeName key="http://www.activitaly.it/monument/portspaolo.htm">Porta
   San Paolo</placeName> alongside the Pyramid of <persName key="#CESTIUS">Cestius</persName>, a small-scale Egyptian-style
   pyramid built in 30 BC as a tomb and later incorporated into the
   section of the <placeName key="http://en.wikipedia.org/wiki/Aurelian_walls"> Aurelian
   Walls</placeName> that borders the cemetery. Mediterranean cypress
   trees and other foliage in the cemetery cause it to mirror the more
   natural style of cemeteries seen in the lusher regions of northern
   Europe. As the name of the cemetery indicates, it is the final
   resting place of non-Catholics (not only Protestants or English
   people).</p>
            </placeTrait>
            <placeEvent from="1732">
              <p>The first recorded burial is that of
 George Langton</p>
            </placeEvent>
            <place>
              <location scheme="local" type="zone">
                <measure unit="zone">z_A</measure>
              </location>
              <location scheme="local" type="box">
                <measure unit="xywh">159.81663 59.166954 6.04424299999999 11.193909"</measure>
              </location>
              <location scheme="local" type="polygon">
                <measure unit="coordpair">161.658991,70.360863 159.81663,69.619326 164.015411,59.166954 165.860873,59.906095</measure>
              </location>
              <placeTrait>
                <label>Size</label>
                <p>
                  <measure>148cm x 96cm</measure>
                </p>
              </placeTrait>
              <placeTrait key="#PLW" type="type"/>
              <placeTrait key="#M_ST" type="material"/>
              <placeTrait key="#c_1" type="condition"/>
            </place>
            <note>
              <bibl>
                <ptr target="http://www.dkinst-rom.dk/protcem/"/>
              </bibl>
              <bibl>
                <ptr target="http://en.wikipedia.org/wiki/Protestant_Cemetery%2C_Rome"/>
              </bibl>
              <bibl>
                <ptr target="http://www.protestantcemetery.it/"/>
              </bibl>
            </note>
          </place>
</egXML>
</p>

<p>The Empire States Building in New York

<egXML xmlns="http://www.tei-c.org/ns/Examples">
          <place xmlns="http://www.tei-c.org/ns/1.0" xml:id="ESB">
            <placeName xml:lang="en">Empire State Building</placeName>
            <location type="address">
              <country>USA</country>
              <region type="state">New York</region>
              <settlement type="city">New York</settlement>
              <placeName>350 Fifth Avenue</placeName>
            </location>
            <location scheme="postcode">
              US 10118-0110
            </location>
            <location scheme="latLong">
              40.7484 -73.9858
            </location>
            <placeState>
              <p>The Empire State Building rises to 1,250 feet (381 m)
              at the 102nd floor, and its full structural height
              (including broadcast antenna) reaches 1,453 feet, 8
              9/16th inches (443 m)</p>
            </placeState>
            <placeState type="floorCount">
              <p>The building is typically described as being 102
              stories tall, although it has only 85 stories of
              commercial and office space, with an observation deck on
              the 86th floor. The remaining 16 stories represent the
              spire, which supports the antenna on top.</p>
            </placeState>
            <placeState type="floorArea">
              <p>The Empire State Building has a total floor area of
              2,200,000 square feet (200,000 square metres).</p>
            </placeState>
            <placeState type="officialStatus" from="1931" to="1972">
              <p>The Empire State Building was the world's tallest
              building for a record 41 years. It was surpassed by the
              North Tower of the <name type="place">World Trade
              Center</name> in 1972, and the <name type="place">Sears
              Tower</name> shortly afterwards. With the destruction of
              the World Trade Center in the <date
              value="2001-09-11">September 11, 2001</date> attacks,
              the Empire State Building again became the tallest
              building in New York City, and the second-tallest
              building in the United States.</p>
            </placeState>
            <placeEvent type="construction" from="1930-03-17" to="1931-05-01">
              <label>Construction</label>
              <p>The Empire State Building was designed by <name
              type="person">William Lamb</name> of the architectural
              firm <name type="firm">Shreve, Lamb and
              Harmon</name>. His design was influenced by the
              perpendicular style of another architect, <name
              type="person">Eliel Saarinen</name>. He happened to base
              most of his design on a simple pencil. The clean,
              soaring lines inspired him, and he modeled the building
              after it.</p>
              <p>The general contractors were <name
              type="firm">Starrett Brothers and Eken</name>, and the
              project was financed by <name type="person">John
              J. Raskob</name> and <name type="person">Pierre
              S. DuPont</name>. The construction company was chaired
              by <name type="person">Alfred E. Smith</name>, a former
              Governor of New York. Excavation of the site began on
              <date value="1930-01-22">January 22, 1930</date>, and
              construction on the building itself started on <date
              value="1930-03-17">March 17</date>. The project involved
              3400 workers, mostly immigrants from Europe, along with
              hundreds of <name type="tribe">Mohawk nation</name> iron
              workers. According to official accounts, five workers
              died during the construction.</p>
              <p>The building was officially opened on <date
              value="1931-05-01">May 1, 1931</date> in dramatic
              fashion, when President <name type="person">Herbert
              Hoover</name> turned on the building's lights with the
              push of a button from <name type="place">Washington,
              D.C.</name></p>
              <bibl>
                <author>Kenneth T. Jackson</author>
                <title level="m">The Encyclopedia of New York City</title>
                <publisher>Yale University Press</publisher>
                <pubPlace>New Haven, CT</pubPlace>
                <date>1995</date>
                <biblScope type="pages">375-376</biblScope>
              </bibl>
            </placeEvent>
            <placeEvent type="accident">
              <label>Accident</label>
              <p>At 9:49 a.m. on Saturday <date
              value="1945-07-28">July 28, 1945</date>, a B-25 Mitchell
              bomber piloted by Lieutenant Colonel <name
              type="person">William F. Smith Jr.</name> accidentally
              crashed into the north side of the Empire State Building
              between the 79th and 80th floors, where the offices of
              the <name type="org">Catholic War Relief Office</name>
              were located. One engine shot through the side opposite
              the impact and another plummeted down an elevator
              shaft. The fire was extinguished in 40 minutes.
              Fourteen people were killed in the incident. Despite the
              damage and loss of life, the building was open for
              business on many floors on the following Monday.</p>
              <p>Elevator operator <name type="person">Betty Lou
              Oliver</name> survived a plunge of 75 stories inside an
              elevator, which still stands as the Guinness World
              Record for the longest survived elevator fall
              recorded.</p>
            </placeEvent>
            <placeEvent type="popularCultural">
              <label>Popular Culture</label>
              <p>Perhaps the most famous popular culture
              representation of the building is in the <date
              value="1933">1933</date> film <title>King Kong</title>,
              in which the title character, a giant ape, climbs to the
              top to escape his captors.</p>
            </placeEvent>
          </place>
</egXML>
</p>
</div>

<div>
<head>Formal definitions</head>
<p>The following example schema, called testplace,  may be used to test the 
proposal described here.</p>
    <schemaSpec ident="testplace" start="TEI listPlace">
      <moduleRef key="header"/>
      <moduleRef key="core"/>
      <moduleRef key="tei"/>
      <moduleRef key="namesdates"/>
      <moduleRef key="textstructure"/>
      <moduleRef key="corpus"/>

      <elementSpec  ident="place" mode="add">
	<desc>contains the definition for a place</desc>
	<classes>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeLike"/>
	</classes>
	<content>
	  <rng:zeroOrMore>
	    <rng:choice>
	      <rng:ref name="model.nameLike"/>
	    <rng:ref name="model.placeStateLike"/>
	    <rng:ref name="model.placeTraitLike"/>
	    <rng:ref name="model.placeEventLike"/>
	    <rng:ref name="model.placeLike"/>
	    <rng:ref name="model.noteLike"/>
	    </rng:choice>	 
	  </rng:zeroOrMore>
	</content>
	
      </elementSpec>

<elementSpec ident="locale" mode="change">
<classes>
<memberOf key="model.placeTraitLike"/>
</classes>
</elementSpec>



      <elementSpec  ident="location" mode="add">
	<desc>contains the location of a place</desc>
	<classes>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeStateLike"/>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	</classes>
	<content>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:text/>
	      <rng:ref name="anyGML"/>
	      <rng:ref name="model.nameLike"/>
	      <rng:ref name="model.placeNamePart"/>
	      <rng:ref name="model.measureLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	</content>
	<attList>
	  <attDef ident="scheme">
	    <desc>defines how the content of the element should be
	    interpreted in the case where it is given as text only</desc> 
	    <valList type="closed" repeatable="false">
	      <valItem ident="latlong"><desc>
		a pair of numbers to be interpreted as latitude followed by
		longitude according to a specified datum, by default WGS84</desc></valItem>
	      <valItem ident="local"/>
	      <valItem ident="other"/>
	    </valList>
	  </attDef>
	</attList>
      </elementSpec>

      <elementSpec  ident="placeTrait" mode="add">
	<desc>a trait of a place</desc>
	<classes>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeTraitLike"/>
	</classes>
	<content>
	  <rng:group>
	    <rng:optional>
	      <rng:ref name="label"/>
	    </rng:optional>
	    <rng:optional>
	      <rng:ref name="model.dateLike"/>
	    </rng:optional>
	    <rng:zeroOrMore>
	      <rng:ref name="model.pLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:ref name="model.noteLike"/>
		<rng:ref name="model.biblLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	  </rng:group>
	</content>

      </elementSpec>

      <elementSpec  ident="placeState" mode="add">
	<desc>a State of a place</desc>
	<classes>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeStateLike"/>
	</classes>
	<content>
	  <rng:group>
	    <rng:optional>
	      <rng:ref name="label"/>
	    </rng:optional>
	    <rng:optional>
	      <rng:ref name="model.dateLike"/>
	    </rng:optional>
	    <rng:zeroOrMore>
	      <rng:ref name="model.pLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:ref name="model.noteLike"/>
		<rng:ref name="model.biblLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	  </rng:group>
	</content>

      </elementSpec>

      <elementSpec  ident="placeEvent" mode="add">
	<desc>a event of a place</desc>
	<classes>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeEventLike"/>
	</classes>
	<content>
	  <rng:group>
	    <rng:optional>
	      <rng:ref name="label"/>
	    </rng:optional>
	    <rng:optional>
	      <rng:ref name="model.dateLike"/>
	    </rng:optional>
	    <rng:zeroOrMore>
	      <rng:ref name="model.pLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:ref name="model.noteLike"/>
		<rng:ref name="model.biblLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	  </rng:group>
	</content>

      </elementSpec>

      <elementSpec ident="listPlace" mode="add">
	<equiv/>
	<desc>contains a list of places, optionally followed by a list
	of relationships (other than containment) defined amongst
	them. </desc>
	<classes>
	  <memberOf key="att.typed"/>
	  <memberOf key="att.declarable"/>
	  <memberOf key="model.biblLike"/>
	</classes>
	<content>
	  <rng:oneOrMore>
	    <rng:ref name="model.placeLike"/>
	  </rng:oneOrMore>
	  <rng:zeroOrMore>
	    <rng:ref name="relation"/>
	  </rng:zeroOrMore>
	</content>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="placeName">
	<classes>
	    <memberOf key="model.nameLike"/>
	    <memberOf key="model.placeStateLike"/>
	    <memberOf key="att.naming"/>
	    <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	    <memberOf key="att.editLike"/>
	  </classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="bloc">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="region">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="country">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="settlement">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="district">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	</classes>
      </elementSpec>

      <classSpec ident="model.placeLike" mode="add" type="model">
	<desc>Objects like <gi>place</gi>s</desc>
      </classSpec>
      <classSpec ident="model.placeTraitLike" mode="add" type="model">
	<desc>Objects like <gi>placeTrait</gi>s</desc>
      </classSpec>
      <classSpec ident="model.placeStateLike" mode="add" type="model">
	<desc>Objects like <gi>placeState</gi>s</desc>
      </classSpec>
      <classSpec ident="model.placeEventLike" mode="add" type="model">
	<desc>Objects like <gi>placeEvent</gi>s</desc>
      </classSpec>

    <macroSpec ident="anyGML" mode="add">
     <content>
      <element xmlns="http://relaxng.org/ns/structure/1.0">
       <nsName ns="http://www.opengis.net/gml"/>
       <zeroOrMore>
        <choice>
         <attribute>
          <anyName/>
         </attribute>
         <ref name="anyGML"/>
         <text/>
        </choice>
       </zeroOrMore>
      </element>
     </content>
    </macroSpec>

    </schemaSpec>
</div>
</div></body>
</text>
</TEI>



