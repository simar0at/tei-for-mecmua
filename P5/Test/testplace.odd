<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:lang="en"  xmlns="http://www.tei-c.org/ns/1.0"
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:rng="http://relaxng.org/ns/structure/1.0"
 n="testndextra">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Draft proposals for representation of geographic information</title>
            <author>Lou Burnard and Sebastian Rahtz</author>
         </titleStmt>
         <publicationStmt>
	   <p> </p>
	 </publicationStmt>
         <sourceDesc>
            <p>authored from scratch</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
<text>
<body>
<div xmlns:rng="http://relaxng.org/ns/structure/1.0"
     xmlns="http://www.tei-c.org/ns/1.0"     
     xmlns:gml="http://www.opengis.net/gml">


<div xmlns="http://www.tei-c.org/ns/1.0" type="div2" xml:id="NDX" >

<head>Places</head>

<p>In section X of the Guidelines, we discuss various ways of naming
places such as towns, countries etc. In much the same way as these
guidelines distinguish between the encoding of names for people and
the encoding of other data about people, so they also distinguish
between the encoding of names for places and the encoding of other
data about places. In this section we present elements which may be
used to record in a structured way data about places of any kind which
might be named or referenced within a text. Such data may be useful as
a way of normalising or standardizing references to particular places,
as the raw material for a gazeteer or similar reference document
associated with a particular text or set of texts, or in conjunction
with any form of geographical information system.</p>

<p>The following elements are provided for this purpose:
<specList>
<specDesc key="listPlace"/>
<specDesc key="place"/>
</specList>
</p>

<p>A <gi>place</gi> element will usually contain at least one, and
possibly several, <gi>placeName</gi>-like elements indicating the
names associated with it, by different people or at different times.
A place is defined, however, by its physical location. Locations may
be specified in a number of ways: as a set of co-ordinates defining a
point or an area on the surface of the earth, or by providing a
description of how the place may identified, usually in terms of other
placeNames. For example, we can identify the location of the Canadian
city of London, either by specifying its latitute and longitude, or by
specifying that we mean the city called London located in the province
called Ontario within the country called Canada. </p>

<p>In addition we may wish to supply a brief characterization of the place
identified, for example to state that it is a city, 
an administrative area such as a country, or a landmark of some kind
such as a monument or a battlefield. The following elements are
available within <gi>place</gi> for these purposes:
<specList>
<specDesc key="placeName"/>
<specDesc key="location"/> 
<specDesc key="locale"/>
</specList>
</p>

<p> For example, the modern city of Lyon in France was in Roman times
known as Lugdunum. Although the modern and the Roman city are not
physically co-extensive, they have significant areas which overlap,
and we may therefore wish to regard them as the same place. In the
following example, we have indicated that there is place with
co-ordinates specified by the Geographical Markup Language being
defined by the OGC<note place="foot">The OGC is an international
voluntary consensus standards organization whose members maintain the
Geography Markup Language standard. The OGC coordinates with the ISO
TC 211 standards organization to maintain consistency between OGC and
ISO standards work. GML is in the process of being adopted as an ISO
standard (ISO 19136) and is expected to be released as an
International Standard in 2007.</note> which has the names indicated:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="LYON1">
<placeName notBefore="1400">Lyon</placeName>
<placeName notAfter="-0056">Lugdunum</placeName>
<location><gml:Polygon>
  <gml:exterior>
   <gml:LinearRing>
   45.256 -110.45 46.46 -109.48 43.84 -109.86 45.8 -109.2 45.256 -110.45
   </gml:LinearRing>
   </gml:exterior>
</gml:Polygon></location>
<locale>city</locale>
</place>
</egXML>
</p>

<p>Alternatively, or in addition, we may identify Lyon by its
geo-political status independent of its geographic location:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="LYON2">
<placeName notBefore="1400">Lyon</placeName>
<placeName notAfter="-0056">Lugdunum</placeName>
<location><bloc>EU</bloc><country>France</country></location>
<locale>city</locale>
</place>
</egXML>
</p>

<p>A place may be a single building, and its location may be
specified using any of the specialized forms of placeName defined
elsewhere in this chapter in combination:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="BG123">
<placeName type="building">Brasserie Georges</placeName>
<location>
  <country key="#FR"/>
  <settlement type="city">Lyon</settlement>
  <district type="arrondissement">Perrache</district>
  <placeName type="street">Rue de la Charit√©</placeName>
</location>
<locale>Restaurant</locale>
</place></egXML>

</p>

<p>Over time, a place may change its name but not its location, or its location
and not its name, or both. These possibilities are all
catered for in the same way, by supplying multiple <gi>placeName</gi>
or <gi>location</gi> elements along with attributes taken from the
att.dating class. For example, we may indicate the differing physical
locations of Roman and modern Lyon as follows:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="LYON2">
<placeName notBefore="1400">Lyon</placeName>
<placeName notAfter="-0056">Lugdunum</placeName>
<location notAfter="-0056"><gml:Polygon>
  <gml:exterior>
   <gml:LinearRing>
   45.1 -110.23 46.48 -99.08 31.74 -108.86 45.3 -78.2 42.25 -103.45
   </gml:LinearRing>
   </gml:exterior>
</gml:Polygon></location>
<location notBefore="1950"><gml:Polygon>
  <gml:exterior>
   <gml:LinearRing>
   45.256 -110.45 46.46 -109.48 43.84 -109.86 45.8 -109.2 45.256 -110.45
   </gml:LinearRing>
   </gml:exterior>
</gml:Polygon></location>
</place></egXML></p>



<p>We may know very little about a place: for example, we may know its
location but have no name for it:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place xml:id="HARRYS">
<location><gml:stuff/></location>
<locale>fire hydrant</locale>
</place>

<place>
<location type="dunno" key="#erewhon"/>
</place>
</egXML></p>


<p>A place may contain other places, hierarchically organized:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<place>
  <country>Lithuania</country>
  <country xml:lang="lt">Lietuva</country>
  <place>
       <settlement>Vilnius</settlement>
       <location><gml:wotsit/></location>
  </place>
  <place>
       <settlement>Kaunas</settlement>
  </place>
</place>     
</egXML>
</p>

<!-- following discussion needs to go into NDplace -->

<p>The  <gi>placeName</gi> element is syntactic sugar for <gi>name
type="place"</gi>, and therefore should contain only names or naming
strings. But the naming of places often entails combining many other
names:  even in Texas, the city of Paris is sometimes known as
"Paris, Texas" for example, thus combining the name
of a city with the name of a larger administrative district in order
to provide a complete "name" for the place, which may be tagged as
such:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<placeName>
  <settlement>Paris</settlement>
  <region>Texas</region>
</placeName>
<location>
  <country>USA</country>
  <region type="state">Texas</region>
  <settlement type="city">Paris</settlement>
</location>
</egXML></p>

<p>As this example also shows, all the specialised forms of the
<gi>placeName</gi> element can take a <att>type</att> value to
indicate more specifically the kind of location. The generic
<gi>placeName</gi> element can also be specialised in the same way:
for example, in the absence of a specific <gi>building</gi> element,
we may say: <egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName
type="building">Empire State Building</placeName> </egXML></p>

<p>The <gi>location</gi> element by contrast is not solely a way of
naming a place to a greater or lesser degree of precision: it is used
precisely to locate a place whether by means of a name, a set of
names, or a set of co-ordinates. As in the following example, a
<gi>location</gi> may sometimes resemble a set of instructions for
finding a place, rather than a name:

<egXML xmlns="http://www.tei-c.org/ns/Examples"><place xml:id="MYF">
<placeName notAfter="1969">Yazger's Farm</placeName>
<placeName notBefore="1969">Woodstock Festival Site</placeName>
<location>
 <distance>two miles</distance>
 <offset>north east of</offset>
 <settlement>Woodstock</settlement>
 <region>New York</region>
</location>
<location><gml:thingy>12 34 56 78</gml:thingy></location>
</place>
</egXML>

</p>

<p>These elements  are specializations of the generic
<gi>placeState</gi> element, which performs a role for <gi>place</gi>
elements analogous to that performed for <gi>person</gi> elements by the
<gi>persState</gi> element. Also like people, places may
be said to have traits (characteristics such as climate,
geographic type etc.); we may also wish to record specific events
about places, such as their foundation or destruction. The following generic elements are  available  for these
purposes:
<specList>
<specDesc key="placeState"/>
<specDesc key="placeTrait"/>
<specDesc key="placeEvent"/>
</specList>
</p>
<p>Examples include:

<egXML xmlns="http://www.tei-c.org/ns/Examples"><place xml:id="MRU">
<placeName>Mauritius</placeName>
<placeTrait type="climate">Tropical</placeTrait>
<placeEvent type="political" notBefore="1992">became independent
republic</placeEvent>
</place>


</egXML>

</p>
<p>
Specific things you would record depend on the kind of thing it
is. For example, if you are recording data about cities, you might
need elements population (state), climate (trait), foundation (state),
area (state), administrative status (state), disaster (event). If you
are recording data about a natural place such as a river or lake,
there are likely to be fewer such elements, since most of the
information will be captured as name or location information.
direction of flow. tributaries. route, etc.  are mostly geometric;
their effect on society. Buildings: have owners and their ownership is
transferable; architects, builders, origins. functions. usage. events
such as burning down or rebuilt. Capacity. Public/private. PerceivedStatus.

</p></div>

<!--


MD: Empire State Bldg
TP: Wroclaw 
OR: Mount Sinai + examples from Lind
SR: Protestant Cemetery 
TT: Lithuania

place examples from each by end of next week.
-->

<div>
<head>random examples not all checked</head>
<egXML xmlns="http://www.tei-c.org/ns/Examples">

<place>
<placeState notBefore="-0056" notAfter="800">
<locale>deserted</locale>
</placeState>

<placeState notAfter="-0056"> 
<placeName>
<bloc>Roman Empire</bloc>
<settlement type="city">Lugdunum</settlement>
</placeName>
<location scheme="LatLong">12 14 54 23</location>
<locale>fort</locale>
</placeState>
</place>

<!-- a place can simply have a name -->
<place xml:id="LB">
<placeName>Bacoooun</placeName>
</place>

<!-- a place can be identified as a number of geographic features -->
<place xml:id="BE">
<geogName>Egg Island</geogName>
 <placeDesc>
   <geogName key="#LB">Lake Bacon</geogName>
 </placeDesc>
</place>

<!-- any component of a place can be defined by reference -->
<place xml:id="IM">
<placeName>
<geogName key="#LB"/>
<geogName>Island Mushroom</geogName>
</placeName>
</place>

<place>
<geogName><geog>river</geog>
<geogName>Styx</geogName></geogName>
<placeName key="#XX"/>
</place>


<!-- more complex relationships can be expressed by pointer -->
<relation type="partOf" active="#BE" passive="#LB #CD"/>
<relation type="owns" active="#Lord" passive="#Isl1 #Isl2"/>


<!-- what about twinned cities -->
</egXML>
</div>

</div>
<!-- dont forget names of places have nyms too -->


<!-- 

How to distinguish point locations from area locations? NOP

How are locations defined other than by lat/long. NOP

What about imaginary places ? Atlantis, Hades,  Some
of them e.g. Camelot have had locations proposed for them. Locn not compulsory

What about places on other planets, in other galaxies? e.g. Sea of
Tranquillity has specific map references. How are stars
etc. identified?  NOP

Are places eternal? The location of the Warsaw Ghetto location still exists?
Up to you

What about relationships between places: Hotel within city within
country. region (etc) can have key

What about uncertainty: there was a place somewhere herabouts but we
don't know where. 5 days journey to the east of Heliogabogus.

This could be handled same way as currently proposed:

<placeName>
<distance>two miles</distance>
<offset>north east of</offset>
<placeName>Manchester</placeName>
</placeName>

and we could say it cannot have a place associated with it as it;s too vague
-->

<!-- geog really should be renamed as geogFeature or somesuch; and it
     should not be a member of att.naming since it is generic rather
     than specific so cannot usefully have a key -->


<div>

</div>

<div>
<head>Formal definitions</head>
<p>The following example schema, called testplace,  may be used to test the 
proposal described here.</p>
    <schemaSpec ident="testplace" start="TEI listPlace">
      <moduleRef key="header"/>
      <moduleRef key="core"/>
      <moduleRef key="tei"/>
      <moduleRef key="namesdates"/>
      <moduleRef key="textstructure"/>


      <elementSpec  ident="place" mode="add">
	<desc>contains the definition for a place</desc>
	<classes>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeLike"/>
	</classes>
	<content>
	  <rng:zeroOrMore>
	    <rng:ref name="model.placeStateLike"/>
	  </rng:zeroOrMore>
	  <rng:zeroOrMore>
	    <rng:ref name="model.placeTraitLike"/>
	  </rng:zeroOrMore>
	  <rng:zeroOrMore>
	    <rng:ref name="model.placeEventLike"/>
	  </rng:zeroOrMore>
	  <rng:zeroOrMore>
	    <rng:ref name="model.placeLike"/>
	  </rng:zeroOrMore>
	  <rng:zeroOrMore>
	    <rng:ref name="model.noteLike"/>
	  </rng:zeroOrMore>
	</content>
	
      </elementSpec>

      <elementSpec  ident="location" mode="add">
	<desc>contains the location of a place</desc>
	<classes>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeStateLike"/>
	</classes>
	<content>
	  <rng:choice>
	    <rng:zeroOrMore>
	      <rng:ref name="anyGML"/>
	    </rng:zeroOrMore>	    
	    <rng:zeroOrMore>
	      <rng:ref name="model.nameLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:ref name="model.measureLike"/>
	    </rng:zeroOrMore>
	  </rng:choice>
	</content>
	<attList>
	  <attDef ident="scheme">
	    <valList type="closed" repeatable="true">
	      <valItem ident="local"/>
	      <valItem ident="gml"/>
	      <valItem ident="other"/>
	    </valList>
	  </attDef>
	</attList>
      </elementSpec>

      <elementSpec  ident="placeTrait" mode="add">
	<desc>a trait of a place</desc>
	<classes>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeTraitLike"/>
	</classes>
	<content>
	  <rng:group>
	    <rng:optional>
	      <rng:ref name="label"/>
	    </rng:optional>
	    <rng:optional>
	      <rng:ref name="model.dateLike"/>
	    </rng:optional>
	    <rng:zeroOrMore>
	      <rng:ref name="model.pLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:ref name="model.noteLike"/>
		<rng:ref name="model.biblLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	  </rng:group>
	</content>

      </elementSpec>

      <elementSpec  ident="placeState" mode="add">
	<desc>a State of a place</desc>
	<classes>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeStateLike"/>
	</classes>
	<content>
	  <rng:group>
	    <rng:optional>
	      <rng:ref name="label"/>
	    </rng:optional>
	    <rng:optional>
	      <rng:ref name="model.dateLike"/>
	    </rng:optional>
	    <rng:zeroOrMore>
	      <rng:ref name="model.pLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:ref name="model.noteLike"/>
		<rng:ref name="model.biblLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	  </rng:group>
	</content>

      </elementSpec>

      <elementSpec  ident="placeEvent" mode="add">
	<desc>a event of a place</desc>
	<classes>
	  <memberOf key="att.datable"/>
	  <memberOf key="att.editLike"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	  <memberOf key="model.placeEventLike"/>
	</classes>
	<content>
	  <rng:group>
	    <rng:optional>
	      <rng:ref name="label"/>
	    </rng:optional>
	    <rng:optional>
	      <rng:ref name="model.dateLike"/>
	    </rng:optional>
	    <rng:zeroOrMore>
	      <rng:ref name="model.pLike"/>
	    </rng:zeroOrMore>
	    <rng:zeroOrMore>
	      <rng:choice>
		<rng:ref name="model.noteLike"/>
		<rng:ref name="model.biblLike"/>
	      </rng:choice>
	    </rng:zeroOrMore>
	  </rng:group>
	</content>

      </elementSpec>

      <elementSpec ident="listPlace" mode="add">
	<equiv/>
	<desc>contains a list of places. </desc>
	<classes>
	  <memberOf key="att.typed"/>
	  <memberOf key="att.declarable"/>
	  <memberOf key="model.biblLike"/>
	</classes>
	<content>
	  <rng:oneOrMore>
	    <rng:ref name="model.placeLike"/>
	  </rng:oneOrMore>
	</content>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="placeName">
	<classes>
	    <memberOf key="model.nameLike"/>
	    <memberOf key="model.placeStateLike"/>
	    <memberOf key="att.naming"/>
	    <memberOf key="att.typed"/>
	    <memberOf key="att.datable"/>
	  </classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="bloc">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="region">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="country">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="settlement">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	</classes>
      </elementSpec>

      <elementSpec  module="namesdates" mode="change" ident="district">
	<classes>
	  <memberOf key="model.nameLike"/>
	  <memberOf key="model.placeNamePart"/>
	  <memberOf key="att.naming"/>
	  <memberOf key="att.typed"/>
	</classes>
      </elementSpec>

      <classSpec ident="model.placeLike" mode="add" type="model">
	<desc>Objects like <gi>place</gi>s</desc>
      </classSpec>
      <classSpec ident="model.placeTraitLike" mode="add" type="model">
	<desc>Objects like <gi>placeTrait</gi>s</desc>
      </classSpec>
      <classSpec ident="model.placeStateLike" mode="add" type="model">
	<desc>Objects like <gi>placeState</gi>s</desc>
      </classSpec>
      <classSpec ident="model.placeEventLike" mode="add" type="model">
	<desc>Objects like <gi>placeEvent</gi>s</desc>
      </classSpec>

    <macroSpec ident="anyGML" mode="add">
     <content>
      <element xmlns="http://relaxng.org/ns/structure/1.0">
       <nsName ns="http://www.opengis.net/gml"/>
       <zeroOrMore>
        <choice>
         <attribute>
          <anyName/>
         </attribute>
         <ref name="anyGML"/>
         <text/>
        </choice>
       </zeroOrMore>
      </element>
     </content>
    </macroSpec>

    </schemaSpec>
</div>
</body>
</text>
</TEI>



