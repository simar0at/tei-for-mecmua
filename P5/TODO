Documentation

  - copyright notices

ODD

1. <tagDesc> currently has <rng:text> content. This is because we
   originally intended to allow either <tagDesc target="FOO"/> or
   <tagDesc>foo</tagDesc>, thus opening the door to uncertainty about
   just what <tagDesc target="FOO">bar</tagDesc> might mean. We have
   now gone over to allowing only <tagDesc key="foo"/> where the key
   value corresponds with an <ident> somewhere, so why not make this
   element empty? The only reason I can see for supplying content
   might be if we wanted to allow the facility of over-riding the
   description for some specific element, but not its attributes. so
   <tagDesc key="foo">....</tagDesc>  would replace whatever element
   <desc> foo retrieved with the elliptical content represented here.

2. If no ATTS attribute is supplied, it currently seems to mean
   "describe all my non-inherited attributes". It would be useful to
   have a way of requesting descriptions for some named list (as at
   present), none of my attributes, all my non-inherited atts, and
   possibly all my atts, inherited or not. Proposal: change the
   default behaviour to mean "none", and add the special option "*" to
   mean "all my non-inherited atts".

3. While we're at it, how about renaming it <refDesc>?

4. I have removed the style attribute from <tagList>, thus breaking
   all current tagdocs. If we ever need rendition information, it
   should be supplied in the rend attribute. Probably should hack
   transformP5.xsl to get rid of style="oneline" passim (also to get
   rid of blank lines and things like type="Faisal" on <div1>s, but I
   digress)

5. <tagDesc atts="foo bar"/> should work even if bar is an inherited
   attribute.

6. Similar considerations  apply to <adList>. Do we need this element as
   well as <refDesc>?


7. Did we decide to ax the type attribute on classdoc?

  - look to see how <claDecl> can be removed, and replaced by inline
    <classDoc>; beware of multiple uses, to predeclare things.
  - some macros can be made into superclasses, by adding an attribute
     saying that can include PCDATA at the final moment.
  - make all content models refer only to element classes
  - if more than one <ptr> in <tagDoc>, <entDoc> and <classDoc>, 
    omit first and generate from the other end
  - document equiv:
     <equiv ref="...">fred[@foo]/bar</equiv>
    so <gen> has <equiv>gram[@type='gram']</equiv>
    "type" and "ref" attribute
  -  <eg> to be <exemplum> in <attDef>


ROMA
  - documentation subset

 Feature structures
  - what to export to ISO: a parameterized schema or a baked DTD?
    open to discussion with ISO.
  - datatypes: refer to SC34 domains eg gender. 
  so <sex> says it links
  to ISO-sex. or does the datatype link? or both?
  
