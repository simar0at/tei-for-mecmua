<!--Copyright 2004 TEI Consortium. 
Licensed under the GNU General Public License. 
See the file COPYING for details.
-->
<elementSpec xmlns="http://www.tei-c.org/ns/1.0" module="header" xml:id="STEP" usage="opt" ident="step">
<equiv/>
<gloss>step</gloss>
<desc>specifies one component of a canonical reference defined by
the stepwise method.</desc>
  <content>
    <rng:empty xmlns:rng="http://relaxng.org/ns/structure/1.0"/>
  </content>
  <attList>
    <attDef ident="refunit" usage="rec">
	<equiv/>
	<desc>names the unit (book, chapter, canto, verse, ...) identified
by this step in a canonical reference.</desc>
      <datatype><rng:text xmlns:rng="http://relaxng.org/ns/structure/1.0"/></datatype>
      <valDesc>any string of characters; typically a word or phrase in
some natural language.</valDesc>
      <remarks>
        <p>The provision of this attribute helps make the structure
of the canonical reference much clearer. Its use is strongly recommended.</p>
      </remarks>
    </attDef>
    <attDef ident="length" usage="opt">
	<equiv/>
	<desc>specifies the fixed length of the reference component.</desc>
      <datatype><rng:data xmlns:rng="http://relaxng.org/ns/structure/1.0" type="nonNegativeInteger"/></datatype>
      <valDesc>Should be a positive integer; if no value is provided,
    the length is unlimited and goes to the next delimiter or to the
    end of the value.</valDesc>
      <remarks>
        <p>When constructing a reference, if the reference component
  found is of numeric type, the length
  is made up by inserting leading zeros; if it is not, by inserting
  trailing blanks. In either case, reference components are truncated
  if necessary at the right hand side.
  </p>
        <p>When seeking a reference, the length indicates the
  number of characters which should be compared. Values longer than
  this will be regarded as matching, if they start correctly. </p>
      </remarks>
    </attDef>
    <attDef ident="delim" usage="opt">
	<equiv/>
	<desc>supplies a delimiting string following the reference
          component.</desc>
      <datatype><rng:text xmlns:rng="http://relaxng.org/ns/structure/1.0"/></datatype>
      <valDesc>If a single space is used it is interpreted as
         whitespace</valDesc>
      <remarks/>
    </attDef>
    <attDef ident="from" usage="req">
	<equiv/>
	<desc>specifies the starting point of the area referred to by this
step in the canonical reference.</desc>
      <datatype><rng:text  xmlns:rng="http://relaxng.org/ns/structure/1.0"/></datatype>
      <valDesc>a valid expression in the TEI extended pointer notation
documented in section <ptr target="#SAXR"/>.</valDesc>
    </attDef>
    <attDef ident="to" usage="opt">
	<equiv/>
	<desc>specifies the ending point of the area referred to by this step
in the canonical reference.</desc>
      <datatype><rng:text  xmlns:rng="http://relaxng.org/ns/structure/1.0"/></datatype>
      <defaultVal>DITTO</defaultVal>
      <valDesc>a valid expression in the TEI extended pointer notation
documented in section <ptr target="#SAXR"/>.</valDesc>
      <remarks><p>If this attribute is not specified, its value is
      assumed to be the same as that of the <ident>from</ident> attribute</p></remarks>
    </attDef>
  </attList>
  <exemplum>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">      <step refunit="book" delim=":" from="CHILD (1 DIV1 N %1)"/>
    </egXML>
  </exemplum>
  <remarks>
    <p>With two differences, the extended pointer expressions given
as values for the <att>from</att> and <att>to</att> attributes behave
like those given for the corresponding attributes of an extended pointer
element like <gi>xptr</gi>.  First:  unlike normal extended pointer
expressions, those on a <gi>step</gi> element can contain references to
tokens in the canonical reference string itself, expressed as
<code type="frag">%1</code>, <code type="frag">%2</code>, etc.  Second:  the initial location
source for the first step is the root of the document, as for normal
extended pointers.  The initial location source for subsequent steps,
however, is the result of the previous step, not the root.</p>
  </remarks>
  <listRef>
    <ptr target="#HD54M"/>
    <ptr target="#HD54"/>
    <ptr target="#HD54S"/>
  </listRef>
</elementSpec>
