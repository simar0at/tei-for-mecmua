<!--
Copyright TEI Consortium. Licensed under the GNU General Public License. See the file COPYING for details.$Date$
$Author$-->
<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="ND" n="20"><head>Names and Dates</head>
<p>This chapter describes a module which may be used for the encoding
of proper names and other phrases descriptive of persons, places, or
organizations, in a manner more detailed than that possible using the
elements already provided for these purposes in the Core module
described in chapter <ptr target="#CO"/>.  It also provides elements
for  a more detailed encoding of references to dates and times.</p>

<p>In section <ptr target="#CONA"/> it was noted that the elements
provided in the core module allow an encoder to specify that a given
text segment is a proper noun, or a <term>referring string</term>, and
to specify the kind of object named or referred to only by supplying a
value for the <att>type</att> attribute.  The elements provided by the
present module allow the encoder both to supply a detailed
sub-structure for such referring strings, and also to distinguish
explicitly between names of persons, places, and organizations.</p>

<p>This module also provides elements for the representation of
information about the person, place, or organization to which a given
name is understood to refer and to represent the
name itself, independently of its application. In simple terms, where
the core module allows one simply to represent that a given piece of
text is a <term>name</term>, this module allows one further to
represent a <term>personal name</term>, to represent the 
<term>person</term> being named, and to represent the <term>canonical
name</term> being used.  A similar range is provided for names of
places and organizations. The intended application for this module is
in  biographical or historical data, for which the additional elements
provided for detailed tagging of dates and times may also be useful. </p>

<p>The chapter begins by discussing elements for the encoding of
component parts of personal names (section <ptr target="#NDPER"/>),
place names (section <ptr target="#NDPLAC"/>) and organizational names
(section <ptr target="#NDORG"/>).  Elements for encoding personal data
are discussed in section <ptr target="#NDPERS"/>.  Elements for
encoding onomastic data are discussed in <ptr
target="#NDNYM"/>.  Elements for the encoding of geographical data are
discussed in section <ptr target="#NDGEOG"/>. 
Finally,  the detailed encoding of dates and times
is described in section <ptr target="#NDDATE"/>.</p>
<p>This   module makes available the following
components:
<moduleSpec xml:id="DND" ident="namesdates">
  <altIdent type="FPI">Names and Dates</altIdent>
  <desc>Names and dates</desc>
</moduleSpec>
The selection and combination of modules to form a TEI schema is described in
<ptr target="#STIN"/>.
</p>


<p>The module is organized as follows:
<specGrp>
  <p>This module  defines a number of additional classes and a datatype:
  &model.persNamePart;    
  &att.personal;    
  &model.placeNamePart;    
  &att.datable.iso; 
  &att.dateTime.iso; 
  &att.duration.iso; 
  &data.temporal.iso;
  &data.duration.iso;
  </p>
  <p>It contains specification groups for name components of persons,
  places, and organizations:
    <specGrpRef target="#DNDPER"/>
    <specGrpRef target="#DNDPLAC"/>
    <specGrpRef target="#DNDORG"/>
  </p>
<p>It also contains specification groups for prosopographical and
onomastical use:
    <specGrpRef target="#DCCAHPA"/>
    <specGrpRef target="#DNDNYM"/>
</p>
</specGrp>
</p>

<div><head>Linking names and their referents</head>

<p>As members of the <ident type="class">att.naming</ident> class,
many of the elements described in this chapter share the following attributes:
<specList><specDesc key="att.naming" atts="key nymRef ref"/></specList>
These attributes are designed to support two different ways of
associating a name, of any kind, with its referent. The encoder may
use either, neither, or both in combination as appropriate. The
<att>ref</att> attribute should be used wherever it is possible to supply
a direct link such as a URI to indicate the location of canonical
information about the referent. For example:
<egXML xmlns="http://www.tei-c.org/ns/Examples">That silly man
<name ref="#DPB1" type="person">David Paul Brown</name> has suffered ...</egXML>
This encoding requires that there exist somewhere in the same document
a <gi>person</gi> element with the identifier <code>DBP1</code>, which
will contain canonical information about this particular person,
marked up using the elements discussed in <ptr target="#NDPERS"/>
below. The same element might alternatively be provided by some other document,
of course, which the same attribute could refer to by means of a URI,
as  explained in <ptr target="#SAXP"/>:
<egXML xmlns="http://www.tei-c.org/ns/Examples">That silly man
<name ref="http://www.example.com/personography.xml#DPB1"
      type="person">David Paul Brown</name> has suffered
...</egXML></p>
<p>The <att>key</att> attribute is provided for cases where no such
direct link is required: for example because resolution of the reference is
carried out by some local convention, or because the encoder judges
that no such resolution is necessary. As an example of the first case,
consider a project might maintain its own local database system
containing canonical information about persons and places, each entry
in which is accessed by means of some system-specific identifier
constructed in a project-specific way from the value supplied for the
<att>key</att> attribute. <note place="foot">In the module described by
chapter <ptr target="#TD"/> a similar method is used to link element
descriptions to the modules or classes to which they belong, for
example.</note> As an example of the second case, consider the use of
well-established codifications such as country or airport codes, which
it is probably  unnecessary for an encoder to expand further:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
I never fly from <name key="LHR" type="place">Heathrow Airport</name>
to <name key="FR" type="place">France</name></egXML>
</p>
</div>

<div type="div2" xml:id="NDPER"><head>Personal Names</head>

<p>The core <gi>rs</gi> and <gi>name</gi> elements can distinguish
names in a text but are insufficiently powerful to mark their internal
components or structure. To conduct nominal record linkage or even to
create an alphabetically sorted list of personal names, it is
important to distinguish between a family name, a forename and an
honorary title. Similarly, when confronted with a referencing string
such as <q>John, by the grace of God, king of England, lord of
Ireland, duke of Normandy and Aquitaine, and count of Anjou</q>, the
analyst will often wish to distinguish amongst the various constituent
elements present, since they clear provide additional information
about the status, occupation or residence of the person to whom
the name belongs.  The following elements are provided for these and
related purposes:
<specList><specDesc key="persName"/><specDesc key="surname"/><specDesc key="forename"/><specDesc key="roleName"/><specDesc key="addName"/><specDesc key="nameLink"/><specDesc key="genName"/></specList>
</p>

<p>In addition to the <ident>att.naming</ident> attributes mentioned
above, all of the above elements are members of the class <ident
type="class">att.personal</ident>, and thus share the following
attributes: <specList><specDesc key="att.personal" atts="full
sort"/></specList>
</p>
<p>The <gi>persName</gi> element may be used in preference to the
general <gi>name</gi> element irrespective of whether or not the
components of the personal name are also to be marked. <!--Its
<att>key</att> attribute can be used to provide a linkage between the
name and the person named, in exactly the same way as  on
the <gi>rs</gi> and <gi>name</gi> elements (see section <ptr
target="#CONA"/>).  The tag -->The element <gi>persName</gi> is synonymous with the
element <tag>name type="person"</tag>, except that its <att>type</att>
attribute allows for further subcategorization of the personal name
itself, for example as a <val>married</val>, <val>maiden</val>, <val>pen</val>,
<val>pseudo</val> or <val>religious</val> name.  Consequently the following
examples are equivalent: <egXML
xmlns="http://www.tei-c.org/ns/Examples">That silly man
<rs key="DPB1" type="person">David Paul Brown</rs> has suffered the furniture of his office to be seized the third time for rent.</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">That silly man
<rs key="DPB1" type="person">
  <name>David Paul Brown</name>
</rs> has suffered ...</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">That silly man
<name key="DPB1" type="person">David Paul Brown</name> has suffered ...</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">That silly man
<persName key="DPB1">David Paul Brown</persName> has suffered ...</egXML>
</p>
<p>The <gi>persName</gi> element is more powerful than the
<gi>rs</gi> and <gi>name</gi> elements because distinctive name
components occurring within it can be marked as such.
</p>
<p>Many cultures distinguish between a family or inherited
<term>surname</term> and additional personal names, often known as
<term>given names</term>.  These should be tagged using the
<gi>surname</gi> and <gi>forename</gi> elements respectively and may
occur in any order:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>  
   <surname>Roosevelt</surname>,
   <forename>Franklin</forename>
   <forename>Delano</forename>
</persName>
<persName>  
   <forename>Franklin</forename>
   <forename>Delano</forename>
   <surname>Roosevelt</surname>
</persName></egXML>
</p>
<p>The <att>type</att> attribute may be used with both
<gi>forename</gi> and <gi>surname</gi> elements to provide further
culture- or project- specific detail about the name component, for
example:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName> 
   <forename type="first">Franklin</forename>
   <forename type="middle">Delano</forename>
   <surname>Roosevelt</surname>
</persName></egXML>

<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName> 
   <forename type="given">Margaret</forename>
   <forename type="unused">Hilda</forename>
   <surname type="maiden">Roberts</surname>
   <surname type="married">Thatcher</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName type="religious">Muhammad Ali</persName></egXML>
In the following two examples the <att>type</att> attribute of the
<gi>surname</gi> element is used to indicate so-called
double-barrelled or hyphenated surnames:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>  
   <forename>Kara</forename>
   <surname type="combine">Hattersley-Smith</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>   
   <forename>Norman</forename>
   <surname type="combine">St John Stevas</surname>
</persName></egXML>
</p>
<p>The <att>full</att> attribute may be used to indicate whether a
name is an abbreviation, initials,  or given in full:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName> 
   <forename full="abb">Maggie</forename>
   <surname>Thatcher</surname>
</persName></egXML>

</p>

<p>In most cases, patronymics should be treated as forenames, thus:
<egXML xmlns="http://www.tei-c.org/ns/Examples">... but it remained for
<persName>   
   <forename>Snorri</forename>
   <forename>Sturluson</forename>
</persName>
to combine the two traditions in cyclic form.</egXML>
<!-- Carol Clover, The Medieval Saga (Ithaca:  Cornell        -->
	<!-- Univ. Press, 1982), p. 57.                               -->
When a patronymic is used as a surname, however (e.g. by an individual
who otherwise would have no surname, but lives in a culture which
requires surnames), it may be tagged as such:
<egXML xmlns="http://www.tei-c.org/ns/Examples">Even <persName><forename>Finnur</forename>
<surname>Jonsson</surname></persName>
acknowledged the artificiality of the procedure...</egXML>
<!-- Clover, p. 77.                                           -->
<egXML xmlns="http://www.tei-c.org/ns/Examples"><s><persName><forename>
Peter</forename> <surname>son of Herbert</surname></persName> gives the king 40 m. for 
having custody of the land and heir of <persName><forename>John</forename> <surname>son of Hugh</surname></persName>...</s></egXML>
<!-- <bibl>C 60/16 Fine Roll 6 HENRY III (28 October 1221-27 October 1222),
 membrane 5, entry 154<bibl>-->

In the following example, the <att>type</att> attribute is used
to distinguish a patronymic from other forenames:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="pn9">  
   <forename sort="2">Sergei</forename>
   <forename sort="3" type="patronym">Mikhailovic</forename>
   <surname sort="1">Uspensky</surname>
</persName></egXML>
</p>


<p>This example also demonstrates the use of the <att>sort</att>
attribute common to all members of the <ident type="class">model.persNamePart</ident> class; its effect is to state the sequence in which <gi>forename</gi> and <gi>surname</gi> elements
should be combined when constructing a sort key for the name.
</p>
<p>Some names include generational or dynastic information, such as
 a number, or phrases such as <q>Junior</q>, or <q>the Elder</q>;
 these qualifications may also be used to distinguish similarly named
 but unrelated people. In either case, the <gi>genName</gi>
element may be used to distinguish such labels from other parts of the name,
as in the following examples:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="HEMA1">  
  <surname>Marques</surname>
  <genName>Junior</genName>,
  <forename>Henrique</forename>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>  
  <forename>Charles</forename>
  <genName>II</genName>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>
  <forename>Rudolf</forename>
  <genName>II</genName>
  <surname type="dynasty">Hapsburg</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>
  <surname>Smith</surname>
  <genName>Minor</genName>
</persName></egXML>
</p>
<p>It is also often convenient to distinguish phrases (historically
similar to the generational labels mentioned above) used to link parts
of a name together, such as <q>von</q>, <q>of</q>, <q>de</q> etc. It
is often a matter of arbitrary choice whether or not such components
are regarded as part of the surname or not; the <gi>nameLink</gi>
element is provided as a means of making clear what the correct usage
should be in a given case, as in the following examples:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="DUDO1"> 
   <roleName type="honorific" full="abb">Mme</roleName>
   <nameLink>de la</nameLink>
   <surname>Rochefoucault</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName>  
   <forename>Walter</forename>
   <surname>de la Mare</surname>
</persName></egXML>
</p>
<p>Finally, the <gi>addName</gi> and <gi>roleName</gi> elements are
used to mark all name components other than those already listed. The
distinction between them is that a <gi>roleName</gi> encloses an
associated name component such as an aristocratic or official title
which exists in some sense independently of its bearer. The
distinction is not always a clear one. As elsewhere, the
<att>type</att> attribute may be used with either element to supply
culture- or application- specific distinctions.  Some typical values
for this attribute for names in the Western European tradition follow:
<list type="gloss"><label><val>nobility</val></label>
<item>An inherited or life-time
 title of nobility such as <mentioned>Lord</mentioned>, <mentioned>Viscount</mentioned>, <mentioned>Baron</mentioned>, etc.</item><label><val>honorific</val></label>
<item>An academic or other honorific prefixed to a name
 e.g. <mentioned>Doctor</mentioned>, <mentioned>Professor</mentioned>, <mentioned>Mrs.</mentioned>, etc.</item><label><val>office</val></label>
<item>Membership of some elected or
 appointed organization such as <mentioned>President</mentioned>, <mentioned>Governor</mentioned>, etc.</item><label><val>military</val></label>
 <item>Military rank such as <mentioned>Colonel</mentioned>.</item><label><val>epithet</val></label>
<item>A traditional descriptive phrase
or nick-name such as <mentioned>The Hammer</mentioned>, <mentioned>The Great</mentioned>, etc.</item></list>
Note, however, that the <term>role</term> a person has in a given context (such as <mentioned>witness</mentioned>, <mentioned>defendant</mentioned>, etc. in a legal document) should not be encoded using the <gi>roleName</gi> element, since this is intended to describe the role of this part of the name, not the role of the person bearing the name.</p>
<p>Here are some further examples of the usage of these elements:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="PGK1">
   <roleName type="nobility">Princess</roleName>
   <forename>Grace</forename>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="GRMO1" type="pseudo">
   <addName type="honorific">Grandma</addName>
   <surname>Moses</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="MRSRO1">
   <addName type="honorific">Mrs</addName>
   <surname>Robinson</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="STAU1">
   <roleName type="office">Saint</roleName>
   <forename>Augustine</forename>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="SLWICL1">
   <roleName type="office">President</roleName>
   <forename>Bill</forename>
   <surname>Clinton</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="MOGA1">
   <roleName type="military">Colonel</roleName>
   <surname>Gaddafi</surname>
</persName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="FRTG1">
   <forename>Frederick</forename>
   <addName type="epithet">the Great</addName>
</persName></egXML>
</p>
<p>A name may have any combination of the above elements:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><persName key="EGBR1">     
   <roleName type="office">Governor</roleName>
   <forename sort="2">Edmund</forename>
   <forename full="init" sort="3">G.</forename>
   <addName type="nick">Jerry</addName>
   <addName type="epithet">Moonbeam</addName>
   <surname sort="1">Brown</surname>
   <genName full="abb">Jr</genName>.
</persName></egXML>
</p>
<p>Although highly flexible, these mechanisms for marking
personal name components will not cater for every personal name
and processing need.  Where the internal structure of personal
names is highly complex or where name components are
particularly ambiguous, feature structures are recommended as
the most appropriate mechanism to mark and analyze them, as further discussed in chapter <ptr target="#FS"/>.
</p>
<p>The elements discussed in this section are formally defined as
follows:
<specGrp xml:id="DNDPER" n="Personal names">
&persName;
&surname;
&forename;
&genName;
&nameLink;
&addName;
&roleName;</specGrp>
</p></div>
<div type="div2" xml:id="NDPLAC"><head>Place Names</head>
<p>Like other proper nouns or noun phrases used as names, place names
can simply be marked up with the <gi>rs</gi> element, or with the
<gi>name</gi> element.  For cartographers and historical geographers,
however, the component parts of a place name provide important
information about the relation between the name and some spot in space
and time.  They also provide important evidence in historical
linguistics.</p>
<p>These Guidelines distinguish three ways of referring to places.  A
place name (represented using the <gi>placeName</gi> element) may
consist of one or more names for hierarchically-organized
geo-political or administrative units (see section <ptr
target="#NDPLGU"/>).  A place named simply in terms of geographical
features such as mountains or rivers is represented using the
<gi>geogName</gi> element (see section <ptr
target="#NDPLGF"/>).  Finally, an expression consisting of phrases
expressing spatial or other kinds of relationship between other kinds
of named place may also be regarded as a kind of <gi>placeName</gi>
(see section <ptr target="#NDPLR"/>).
<specList><specDesc key="placeName"/><specDesc key="geogName"/>
</specList>
</p>
<p>As members of the <ident type="class">att.naming</ident> class, all of these
elements share the following attributes:
<specList><specDesc key="att.naming" atts="key nymRef ref"/></specList>
</p>
<p>Like the <gi>persName</gi> element discussed in section <ptr target="#NDPER"/>, the <gi>placeName</gi> element may be regarded
simply as an abbreviation for the elements <tag>name type="place"</tag> or
<tag>rs type="place"</tag>. The following encodings are thus
equivalent:<note place="foot">Strictly, a suitable value such as
<val>figurative</val> should be added to the two place
names which are presented periphrastically in the second example here,
in order to preserve the distinction indicated by the choice of
<gi>rs</gi> rather than <gi>name</gi> to encode them in the first
version.</note>
<egXML xmlns="http://www.tei-c.org/ns/Examples">After spending some time in our <rs key="NY1" type="place">modern <name key="BA1" type="place">Babylon</name></rs>, <name key="NY1" type="place">New York</name>, I have proceeded to the <rs key="PH1" type="place">City of Brotherly Love</rs>.</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">After spending some time in our <placeName key="NY1">modern <placeName key="BA1">Babylon</placeName></placeName>, <placeName key="NY1">New York</placeName>, I have proceeded to the <placeName key="PH1">City of Brotherly Love</placeName>.</egXML>
<!-- from letter from 'JK' found in Poulson's Daily Advertiser -->
	<!-- 8 October, 1835, -->
</p>
<div type="div3" xml:id="NDPLGU"><head>Geo-political Place Names</head>
<p>A place name may contain text with no indication of its internal structure:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName>Rochester, NY</placeName></egXML>
More usually however, a place name of this kind will  be further
analysed in terms of its constitutive
geo-political or administrative units. These may be arranged in
ascending sequence according to their size or administrative
importance, for example: <q>Rochester, New York</q>, or as a single
such unit, for example <q>Belgium</q>. These Guidelines provide a
hierarchy of generic element names, each of which may be more exactly
specified by means of a <att>type</att> attribute:
<specList>
<specDesc key="district"/>
<specDesc key="settlement"/>
<specDesc key="region"/>
<specDesc key="country"/>
<specDesc key="bloc"/>
</specList></p>
<p>A <gi>placeName</gi> may contain any combination of these and other
members of the <ident type="class">model.placeNamePart</ident> class,
as in the following examples: 
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName>  
  <settlement type="city">Rochester</settlement>,
  <region type="state">New York</region>
</placeName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName key="LSEA1">  
  <country type="nation">Laos</country>,
  <bloc type="sub-continent">Southeast Asia</bloc>
</placeName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName>
<district type="arondissement">6ème</district>
 <settlement type="city">Paris</settlement>,
</placeName>
</egXML>
</p>
<p>Note that, even in the case where only one of these component place
name elements is used, the <gi>placeName</gi> element must still be
present.
<egXML xmlns="http://www.tei-c.org/ns/Examples">I'd rather be in <placeName><settlement type="city">Rochester</settlement></placeName> than any other place I know.</egXML>
</p></div>
<div type="div3" xml:id="NDPLGF"><head>Geographic Names</head>
<p>Places may also be named in terms of geographic features such as
mountains, lakes or rivers, independently of geo-political units.  The
<gi>geogName</gi> is provided to mark up such names, as an alternative
to the <gi>placeName</gi> element discussed above. In addition to the
usual phrase level elements, this element may include the following
specialized elements:
<specList>
  <specDesc key="geog"/>
  <specDesc key="offset"/>
</specList>
</p>
<p>For example:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><geogName key="MIRI1" type="river">Mississippi River</geogName></egXML>
</p>
<p>Where the <gi>geog</gi> element is used to characterize the kind of
geographic feature being named, the <gi>name</gi> element will generally
also be used to mark the associated proper noun or noun phrase:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><geogName key="MIRI1" type="river">    
   <name>Mississippi</name>
   <geog>River</geog>
</geogName></egXML>
A more complex example, showing a variety of practices, follows:
<egXML xmlns="http://www.tei-c.org/ns/Examples">The isolated ridge separates two great corridors which run from <name key="GLCO1" type="place">Glencoe</name> into
<geogName key="GLET1" type="glen">
   <geog>Glen</geog>
   <name>Etive</name>
</geogName>, the
<geogName key="LAGA1" type="hill">  
   <geog xml:lang="gd">Lairig</geog> 
   <rs type="gloss" xml:lang="en">sloping hill face</rs>
   <name>Gartain</name>
</geogName> and the
<geogName key="LAEI1" type="hill">  
   <geog xml:lang="gd">Lairig</geog> 
   <rs type="gloss" xml:lang="en">sloping hill face</rs>
   <name>Eilde</name>
</geogName></egXML></p></div>
<div type="div3" xml:id="NDPLR"><head>Relative Place Names</head>
<p>All the place name specifications so far discussed are <term rend="noindex">absolute</term>, in the sense that they define only one
place.  A place may however be specified in terms of its relationship
to another place, for example <q>10 miles northeast of Paris</q> or
<q>near the top of Mount Sinai</q>. These <term>relative place
names</term> will contain a place name which acts as a referent
(e.g. <q>Paris</q> and <q>Mount Sinai</q>). They will also contain a
word or phrase indicating the position of the place being named in
relation to the referent (e.g. <q>the top of</q>, <q>north of</q>). A
distance, possibly only vaguely specified, between the referent place
and the place being indicated may also be present (e.g. <q>10
miles</q>, <q>near</q>).</p>
<p>Relative place names may be encoded using the following elements in
combination with either a <gi>placeName</gi> or a <gi>geogName</gi>
element.
<specList><specDesc key="offset"/><specDesc key="measure"/></specList>
Some examples of relative place names are:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName key="NRPA1"> 
   <offset>near the top of</offset>
   <geogName>     
      <geog>Mount</geog>
      <name>Sinai</name>
   </geogName>
</placeName></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName>  
   <measure>20 km</measure>
   <offset>north of</offset>
   <settlement type="city">Paris</settlement>
</placeName></egXML> 
If desired, the distance specified may be
normalized using the <att>unit</att> and <att>quantity</att>
attributes of <gi>measure</gi>:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><placeName key="Duncan">
  <measure unit="km" extent="17.7">11 miles</measure>
  <offset>Northwest of</offset>
  <settlement type="city">Providence</settlement>, <region type="state">RI</region>
</placeName></egXML>
</p>
<p>The internal structure of place names is like that of
personal names — complex and subject to an enormous amount of variation
across time and different cultures. The recommendations in this section
will be adequate for a majority of users and applications. They may
not, however, satisfy the most specialized inquiries or
applications in which case it is recommended that the internal
structure of place names be represented using feature structures (<ptr target="#FS"/>).
 </p>
<p>The elements discussed in this section are formally defined as
follows:
<specGrp xml:id="DNDPLAC" n="Names for places">
&placeName;
&bloc;
&country;
&region;
&district;
&settlement;
&offset;
&geogName;
&geog;
</specGrp>
</p>
</div>
</div>

<div type="div2" xml:id="NDORG"><head>Organizational names</head>
<p>Like names of persons or places, organization names can be marked
as referring strings or as proper names with the <gi>rs</gi> or
<gi>name</gi> elements respectively.  For certain applications it may
be desirable to mark the component parts of an organization. In some
historical and social science studies, for example, the component
parts of an organization names may help to characterize the
organization in terms of its geographical location, ownership, likely
number of employees, management structure etc.

The element <gi>orgName</gi> is provided  for this purpose:
<specList><specDesc key="orgName"/></specList>
This element is a member of the same attribute classes as
<gi>persName</gi>, and therefore carries the following attributes:
<specList><specDesc key="att.naming" atts="key ref"/></specList>
</p>
<p>The <gi>orgName</gi> element may be used to mark up any form of
organizational name, that is, a name which applies to an organization
rather than an individual person or place.It is a
special case of a <gi>name</gi> and thus of an <gi>rs</gi> element.
Consequently, the following examples are synonymous, though the last is
preferred:
<egXML xmlns="http://www.tei-c.org/ns/Examples">About a year back, a question of considerable 
interest was agitated in the <rs key="PAS1" type="org">Pennsyla. Abolition Society</rs>.</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">About a year back, a question of considerable 
interest was agitated in the  <rs key="PAS1" type="org">
<name>Pennsyla. Abolition Society</name></rs>.</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">About a year back, a question of considerable 
interest was agitated in the 
<name key="PAS1" type="org">Pennsyla. Abolition 
Society</name>.</egXML>  
<egXML xmlns="http://www.tei-c.org/ns/Examples">About a year back, a question of considerable 
interest was agitated in the <orgName type="voluntary" key="PAS1">Pennsyla. Abolition Society</orgName></egXML>
<!-- From the Diary of Thomas Pym Cope -->
Like the <gi>rs</gi> and <gi>name</gi> elements, the <gi>orgName</gi>
element has a <att>key</att> attribute with which an external
identifier such as a database key can be assigned to the organization
name, and also a <att>ref</att> attribute which can be used to point
directly to an <gi>org</gi> element containing information about the
organization itself (see further <ptr target="#ND-org"/>).  Its
<att>type</att> attribute should be used to characterize the name,
for example as an acronym:
<egXML xmlns="http://www.tei-c.org/ns/Examples">Mr Frost will be able to earn an extra fee from 
<orgName type="acronym">BSkyB</orgName>
rather than the
<orgName  type="acronym">BBC</orgName>
</egXML>

as a phrase:

<egXML xmlns="http://www.tei-c.org/ns/Examples">
The feeling in <country>Canada</country> is one of strong aversion to
the <orgName type="phrase">United States Government</orgName>, and of
predilection for self-government under the <orgName type="phrase">English Crown</orgName></egXML>
<!-- Anthony Trollope, North America, Penguin ed., 51 -->

<egXML xmlns="http://www.tei-c.org/ns/Examples">
<orgName>The Justified Ancients of Mu Mu</orgName>
</egXML>

or as a composite of other kinds of name:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<orgName type="partnerNames">
   <surname>Ernst</surname>&amp;<surname>Young</surname>
</orgName></egXML>
 </p>
<p>The names making up an organization names are not always
personal. They may also include place names: 
<egXML xmlns="http://www.tei-c.org/ns/Examples">A spokesman from 
<orgName type="regional">
  <orgName>IBM</orgName>
  <country>UK</country>
</orgName> said ... 
</egXML>
or role names:
<egXML xmlns="http://www.tei-c.org/ns/Examples">THE TICKET which you will receive herewith has been formed by
the <orgName>Democratic Whig <name type="role">party</name>
</orgName> after the most careful deliberation,
with a reference to all the great objects of NATIONAL, STATE,
COUNTY and CITY concern, and with a single eye to the <hi>Welfare and Best Interests of the Community</hi>.</egXML>
</p>
<p>As indicated above, organizational names may also be specified hierarchically
particularly where the named organization is itself a department
or a branch of a larger organizational entity.  <q>The
Department of Modern History, Glasgow University</q> is an
example:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><orgName>  
   <name type="org">Department of Modern History</name>
   <orgName><name type="city">Glasgow</name>
            <name type="role">University</name>
   </orgName>
</orgName></egXML>
</p>
<p>The formal declaration of the elements discussed in this section include:
<specGrp xml:id="DNDORG" n="Organization names">
&orgName;
<!--&orgTitle;
&orgType;
&orgDivn;--></specGrp>
</p>
</div>	

<div type="div2" xml:id="NDPERS">
<head>Biographical and Prosopographical Data</head>
<p>This module defines a number of special purpose elements which can
be used to markup biographical and prosopographical data. We envisage
three basic types of users and uses for these elements.  The first is
the person interested in creating or converting an existing set of
biographical records, for example of the type found in a Dictionary of
National Biography.  The second is the person hoping to create or
convert a database-like collection of information about a group of
people, possibly but not necessarily the people referenced in a
marked-up collection of documents or a text-corpus.  The third type
would be those interested in the creation or conversion of
biographical or CV-like structured texts for use e.g. in Human
Resource applications.</p>

<p>To cater for this diversity, these Guidelines propose a flexible
approach, in which encoders may choose for themselves the degree of
prescription appropriate to their needs.  If one were interested, for
example, in converting existing DNB-type records, and wanted to
 preserve the text as is, the <gi>person</gi> element (see <ptr target="#NDPERSE"/>) could simply
contain the text of an article, placed within <gi>p</gi> elements,
possibly using elements such as <gi>name</gi> or <gi>date</gi> to mark
up features of that text.  For a more structured entry, however, one
would extract the data and place information contained by the text,
and encode it directly using the more specific elements described in
this section.</p>
<div type="div3">
<head>Basic principles</head>
<p>Information about people, of whatever type, essentially comprises a
series of statements or assertions relating to:
<list>
<item>characteristics or <term>traits</term> which do not, by
and large, change over time</item>
<item>characteristics or <term>states</term> which hold true only at a
specific time</item>
<item><term>events</term> or incidents which may lead to a change of state or, less
frequently, trait.</item></list>
</p>

<p><soCalled>Characteristics</soCalled> or <soCalled>traits</soCalled>
are typically independent of an individual's volition or action and
can be either physical, such as sex or hair and eye colour, or
cultural, such as ethnicity, caste or faith.  The distinction is not
entirely straightforward, however: while sex is fairly obviously a
physical trait, gender should rather be regarded as culturally
determined, and the division of mankind into different
<soCalled>races</soCalled>, proposed by early (white European)
anthropologists on the basis of physical characteristics such as skin
colour, hair type and skull measurements, is by many modern cultural
anthropologists now considered to be more a social or mental construct
than an objective biological fact.  Furthermore, while some
characteristics will obviously change over time, hair colour for
example, none, in principle — not even sex — is immutable.</p>
<p><soCalled>States</soCalled> include, for example, marital status,
place of residence and position or occupation.  Such states have a
definite duration, i.e. have a beginning and an end, and are typically
a consequence of the individual's own action or that of others.</p>
<p>By <soCalled>changes in state</soCalled> are meant the events
in a person's life such as birth, marriage or appointment to office;
such events will normally be associated with a specific date or a
fairly narrow date-range.  Changes in states can also cause or be caused
by changes in characteristics. Any statement or assertion on any of
these aspects of a person's life will be based on some source, possibly
multiple sources, possibly contradictory.  Taking all this into account
it follows that each such statement or assertion needs to be able to be
documented, put into a time frame and be relatable to other statements
or assertions of the same or any of the other types.</p>
</div>
 <div type="div3" xml:id="NDPERSE">
<head>The person element</head>
<p>Information about a person, as distinct from references to a person, for example by name, is grouped together within a <gi>person</gi> element. A <gi>listPerson</gi>
element is used to group such descriptions together, and optionally to
describe relationships amongst the people listed.
<specList>
<specDesc key="person"/>
<specDesc key="personGrp"/>
<specDesc key="listPerson"/>
<specDesc key="particLinks"/>
</specList>
</p>

<p>One or more <gi>listPerson</gi> elements may be supplied within the
<gi>particDesc</gi> (participant description) element inside the
<gi>profileDesc</gi> element of a TEI Header (see <ptr
target="#HD4"/>).  Like bibliographic lists, however, the
<gi>listPerson</gi> can also appear within the body of a text.</p>

<p>The <att>type</att> attribute may be used to distinguish lists of
people of different kinds where this is considered convenient:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><profileDesc>
<particDesc>
<listPerson type="historical">
  <person xml:id="ART1"><persName>Arthur</persName></person>
  <person xml:id="BERT1"><persName>Bertrand</persName></person>
  <!-- ... -->
</listPerson>
<listPerson type="mythological">
  <person xml:id="ART2"><persName>Arthur</persName></person>
  <person xml:id="BERT2"><persName>Bertrand</persName></person>
  <!-- ... -->
</listPerson>
</particDesc>
</profileDesc></egXML>
</p>
<p>The <gi>person</gi> element may contain many subelements, each
specifying a different property of the person being described.  The
remainder of this section describes these more specific elements. For
convenience, these elements are grouped into three classes, corresponding with
the tripartite division outlined above: one for traits, one for states
and one for events.  Each class  contains both 
specific elements for  common types of biographical
information, and a generic element for other, user-defined, types
of information.</p> 
<p>All the elements in these three classes belong to the attribute
class <name type="class">att.datable</name>, which, as a superclass
of <name type="class">att.datable.w3c</name> provides the
following attributes:
<specList><specDesc key="att.datable.w3c" atts="when notBefore notAfter from to"/></specList>
These attributes can be combined in various
ways to provide additional nuances. Consider, for example, the following:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<birth>15 March 1857.</birth> 
</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<birth notBefore="1857-03-01" notAfter="1857-04-30">Some time in March or April of 1857.</birth> 
</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<residence from="1857-03-01" to="1857-04-30">In March and April of 1857.</residence> 
</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<residence from="1857-03-01" notAfter="1857-04-30">From the 1st of March to
some time in April of 1857.</residence>
</egXML>
</p>
<p>More specialized standard date formats may also be used, about
which see <ptr target="#NDDATEISO"/>.</p>
<!-- need reference to something on date normalization issues here -->
<div type="div4">
<head>Personal Characteristics</head>
 <p>The <ident type="class">model.persTraitLike</ident> class contains elements
describing physical or socially-constructed characteristics or traits
of a person. Members of the class comprise the following specific
elements:
<specList>
<specDesc key="faith"/>
<specDesc key="langKnowledge"/>
<specDesc key="langKnown"/>
<specDesc key="nationality"/>
<specDesc key="sex"/>
<specDesc key="age"/>
<specDesc key="socecStatus"/>
</specList>
All, apart from <gi>langKnowledge</gi>, have a content model of <ident type="class">macro.phraseSeq</ident>, by which is meant ordinary prose containing phrase-level elements.
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<socecStatus key="AB1">Status AB1 in the RG Classification scheme</socecStatus>
</egXML>
<!-- socecstatus has its own @code and @scheme attributes which need
exemplifying here too? -->
</p>
<p>The <gi>langKnowledge</gi> element contains either paragraphs or a
 number of <gi>langKnown</gi> elements; both take a <att>tag</att>
 (or <att>tags</att>) attribute, which provides a standard code or
 <soCalled>tag</soCalled> for the language, as discussed in <ptr
 target="#CHSH"/>. Such tags are defined by RFC 4646<note
place="foot">For additional information on language codes see the discussion at
<ptr target="http://www.iana.org/assignments/language-subtag-registry"/> and
<ptr target="http://www.w3.org/International/articles/language-tags/Overview.en.php"/></note>,
<gi>langKnown</gi> also has a <att>level</att> attribute to
indicate the level of the person's competence in the language. It is
thus possible either to say:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<langKnowledge tags="ff fr wo en"><p>Speaks fluent Fulani, Wolof and French. Some knowledge of English.</p></langKnowledge>
</egXML>
or
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<langKnowledge>
    <langKnown level="fluent" tag="ff">Fulani</langKnown>
    <langKnown level="fluent" tag="wo">Wolof</langKnown>
    <langKnown level="fluent" tag="fr">French</langKnown>
    <langKnown level="basic" tag="en">English</langKnown>
</langKnowledge>
</egXML>
</p>
 <p>The <gi>sex</gi> element carries a <att>value</att> attribute to give the ISO 5218:1977 values, i.e. <val>1</val> for male, <val>2</val> for female, <val>9</val> for non-applicable and <val>0</val> for unknown.
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<sex value="2">female</sex>
</egXML>
</p>
<p>The generic <gi>trait</gi> element is also a member of this class,
<specList>
<specDesc key="trait"/>
</specList>
This element can be used to extend the range of information supplied
about an individual's personal traits. It can contain an optional
<gi>label</gi> element, used to provide a human-readable
specification for the category of trait or feature concerned, followed
by a <gi>date</gi> element, followed by the
description of the feature itself supplied within one or more
<gi>p</gi> elements, following which there may be added one or more
 notes or bibliographical references. The <att>type</att> and
 <att>key</att> attributes are available on the <gi>persTrait</gi>
element to indicate a fuller definition of the combination of feature
and value.
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<trait type="ethnicity" key="alb">
    <label>Ethnicity</label>
    <p>Ethnic Albanian.</p>
</trait>
</egXML>
</p>
<!-- what does alb point to here? -->
 <!-- AC: I suppose it could point to the defintion of the country for example  -->
<p>The  generic element can be used in place of one of the more
specific elements: 
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<trait type="nationality">
    <label>Nationality</label>
    <date notBefore="2002-01-15">From 15 January 2002</date>
    <p>American citizen.</p>
</trait>
</egXML>
is the same as:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<nationality notBefore="2002-01-15">Became an American citizen on 15 January 2002.</nationality> 
</egXML>
or even:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<nationality notBefore="2002-01-15" key="US"/>
</egXML>
</p>
<p>More usually however, the element is provided as a simple means of
extending the set of descriptive features available in a standardized
way. For example, there are no predefined elements for such features
as eye or hair colour. If these are to be recorded, they may simply be
added as new types of trait:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<trait type="physical">
   <label>eye colour</label>
   <p>blue</p>
</trait>
<trait type="physical">
   <label>hair colour</label>
   <p>brown</p>
</trait>
</egXML>
</p>

</div>
<div type="div4">
<head>Personal States</head>
 <p>The <ident type="class">model.persStateLike</ident> class contains elements
describing changeable characteristics of a
person which have a definite duration, for example occupation,
residence, or name. Members of
the class comprise the following specific elements:
<specList>
<specDesc key="persName"/>
<!--specDesc key="relation"/-->
<specDesc key="occupation"/>
<specDesc key="residence"/>
<specDesc key="affiliation"/>
<specDesc key="education"/>
<specDesc key="floruit"/>
</specList>
</p>
<p>The <gi>persName</gi> element is repeatable and can, like all TEI
elements, take the attribute <att>xml:lang</att> to indicate the
language of the content of the element, as well as a
<att>type</att> attribute to indicate the type of name, whether a
nickname, maiden name, alternative form, etc. This is useful in cases
where, for example, a person is known by a Latin name and also by any
number of vernacular names, many or all of which may have claims to
<soCalled>authenticity</soCalled>. In order to ensure uniformity, the
method generally employed in the library world has been to accept the
form found in some authority file, for example that of the American
Library of Congress, as the <soCalled>base</soCalled> or
<soCalled>neutral</soCalled> form. Feelings can run high on this
matter, however, and people are often reluctant to accept as
<soCalled>neutral</soCalled> an overtly foreign form of the name of
their local saint or hero. Within the <gi>person</gi> element any
number of variant forms of a name can be given, with no
prioritisation, and hence less likelihood of offence. The Icelandic
scholar and manuscript collector Árni Magnússon, to give his
name in standard modern Icelandic spelling, is known in Danish as Arne
Magnusson, the form which he himself, as a life-long resident of
Denmark, generally used; there is also a Latinised form, Arnas
Magnæus, which he used in his scholarly writings. All three forms
can be given, and in any order:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<person xml:id="ArnMag">
    <persName xml:lang="is">Árni Magnússon</persName>
    <persName xml:lang="da">Arne Magnusson</persName>
    <persName xml:lang="la">Arnas Magnæus</persName>
</person>
</egXML>
</p>

<egXML xmlns="http://www.tei-c.org/ns/Examples">
  <person xml:id="simon_son_of_richard2">
    <persName>Simon, Richard son of</persName>
    <residence><placeName><region>Essex</region></placeName></residence>
    <floruit notBefore="1219" notAfter="1223">1219-1223</floruit>
  </person>
</egXML>


<p>In addition to these specific elements the class contains a generic
element called <gi>state</gi>.
<specList>
<specDesc key="state"/>
</specList>
</p>
<p>This element can be used to
extend the range of descriptive information available in the same way
as the <gi>trait</gi> element, using the same content model. 
For example, a description of the first living held by the Icelandic
clergyman and poet Jón Oddsson Hjaltalín might be tagged as
follows:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<state type="office" notBefore="1777-04-07" notAfter="1780-07-12">
    <p>Jón's first living — which he apparently accepted rather
    reluctantly — was at <name type="place">Hamarsfir</name>,
    <name type="place">Msla</name>, to which he was presented on 7 April 1777. He was ordained the following month and spent three years at H, but was never happy there, due largely to the general penury in which he was forced to live — a recurrent theme throughout the early part of his life. In June of 1780 the bishop recommended that Jón should <q xml:lang="da">promoveres til andet bedre kald, end det hand hidindtil har havt</q>, and on 12 July it was agreed that he should exchange livings with <name type="person" key="ThorJon">sr. ron</name> at <name type="place">Kafell </name>, <name type="place">Skaftafellssla</name>.</p>
    <bibl>, Stms I.15, p. 733.</bibl>
    <bibl>, Stms I.17, p. 102.</bibl>
</state>
</egXML>
</p>
<!-- more discussion needed here -->
</div>
<div type="div4">
<head>Personal Events</head>
 <p>The <ident type="class">model.persEventLike</ident> class contains elements
describing specific events in a person's
history, for example birth, marriage, or appointment. These are not
characteristics of an individual, but often cause an individual to
gain such characteristics, or to enter a new state.  Members of this
class comprise the following  elements:
<specList>
<specDesc key="birth"/>
<specDesc key="death"/>
<specDesc key="event"/>
</specList>
Only two specific elements (<gi>birth</gi> and <gi>death</gi>) are
proposed.  The generic element <gi>event</gi> has a similar content
model to that of <gi>state</gi> and <gi>trait</gi>; the chief
difference being that it can include a <gi>placeName</gi> element to
identify the name of the place where the event ocurred. It is used 
to describe any event in the life of an individual. </p>
<p>In the example below the event is the wedding of Jane Burdon to the
English writer, designer, and socialist William Morris. The example
assumes that the 
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<person xml:id="WM">
<!-- ... -->
<event type="marriage">
    <label>Marriage</label>
    <date value="1859-04-26">26 April 1859</date>
   <p><name type="person" key="#WM">William Morris</name> and <name type="person" ref="#JBM">Jane
      Burden</name> were married at <name type="place">St Michael's Church,
    Ship Street, Oxford</name> on <date value="1859-04-26">26 April
    1859</date>. The wedding was conducted by Morris's friend <name type="person" ref="#RWD">R. W. Dixon</name> with <name type="person" ref="#CBF">Charles Faulkner</name> as the best
    man. The bride was given away by her father, <name type="person" ref="#RB">Robert Burden</name>. According to the account that
    <name type="person" ref="#EBJ">Burne-Jones</name> gave <name type="person" ref="#JWM">Mackail</name> <q>M. said to Dixon
    beforehand <q>Mind you don't call her Mary</q> but he did</q>. The
    entry in the Register reads: <q>William Morris, 25, Bachelor
    Gentleman, 13 George Street, son of William Morris
    decd. Gentleman. Jane Burden, minor, spinster, 65 Holywell Street,
    d. of Robert Burden, Groom.</q> The witnesses were Jane's parents
    and Faulkner. None of Morris's family attended the
    ceremony. Morris presented Jane with a plain gold ring bearing the
    London hallmark for 1858. She gave her husband a double-handled
    antique silver cup.</p>
    <bibl>J. W. Mackail, <title>The Life of William Morris</title>, 1899.</bibl>
</event>
</person>
<person xml:id="JBM">
  <persName>Jane Burden</persName>
</person>
<person xml:id="RWD">
  <persName>R.W. Dixon</persName>
</person>
<person xml:id="CBF">
  <persName>Charles Faulkner</persName>
</person>
<person xml:id="EBJ">
  <persName>
    <forename>Edward</forename>
    <surname>Burne-Jones</surname>
  </persName>
</person>
<person xml:id="JWM">
  <persName>J.W. Mackail</persName>
</person>
</egXML>
In this example the keys on the various <gi>name</gi> elements
point to the <gi>person</gi> elements for the other people named. As
further discussed below (<ptr target="#relations"/>), a
<gi>relation</gi> element may then be used to link them in a more
meaningful way:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<relation name="spouse" mutual="#WM #JBM"/>
<relation name="friend" mutual="#WM #RWD"/>
<relation name="parent" active="#RB" passive="#JBM"/>
</egXML>
</p>
<p>As mentioned above, all these elements, both the specific and the
generic, are members of the <ident type="class">att.datable</ident> attribute
class, which means they can be limited in terms of time. The
following encoding, for example, demonstrates that the person named
David Jones changed his name in 1966 to David Bowie:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<person xml:id="DB">
    <persName notAfter="1966">David Jones</persName>
    <persName notBefore="1966">David Bowie</persName>
</person>
</egXML>
</p>
<p>All the generic elements are also members of the <ident type="class">att.editLike</ident>
class, which, as its name implies, was originally intended to provide
attributes <q>describing the nature of an encoded scholarly intervention
or interpretation of any kind</q> and which makes available the attributes
<att>cert</att>, to indicate the degree of certainty, <att>resp</att>, the agency responsible, and <att>evidence</att>,
the nature of the evidence used. In this way it is possible, in the
case of multiple and conflicting sources, to provide more than one view
of what happened, as in the following example:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<event type="birth" resp="#XYZ" cert="high"><p>Born in <name type="place">Brixton</name> on 8 January 1947.</p></event>
<event type="birth" resp="#ABC" cert="low"><p>Born in <name type="place">Berkhamsted</name> on 9 January 1947.</p></event>
</egXML>
</p>
</div>
<div type="div4" xml:id="relations"><head>Personal Relationships</head>
<!-- rename particLinks as personLinks ? -->
<p>As noted above, the <gi>particLinks</gi> element is used to document
personal or social relationships between individual persons, where
this is felt to be of importance in the analysis.  This may be done
either as an informal prose description, or more formally using the
special purpose <gi>relation</gi> element, as described below:
<specList><specDesc key="relation"/></specList></p>
<p>A <term>relationship</term>, as defined here, may be any kind of
describable link between specified participants, for example a social
relationship (such as employer/employee), a personal relationship
(such as sibling, spouse, etc.) or something less precise such as
<q>possessing shared knowledge</q>.  A relationship may be
<term>mutual</term>, in that all the participants engage in it on an
equal footing (for example the <q>sibling</q> relationship); or it may
not be if participants are not identical with respect to their role in
the relationship (for example, the <q>employer</q> relationship).  For
non-mutual relationships, only two kinds of role are currently
supported; they are named <term>active</term> and
<term>passive</term>.  These names are chosen to reflect the fact that
non-mutual relations are <term>directed</term>, in the sense that they
are most readily described by a transitive verb, or a verb phrase of
the form <mentioned>is X of</mentioned> or <mentioned>is X to</mentioned>.  The
subject of the verb is classed as <term>active</term>; the direct
object of the verb, or the object of the concluding preposition, as
<term>passive</term>.  Thus parents are <q>active</q> and children
<q>passive</q> in the relationship <q>parent</q> (interpreted as
<mentioned>is parent of</mentioned>); the employer is <q>active</q>, the
employee <q>passive</q>, in the relationship <mentioned>employs</mentioned>.
These relationships can be inverted: parents are <q>passive</q> and
children <q>active</q> in the relationship <mentioned>is child of</mentioned>;
similarly <q>works for</q> inverts the active and passive roles of
<q>employs</q>.</p>
<p>For example:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><particLinks>
   <relation name="parent" active="#P1 #P2" passive="#P3 #P4"/>
   <relation name="spouse" mutual="#P1 #P2"/>
   <relation type="social" name="employer" active="#P1" passive="#P3 #P4"/>
</particLinks></egXML>
This example defines the relationships amongst a number of people not
further described here; we assume however that each person has been
allocated an identifier such as <val>P1</val>, <val>P2</val>,
etc. which can be linked to using the reference <val>#P1</val>. Then
the above set of <gi>relation</gi> elements describe the following
three relationships amongst the seven people referenced:
<list type="simple">
<item>P1 and P2 are parents of P3 and P4.</item>
<item>P1 and P2 are linked in a mutual relationship called <q>spouse</q>
— i.e.  P2 is the spouse of P1, and P1 is the spouse of P2.</item>
<item>P1 has the social relationship <q>employer</q> with respect to P3,
P5, P6, and P7.</item></list></p>
</div>
</div>
<!--
<div3 >
<head>Assertions</head>
<p>In order to allow even greater flexibility we intend to propose a new element, tentatively called <gi>assert</gi>,
which may be used for making assertions about characteristics, states
and changes in states and associating these assertions with
bibliographical records, notes and so on. 
<specList>
<specDesc key="assert"/>
</specList>
Using this mechanism allows one for example to date the assertions as distinct from the things
being asserted:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<assert resp="#XYZ" cert="high" notBefore="1999">
    <birth dateValue="1947-01-08">Born in <name type="place">Brixton</name> on 8 January 1947.</birth>
</assert>
<assert resp="#ABC" cert="low" notAfter="1999">
    <birth dateValue="1947-01-09">Born in <name type="place">Berkhamsted</name> on 9 January 1947.</birth>
</assert>
</egXML>
In this example it can be seen that up until 1999 it was believed,
on the authority of ABC, that the individual in question was born in
Berkhamsted on the 9th of January 1947, whereas after 1999 XYZ's
assertion that he had in fact been born in Brixton on the 8th of
January was generally accepted. A bibliographical reference or note can
be added to provide documentation or further explanation.</p>

<p>We also propose a grouping element, <gi>assertGrp</gi> (for <soCalled>assertion group</soCalled>).
<specList>
<specDesc key="assertGrp"/>
</specList>
The <gi>assertGrp</gi> element can serve as a wrapper around several elements, as in the following example:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<assertGrp type="causal">
    <occupation to="2006-06-13">Manuscript scholar</occupation>
    <residence to="2006-06-13">
        <placeName>
            <settlement type="city">Copenhagen</settlement>
            <country>Denmark</country>
        </placeName>
    </residence>
    <persEvent>
        <label>Nervous breakdown</label>
        <date dateValue="2006-06-14">14 June 2006</date>
    </persEvent>
    <occupation from="2006-06-15">Bee-keeper</occupation>
    <residence from="2006-06-15">
        <placeName>
            <settlement type="village">Dobarsko</settlement>
            <country>Bulgaria</country>
        </placeName>
    </residence>
</assertGrp>
</egXML>
In this example an explicit causal link is made between the various
elements, indicating that a specific event has resulted in a change of
occupation and residence.</p>
</div3>
-->
<div type="div3"><head>Formal definitions</head>
 <p>This module populates the <ident  type="class">model.assertLike</ident> class,
which is a superclass of the three more specific classes discussed
above. <!-- The classes are defined as follows:
<specGrp xml:id="classes">
&model.persTraitLike;
&model.persStateLike;
&model.persEventLike;
 &model.assertLike; 
</specGrp>--> <!-- currently defined in ST -->
</p>
<p>The elements provided by this module are declared as follows:
<specGrp xml:id="DCCAHPA" n="Personal data">
&affiliation;
&age;
&birth;
&death;
&education;
&faith;
<!--&firstLang;-->
&floruit;
&langKnowledge;
&langKnown;
&listPerson;
&nationality;
&occupation;
&particLinks;
&event;
&person;
&personGrp;
&relation;
&residence;
&sex;
&socecStatus;
&state;
&trait;
</specGrp></p></div>
</div>
<div xml:id="NDNYM"><head>Names and nyms</head>
<p>So far we have discussed ways in which a name or referring string
encountered in running text may be resolved by considering the object
that the name refers to: in the case of a personal name, the name
refers to a person; in the case of a place name, to a place, for
example. The resolution of this reference is effected by means of the
<att>key</att> attribute available to all elements which are members
of the <ident type="class">att.naming</ident> class, such as <gi>persName</gi> or
<gi>placeName</gi> and their more specialized variants such as
<gi>foreName</gi> or <gi>country</gi>. However, <emph>names</emph> can
also be regarded as objects in their own right, irrespective of the
objects to which they are attached, notably in onomastic studies.  From
this point of view, the names <mentioned>John</mentioned> in English,
Jean in French, and Ivan in Russian might all be regarded as existing
independently of any person to which they are attached, and also
independently of any variant forms that might be attested in different
sources (such as Jon or Johnny in English, or Jehan or Jojo in
French).  We use the term <term>nym</term> to refer to the canonical or
normalized form of a name regarded in such a way, and provide the
following elements to encode it:
<specList>
<specDesc key="listNym"/>
<specDesc key="nym"/>
</specList>
</p>
<p>Any element which is a member of the <ident type="class">att.naming</ident>
class may use the attribute <att>nymRef</att> to indicate the nym with
which it corresponds.  Thus, given the following <gi>nym</gi> for the
name <mentioned>Antony</mentioned>:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<listNym>
<nym xml:id="N123">
  <form>Antony</form>
</nym>
<!-- other nym definitions here -->
</listNym></egXML>
an occurrence of this name in running text might be encoded as follows:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<forename nymRef="#N123">Tony</forename> Blair
</egXML>
</p>
<p>The person identified by this particular Tony may be indicated
independently using the <att>key</att> attribute, either on the
forename or on the whole name component:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
  <forename nymRef="#N123" ref="#BLT">Tony</forename>
....
<person xml:id="BLT">
<persName>Tony Blair</persName>
<occupation>politician</occupation>
</person></egXML>
</p>
<p>The <gi>nym</gi> element may be thought of as providing a
specialised kind of  dictionary
entry.  It may contain any of the dictionary component elements from
 the <ident type="class">model.entryParts</ident> class, such as <gi>form</gi>,
<gi>etym</gi> etc.  For example, we may show that the canonical form
for a given nym has two orthographic variants in this way:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<nym xml:id="J451">
  <form>
       <orth xml:lang="en-US">Ian</orth>
       <orth xml:lang="en-x-Scots">Iain</orth>
   </form>
</nym>
</egXML>
</p>
<p>Because a schema intending to make use of the <gi>nym</gi> or
<gi>listNym</gi> element must include the TEI <ident
type="module">dictionaries</ident> module as well as 
the <ident type="module">namesdates</ident> module, many other
elements are available in addition to <gi>form</gi>.  For example, to provide a more complex etymological decomposition of a name, we
might use the existing <gi>etym</gi> element, as follows:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><nym xml:id="XYZ">
<form>Bogomil</form>
<etym>Means <gloss>favoured by God</gloss> from the
<lang>Slavic</lang> elements <mentioned xml:lang="ru">bog</mentioned> 
<gloss>God</gloss> and <mentioned xml:lang="ru">mil</mentioned>
<gloss>favour</gloss></etym>
</nym></egXML>
</p>
<p>Where it is necessary to mark the substructure of nyms, this might be
done by marking <gi>seg</gi> elements within the
<gi>form</gi>:<egXML xmlns="http://www.tei-c.org/ns/Examples">
<nym xml:id="ABC">
<form>
  <choice>
   <seg type="morph"><seg>Bog</seg><seg>o</seg><seg>mil</seg></seg>
   <seg type="morph"><seg>Bogo</seg><seg>mil</seg></seg>
  </choice>
</form>
</nym></egXML>
<!-- add example to show that Amadeus has same referents -->
The <gi>seg</gi> element used here is provided by the TEI <ident
type="module">linking</ident> module, which would therefore also need
to be included in a schema built to validate such markup. Other
possibilities for more detailed linguistic analysis are provided by
elements included in that and the <ident type="module">analysis</ident> (see <ptr target="#AI"/>) or <ident type="module">ISOfs</ident> modules (see <ptr target="#FS"/>).  
</p>
<p>Alternatively, each of the constituents of
<mentioned>Bogomil</mentioned> might be regarded  as a nym in its own
right:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
 <nym xml:id="B1" type="part">
  <form>bog</form>
 </nym>
 <nym xml:id="M1" type="part">
  <form>mil</form>
 </nym>
</egXML>
Within running text, a name can specify all the nyms associated with
it:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
...<name nymRef="#B1 #M1">Bogomul</name>...
</egXML>
Similarly, within a nym, the attribute <att>parts</att> is used to
indicate its constituent parts, where these have been identified as
distinct nyms:
<egXML xmlns="http://www.tei-c.org/ns/Examples">
<nym xml:id="BM1" parts="#B1 #M1">
  <form>Bogomil</form>
</nym>
</egXML>
</p>
<p>The <gi>nym</gi> element may also combine a number of other
<gi>nym</gi> elements together, where it is intended to show that they
are all regarded as variations on the same root.  Thus the different
forms of the name John,  all being derived from the same Latin root, may be
represented as a hierarchic structure like this:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><nym xml:id="J45">
  <form>Iohannes</form>
   <nym xml:id="J450">
     <form xml:lang="en">John</form>
     <nym xml:id="J4501">
       <form>Johnny</form>
     </nym>
     <nym xml:id="J4502">
       <form>Jon</form>
     </nym>
   </nym>
   <nym xml:id="J455">
     <form xml:lang="ru">Ivan</form>
   </nym>
   <nym xml:id="J453">
    <form xml:lang="fr">Jean</form>
   </nym>
</nym></egXML>
</p>
<p>The elements described in this section are formally defined as
follows:
<specGrp xml:id="DNDNYM" n="Canonical names">
&nym;
&listNym;
</specGrp>
As noted above, use of these elements implies that both the <ident
type="module">dictionaries</ident> and the <ident
type="module">namesdates</ident>  modules are included in a
schema.</p>
</div>
<div type="div2" xml:id="NDGEOG"><head>Geographical Information</head>
</div>
<div type="div2" xml:id="ND-org"><head>Organizational Information</head>
</div>

<div type="div2" xml:id="NDDATE"><head>Dates and Times</head>
<p>The following elements for the encoding of dates and times were
introduced in section <ptr target="#CONADA"/>:
<specList>
  <specDesc key="date"/>
  <specDesc key="time"/>
</specList>
 </p>
<p>The current module <ident type="module">namesdates</ident> provides a mechanism for more detailed encoding of relative dates and times. A <term>relative temporal expression</term> describes a date or time with reference to some other (absolute) temporal
expression, and thus may contain an <gi>offset</gi> element in addition to
one or more <gi>date</gi> or <gi>time</gi> elements:
<specList>
  <specDesc key="offset"/>
</specList>
</p>
<p>As members of the <name type="class">att.dateTime</name> and <name
type="class">att.duration</name> classes, which in turn are members of
<name type="class">att.dateTime.w3c</name> and <name
type="class">att.duration.w3c</name> respectively, the <gi>date</gi>
and <gi>time</gi> elements share the following attributes:
<specList>
  <specDesc key="att.dateTime.w3c" atts="value"/>
  <specDesc key="att.duration.w3c" atts="dur"/>
</specList>
</p>
<div type="div3" xml:id="NDDATER"><head>Relative Dates and Times
 </head>
<p>As noted above, relative dates and times such as <q>in the Two
Hundredth and First Year of the Republic</q>, <q>twenty minutes before
noon</q>, and, more ambiguously, <q>after the lamented death of the
Doctor</q> or <q>an hour after the game</q> have two distinct
components.  As well as the absolute temporal expression or event to
which reference is made (e.g. <q>noon</q>, <q>the game</q>, <q>the
death of the Doctor</q> <q>[the foundation of] the Republic</q>), they
also contain a description of the <soCalled>distance</soCalled>
between the time or date which is indicated and the referent
expression (e.g. <q>the Two Hundredth and First Year</q>, <q>twenty
minutes</q>, <q>an hour</q>); and (optionally) an
<soCalled>offset</soCalled> describing the direction of the distance
between the time or date indicated and the referent expression
(e.g. <q>of</q> implying after, <q>before</q>, <q>after</q>).
 </p>
<p>The <soCalled>distance</soCalled> component of a relative temporal
expression may be encoded as a temporal element in its own right using
either <gi>date</gi> or <gi>time</gi>, or with the more generic
<gi>measure</gi> element. A special element, <gi>offset</gi>, is
provided by this module for encoding the <soCalled>offset</soCalled>
component of a relative temporal expression. The absolute temporal
expression contained within the relative expression may be encoded
with a <gi>date</gi> or <gi>time</gi> element; in turn, those elements
may of course be relative, and thus contain <gi>date</gi> or
<gi>time</gi> elements within themselves.  This allows for deeply
nested structures such as <q>the third Sunday after the first Monday
before Lammastide in the fifth year of the King's second marriage
... </q> but so does natural language.</p>
<p>In the following examples, the <att>value</att> and <att>dur</att>
attributes have been used to simplify processing of variant forms of
expression:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><date value="1786-12-11">     
   <date dur="P14D">A fortnight</date>
   <offset>before</offset>
   <date value="1786-12-25" type="holiday">Christmas 1786</date>
</date></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">I reached the station <time value="14:15:00">
  <date dur="PT30M0S">precisely half an hour</date>
  <offset>after</offset>
  <date value="13:45:00" type="occasion">the departure of the afternoon train to Boston</date>
</time></egXML></p>
<!-- AC: <att>exact</att> is not an attribute of <gi>date</gi> and it wasn't in the example anyway, so I have commented out the following: <p>In the following example, the <att>exact</att> attribute has been
used to indicate a lack of precision in the distance stated:
<egXML xmlns="http://www.tei-c.org/ns/Examples">In practice, festival candles are lit
<time>  
   <time>just</time>
   <offset>before</offset>
   <time type="occasion">sundown</time>
</time></egXML>
 </p>-->
<p>In the following example, a nested <gi>date</gi> element is
used to show that <q>my birthday</q> and the cited date are parts of
the same temporal expression, and hence to disambiguate the phrase
<q>A week before my birthday on 9th December</q>:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><date value="--12-02">  
   <date>A week</date>
   <offset>before</offset>
   <date value="--12-09">    
      <date type="occasion">my birthday</date>
      on <date>9th December</date>
   </date>
</date></egXML>
The alternative reading of this phrase could be encoded as follows:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><date value="--12-09">  
   <date>A week</date>
   <offset>before</offset>
   <date type="occasion" value="--12-16">my birthday</date>
   on <date>9th December</date>
 </date></egXML>
 </p>
<p>Where more complex or ambiguous expressions are involved, and
where it is desirable to make more explicit  the interpretive
processes required, the feature
structure notation described in chapter <ptr target="#FS"/> is
recommended.  Consider, for example, the following
temporal expression which occurs in the <title>Scottish Temperance
Review</title> of August 1850, referring to the summer holiday known
in Glasgow simply as <q>the Fair</q>:
<egXML xmlns="http://www.tei-c.org/ns/Examples">Not only is the city, <date ana="#gf50">during the Fair</date>, a horrible nucleus of immorality and wickedness; it sends our multitudes to pollute and demoralize the country.</egXML>
</p>
<p>For the definition of the <att>ana</att> attribute, see chapter
<ptr target="#AI"/> (in particular <ptr target="#AIATTS"/>).  It is
used here to link the temporal phrase with an interpretation of it. 
Like most traditional fairs and market days, the
Glasgow Fair was established by local custom and could vary from year
to year.  Consequently, in order to provide such an interpretation, it
is necessary to drawn upon additional information which may or may not
be located in the particular text in question.  In this case, it is
necessary at least to know the spatial and temporal context (year and
place) of the fair referred to.  These and other features required for
the analysis of this particular temporal expression may be combined together as one feature
structure of type <val>date-analysis</val>:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><fs xml:id="gf50" type="date-analysis">
   <f name="event"><string>the Fair</string></f>
   <f name="place"><string>Glasgow</string></f>
   <f name="year"><numeric value="1850"/></f>
   <f name="from-value"><string>1850-08-08</string></f>
   <f name="to-value"><string>1850-09-19</string></f>
</fs></egXML>
</p></div>
<div type="div3" xml:id="NDDATEA"><head>Absolute Dates and Times</head>
<p>The following are examples of absolute temporal expressions.</p>
<p>
  <egXML xmlns="http://www.tei-c.org/ns/Examples">The university's view of American affairs produced a stinging attack by Edmund Burke in the Commons debate of
<date value="1775-10-26">26 October 1775</date></egXML>
<!-- The History of the University of Oxford, vol v, 178 -->
<egXML xmlns="http://www.tei-c.org/ns/Examples"><date value="1993-05-14">Friday, 14 May 1993</date></egXML>
<!-- the headline on the Independent Newspaper on that day -->
</p>
<p>It may be useful to categorize a temporal expression which is given in terms of a named event, such as a public holiday for dates, or a named time such as <q>tea time</q> or
<q>matins</q>:
<egXML xmlns="http://www.tei-c.org/ns/Examples">In New York,
<date type="occasion" value="--01-01">New Years Day</date> is the quietest of holidays, <date value="--07-04" type="occasion">Independence Day</date> the most turbulent.</egXML>
</p>
<!-- Example needs to be re-worked 
<p>These components may be applied to dates using any calendar system
using  subcomponents equivalent to those listed above:
<egXML xmlns="http://www.tei-c.org/ns/Examples"><title>Le Vieux Cordelier:
Journal r&#xE9;dig&#xE9; par Camille Desmoulins</title>,
<date calendar="Revolutionary" value="1794-02-03">   
   Quintidi
   Pluviose
   2e d&#xE9;cade,
   l'an 2 de la R&#xE9;publique Indivisible
</date></egXML> -->
<!-- NB - I removed value= attrs because I do not think -->
	<!-- they were "correct" in the sense that they were    -->
	<!-- non-ISO format and did not normalize; I'm not sure -->
	<!-- what "correct" would be, though; 1794-02-03 was    -->
	<!-- 1794-034 or 1794-W06-1 (per Emacs :-)              -->
	<!-- Date headline from Le Vieux Cordelier of that date -->
	<!-- Thanks to T. Munck for providing the above example -->
 <!-- /p -->
<p>Absolute temporal expressions denoting times which are given
in terms of seconds, minutes, hours, or of well defined events
(e.g. <q>noon</q>, <q>sunset</q>) may similarly be represented using
the <gi>time</gi> element.
<egXML xmlns="http://www.tei-c.org/ns/Examples">The train leaves for Boston at
<time type="24hour" value="13:45:00">13:45</time></egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">At <time type="occasion">sunset</time> we walked to the beach.</egXML>
<egXML xmlns="http://www.tei-c.org/ns/Examples">The train leaves for Boston at
<time xml:lang="en-US" type="descriptive" value="13:45:00-05:00"> a quarter of two
</time></egXML>
 </p>
</div>
<div type="div3" xml:id="NDDATEISO"><head>More Expressive Normalizations</head>
    <!-- <?tei winita this needs to be put somewhere intelligent sb ?>-->
<p>The attributes for normalization of dates and times so far
described use a standard format defined by <title>XML Schema Part 2:
Datatypes Second Edition</title>. This format is widely accepted and
has significant software support. It is essentially a profile of ISO
8601 <title>Data elements and interchange formats — Information
interchange — Representation of dates and times</title>. The ISO
standard provides formats not available in the W3C recommendation. For
example, the capability to refer to a date by its ordinal date or week
date, or to a calendar week. In cases where it is desirable to use
these more specialized formats, this module provides a corresponding
additional class of attributes for them:
<specList>
  <specDesc key="att.dateTime.iso" atts="value-iso"/>
  <specDesc key="att.duration.iso" atts="dur-iso"/>
  <specDesc key="att.datable.iso" atts="notBefore-iso notAfter-iso from-iso to-iso"/>
</specList>
These attributes rely on the following datatype macros:
<specList>
  <specDesc key="data.temporal.iso"/>
  <specDesc key="data.duration.iso"/>
</specList>
 </p>
<?tei winita I'd like to keep this lovely example, but not sure where to put it yet sb ?>
<p>The <att>value</att> and <att>dur</att>
attributes are both used to provide a
standardized or regularized form for the content of an element,
conforming to a subset of the possible formats defined by the relevant
international standard (ISO 8601) as profiled by <title>XML Schema
Part 2: Datatypes Second Edition</title>.</p>
<p>For example: <egXML xmlns="http://www.tei-c.org/ns/Examples"><date
value="1807-06-09">June 9th</date> The period is approaching which
will terminate my present copartnership. On the <date
value="1808-01-01">1st Jany.</date> next, it expires by its own
limitation.</egXML>
<!-- Philadelphia Merchant: The Diary of TP Cope, 210 -->
 </p>
</div>
</div>
</div>
