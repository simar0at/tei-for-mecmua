default namespace = "http://www.w3.org/2001/XInclude"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ge = "http://www.tei-c.org/ns/geneticEditions"
namespace ns1 = "http://www.tei-c.org/ns/1.0"
namespace ns2 = "http://www.tei-c.org/ns/Examples"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2010-11-05T16:15:23Z. 
# Edition: 1.7.0. Last updated on July 6th 2010.
# Edition Location: http://www.tei-c.org/Vault/P5/1.7.0/
#

#
tei_macro.paraContent =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global)*
tei_macro.limitedContent =
  (text | tei_model.limitedPhrase | tei_model.inter)*
tei_macro.phraseSeq =
  (text | tei_model.gLike | tei_model.phrase | tei_model.global)*
tei_macro.phraseSeq.limited =
  (text | tei_model.limitedPhrase | tei_model.global)*
tei_macro.specialPara =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.divPart
   | tei_model.global)*
tei_macro.xtext = (text | tei_model.gLike)*
tei_macro.anyXML =
  element * - (ns1:* | ns2:egXML) {
    attribute * { text }*,
    (text | tei_macro.anyXML)*
  }
tei_AnyThing =
  (element * {
     attribute * - (xml:id | xml:lang) { text }*,
     tei_AnyThing
   }
   | text)*
tei_att.ascribed.attributes = tei_att.ascribed.attribute.who
tei_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.canonical.attributes =
  tei_att.canonical.attribute.key, tei_att.canonical.attribute.ref
tei_att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being
  ##         named, using a coded value of some kind.
  attribute key { xsd:string }?
tei_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition for the entity being named by
  ##         means of one or more URIs.
  attribute ref {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.ranging.attributes =
  tei_att.ranging.attribute.atLeast,
  tei_att.ranging.attribute.atMost,
  tei_att.ranging.attribute.min,
  tei_att.ranging.attribute.max
tei_att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation
  ##       or a range, supplies the minimum value
  ##         observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation
  ##       or a range, supplies the maximum value
  ##       observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.dimensions.attributes =
  tei_att.ranging.attributes,
  tei_att.dimensions.attribute.unit,
  tei_att.dimensions.attribute.quantity,
  tei_att.dimensions.attribute.extent,
  tei_att.dimensions.attribute.precision,
  tei_att.dimensions.attribute.scope
tei_att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:Name
  }?
tei_att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining
  ##         quantity and units in a single string of words. 
  attribute extent {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
    }
  }?
tei_att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision { "high" | "medium" | "low" | "unknown" }?
tei_att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability
  ##         of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope { xsd:Name }?
tei_att.damaged.attributes =
  tei_att.dimensions.attributes,
  tei_att.damaged.attribute.hand,
  tei_att.damaged.attribute.agent,
  tei_att.damaged.attribute.degree,
  tei_att.damaged.attribute.group
tei_att.damaged.attribute.hand =
  
  ## In the case of damage (deliberate defacement, inking out, etc.) assignable to a distinct
  ##         hand, signifies the hand responsible for the damage.
  attribute hand { xsd:anyURI }?
tei_att.damaged.attribute.agent =
  
  ## categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
  attribute agent { xsd:Name }?
tei_att.damaged.attribute.degree =
  
  ## Signifies the degree of damage according to a convenient scale. The damage tag
  ##         with the degree attribute should only be used where the text may be read with
  ##         some confidence; text supplied from other sources should be tagged as supplied.
  attribute degree { text }?
tei_att.damaged.attribute.group =
  
  ## assigns an arbitrary number to each stretch of damage regarded as forming part of the
  ##         same physical phenomenon.
  attribute group { xsd:nonNegativeInteger }?
tei_att.datable.w3c.attributes =
  tei_att.datable.w3c.attribute.period,
  tei_att.datable.w3c.attribute.when,
  tei_att.datable.w3c.attribute.notBefore,
  tei_att.datable.w3c.attribute.notAfter,
  tei_att.datable.w3c.attribute.from,
  tei_att.datable.w3c.attribute.to
tei_att.datable.w3c.attribute.period =
  
  ## supplies a pointer to some location defining a named
  ##       period of time within which the datable item is understood to
  ##       have occurred.
  attribute period { xsd:anyURI }?
tei_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form,
  ##       e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in
  ##	  standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in
  ##	  standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard
  ##	  form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.attributes =
  tei_att.datable.w3c.attributes, tei_att.datable.iso.attributes
tei_att.declarable.attributes = tei_att.declarable.attribute.default
tei_att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when
  ## its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the
      ## only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
tei_att.declaring.attributes = tei_att.declaring.attribute.decls
tei_att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the
  ## header, which are understood to apply to the element bearing this
  ## attribute and its content.
  attribute decls {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.divLike.attributes =
  tei_att.divLike.attribute.org,
  tei_att.divLike.attribute.sample,
  tei_att.divLike.attribute.part
tei_att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## composite content: i.e. no claim is made about the
    ##		  sequence in which the immediate contents of this division
    ##		  are to be processed, or their inter-relationships.
    "composite"
    | 
      ## uniform content: i.e. the immediate contents of this
      ##		  element are regarded as forming a logical unit, to be
      ##		  processed in sequence.
      "uniform"
  }?
tei_att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the
  ##		original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
tei_att.divLike.attribute.part =
  
  ## specifies whether or not the division is fragmented by
  ##		some other structural element, for example a speech which is
  ##		divided between two or more verse stanzas.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the division is incomplete in some respect
    "Y"
    | 
      ## (no) either the division is complete, or no claim is made as to its completeness.
      "N"
    | 
      ## (initial) the initial part of an incomplete division
      "I"
    | 
      ## (medial) a medial part of an incomplete division
      "M"
    | 
      ## (final) the final part of an incomplete division
      "F"
  }?
tei_att.docStatus.attributes = tei_att.docStatus.attribute.status
tei_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when
  ## associated with a dated element, at the time indicated.
  ## Sample values include: 1] candidate; 2] recommendation; 3] submitted; 4] approved; 5] deprecated; 6] proposed; 7] cleared; 8] embargoed; 9] draft; 10] frozen; 11] expired; 12] unfinished; 13] draft; 14] galley; 15] published; 16] withdrawn; 17] expired 
  [ a:defaultValue = "draft" ] attribute status { xsd:Name }?
tei_att.responsibility.attributes =
  tei_att.responsibility.attribute.cert,
  tei_att.responsibility.attribute.resp
tei_att.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert { "high" | "medium" | "low" | "unknown" }?
tei_att.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an
  ##         editor or transcriber.
  attribute resp {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.editLike.attributes =
  tei_att.dimensions.attributes,
  tei_att.responsibility.attributes,
  tei_att.editLike.attribute.instant,
  tei_att.editLike.attribute.evidence,
  tei_att.editLike.attribute.source
tei_att.editLike.attribute.instant =
  
  ## Is this an instant revision?
  [ a:defaultValue = "false" ]
  attribute instant { xsd:boolean | "unknown" | "inapplicable" }?
tei_att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the
  ##         intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    
    ## there is internal evidence to support the intervention.
    "internal"
    | 
      ## there is external evidence to support the intervention.
      "external"
    | 
      ## the intervention or interpretation has been made by the editor, cataloguer, or
      ##             scholar on the basis of their expertise.
      "conjecture"
    | xsd:Name
  }?
tei_att.editLike.attribute.source =
  
  ## contains a list of one or more pointers indicating the sources which support the given
  ##         reading.
  attribute source {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.global.attributes =
  tei_att.global.linking.attributes,
  tei_att.global.analytic.attributes,
  tei_att.global.facs.attributes,
  tei_att.staged.attributes,
  tei_att.global.attribute.xmlid,
  tei_att.global.attribute.n,
  tei_att.global.attribute.xmllang,
  tei_att.global.attribute.rend,
  tei_att.global.attribute.rendition,
  tei_att.global.attribute.xmlbase,
  tei_att.global.attribute.xmlspace
tei_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
tei_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within
  ##         the document.
  attribute n {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
    }
  }?
tei_att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated
  ##         according to BCP 47
  attribute xml:lang { xsd:language }?
tei_att.global.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
    }
  }?
tei_att.global.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the
  ##         source text.
  attribute rendition {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI
  ##         references into absolute URI references.
  attribute xml:base { xsd:anyURI }?
tei_att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be 
  ##       managed by  applications. 
  attribute xml:space {
    
    ## the processor should treat white space according to the
    ##	default XML white space handling rules
    "default"
    | 
      ## the processor should preserve unchanged any and all
      ##	white space in the source
      "preserve"
  }?
tei_att.handFeatures.attributes =
  tei_att.handFeatures.attribute.scribe,
  tei_att.handFeatures.attribute.script,
  tei_att.handFeatures.attribute.medium,
  tei_att.handFeatures.attribute.scope
tei_att.handFeatures.attribute.scribe =
  
  ## gives a standard name or other identifier for the scribe
  ## believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
tei_att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by
  ## this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name, xsd:Name* }
  }?
tei_att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other
  ## writing medium, e.g. pencil
  attribute medium { xsd:Name }?
tei_att.handFeatures.attribute.scope =
  
  ## specifies how widely this  hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
tei_att.internetMedia.attributes =
  tei_att.internetMedia.attribute.mimeType
tei_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
tei_att.interpLike.attributes =
  tei_att.responsibility.attributes,
  tei_att.interpLike.attribute.type,
  tei_att.interpLike.attribute.inst
tei_att.interpLike.attribute.type =
  
  ## indicates what kind of phenomenon is being noted in the passage.
  ## Sample values include: 1] image; 2] character; 3] theme; 4] allusion
  attribute type { xsd:Name }?
tei_att.interpLike.attribute.inst =
  
  ## (instances) points to instances of the analysis or interpretation represented
  ## by the current element.
  attribute inst {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.measurement.attributes =
  tei_att.measurement.attribute.unit,
  tei_att.measurement.attribute.quantity,
  tei_att.measurement.attribute.commodity
tei_att.measurement.attribute.unit =
  
  ## indicates the units used for the measurement, usually
  ##       using the standard symbol for the desired units.
  ## Suggested values include: 1] m(metre) ; 2] kg(kilogram) ; 3] s(second) ; 4] Hz(hertz) ; 5] Pa(pascal) ; 6] Ω(ohm) ; 7] L(litre) ; 8] t(tonne) ; 9] ha(hectare) ; 10] Å(ångström) ; 11] mL(millilitre) ; 12] cm(centimetre) ; 13] dB(decibel) ; 14] kbit(kilobit) ; 15] Kibit(kibibit) ; 16] kB(kilobyte) ; 17] KiB(kibibyte) ; 18] MB(megabyte) ; 19] MiB(mebibyte) 
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Ω"
    | 
      ## (litre) 1 dm³
      "L"
    | 
      ## (tonne) 10³ kg
      "t"
    | 
      ## (hectare) 1 hm²
      "ha"
    | 
      ## (ångström) 10⁻¹⁰ m
      "Å"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10³ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¹⁰ or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10³ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2¹⁰ or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10⁶ or 1 000 000 bytes
      "MB"
    | 
      ## (mebibyte) 2²⁰ or 1 048 576 bytes
      "MiB"
    | xsd:Name
  }?
tei_att.measurement.attribute.quantity =
  
  ## specifies the number of the specified units that
  ##       comprise the measurement
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.measurement.attribute.commodity =
  
  ## indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
    }
  }?
tei_att.naming.attributes =
  tei_att.canonical.attributes,
  tei_att.naming.attribute.role,
  tei_att.naming.attribute.nymRef
tei_att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by
  ## this name, for example the occupation of a person, or the status of a place. 
  attribute role { xsd:Name }?
tei_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form
  ##       (nym) of the names associated with the object
  ##        named by
  ##       the element bearing it.
  attribute nymRef {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.placement.attributes = tei_att.placement.attribute.place
tei_att.placement.attribute.place =
  
  ## 
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ##  in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:Name),
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ##  in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:Name)*
    }
  }?
tei_att.typed.attributes =
  tei_att.typed.attribute.type, tei_att.typed.attribute.subtype
tei_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient
  ##  classification scheme or typology.
  attribute type { xsd:Name }?
tei_att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype { xsd:Name }?
tei_att.pointing.attributes =
  tei_att.pointing.attribute.target, tei_att.pointing.attribute.evaluate
tei_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a
  ##       pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then
    ##	  the target of that pointer will be taken, and so on, until
    ##	  an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then
      ##	  its target (whether a pointer or not) is taken as the target
      ##	  of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out
      ##	  beyond that needed to find the element specified in the
      ##	  pointer's target.
      "none"
  }?
tei_att.pointing.group.attributes =
  tei_att.pointing.attributes,
  tei_att.typed.attributes,
  tei_att.pointing.group.attribute.domains,
  tei_att.pointing.group.attribute.targFunc
tei_att.pointing.group.attribute.domains =
  
  ## optionally specifies the identifiers of the elements
  ##       within which all elements indicated by the contents of this
  ##       element lie.
  attribute domains {
    list { xsd:anyURI, xsd:anyURI, xsd:anyURI* }
  }?
tei_att.pointing.group.attribute.targFunc =
  
  ## (target function) describes the function of each of the values of the
  ##       targets attribute of the enclosed link,
  ##       join, or alt tags.
  attribute targFunc {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
    }
  }?
tei_att.scoping.attributes =
  tei_att.scoping.attribute.target, tei_att.scoping.attribute.match
tei_att.scoping.attribute.target =
  
  ## points at one or several  elements or  sets of elements by
  ##       means of one or more
  ##       data pointers, using the URI syntax.
  attribute target {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.scoping.attribute.match =
  
  ## supplies an arbitrary XPath expression identifying a set
  ##       of nodes, selected within the context identified by the
  ##       target attribute if this is supplied, or within the
  ##       context of the element bearing this attribute if it is not.
  ##
  attribute match { text }?
tei_att.segLike.attributes =
  tei_att.segLike.attribute.function, tei_att.segLike.attribute.part
tei_att.segLike.attribute.function =
  
  ## characterizes the function of the segment.
  attribute function { xsd:Name }?
tei_att.segLike.attribute.part =
  
  ## specifies whether or not the segment is fragmented by some other
  ## structural element, for example a clause which is divided between two
  ## or more sentences.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the segment is incomplete in some respect
    "Y"
    | 
      ## (no) either the segment is complete, or no claim is made as to
      ## its completeness
      "N"
    | 
      ## (initial) the initial part of an incomplete segment
      "I"
    | 
      ## (medial) a medial part of an incomplete segment
      "M"
    | 
      ## (final) the final part of an incomplete segment
      "F"
  }?
tei_att.sourced.attributes = tei_att.sourced.attribute.ed
tei_att.sourced.attribute.ed =
  
  ## (edition) supplies an arbitrary identifier for the source edition in which
  ##       the associated feature (for example, a  page, column, or line
  ##       break) occurs at this point in the text.
  attribute ed {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.spanning.attributes = tei_att.spanning.attribute.spanTo
tei_att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element
  ##	bearing this attribute.
  attribute spanTo { xsd:anyURI }?
tei_att.tableDecoration.attributes =
  tei_att.tableDecoration.attribute.role,
  tei_att.tableDecoration.attribute.rows,
  tei_att.tableDecoration.attribute.cols
tei_att.tableDecoration.attribute.role =
  
  ## indicates the kind of information held in this cell or
  ## in each cell of this row.
  ## Suggested values include: 1] label; 2] data
  [ a:defaultValue = "data" ]
  attribute role {
    
    ## labelling or descriptive information only.
    "label"
    | 
      ## data values.
      "data"
    | xsd:Name
  }?
tei_att.tableDecoration.attribute.rows =
  
  ## indicates the number of rows occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute rows { xsd:nonNegativeInteger }?
tei_att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or
  ##	row.
  [ a:defaultValue = "1" ] attribute cols { xsd:nonNegativeInteger }?
tei_att.transcriptional.attributes =
  tei_att.editLike.attributes,
  tei_att.transcriptional.attribute.hand,
  tei_att.transcriptional.attribute.status,
  tei_att.transcriptional.attribute.seq
tei_att.transcriptional.attribute.hand =
  
  ## signifies the hand of the agent which made the intervention.
  attribute hand { xsd:anyURI }?
tei_att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in
  ##       the case of a deletion, strikeouts
  ##       which include too much or too little text, or in the case of an
  ##       addition, an insertion which duplicates some of the text
  ##       already present.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ] attribute status { xsd:Name }?
tei_att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which
  ##       the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
tei_att.translatable.attributes = tei_att.translatable.attribute.version
tei_att.translatable.attribute.version =
  
  ## specifies the version name or number of the source from
  ##	which the translated version was derived
  attribute version {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
tei_model.nameLike.agent = tei_name | tei_persName
tei_model.nameLike.agent_alternation = tei_name | tei_persName
tei_model.nameLike.agent_sequence = tei_name, tei_persName
tei_model.nameLike.agent_sequenceOptional = tei_name?, tei_persName?
tei_model.nameLike.agent_sequenceOptionalRepeatable =
  tei_name*, tei_persName*
tei_model.nameLike.agent_sequenceRepeatable = tei_name+, tei_persName+
tei_model.segLike = tei_s | tei_phr | tei_m | tei_pc | tei_seg
tei_model.segLike_alternation =
  tei_s | tei_phr | tei_m | tei_pc | tei_seg
tei_model.segLike_sequence = tei_s, tei_phr, tei_m, tei_pc, tei_seg
tei_model.segLike_sequenceOptional =
  tei_s?, tei_phr?, tei_m?, tei_pc?, tei_seg?
tei_model.segLike_sequenceOptionalRepeatable =
  tei_s*, tei_phr*, tei_m*, tei_pc*, tei_seg*
tei_model.segLike_sequenceRepeatable =
  tei_s+, tei_phr+, tei_m+, tei_pc+, tei_seg+
tei_model.hiLike = tei_hi
tei_model.hiLike_alternation = tei_hi
tei_model.hiLike_sequence = tei_hi
tei_model.hiLike_sequenceOptional = tei_hi?
tei_model.hiLike_sequenceOptionalRepeatable = tei_hi*
tei_model.hiLike_sequenceRepeatable = tei_hi+
tei_model.emphLike =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
tei_model.emphLike_alternation =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
tei_model.emphLike_sequence =
  tei_foreign,
  tei_emph,
  tei_distinct,
  tei_mentioned,
  tei_soCalled,
  tei_gloss,
  tei_term,
  tei_title
tei_model.emphLike_sequenceOptional =
  tei_foreign?,
  tei_emph?,
  tei_distinct?,
  tei_mentioned?,
  tei_soCalled?,
  tei_gloss?,
  tei_term?,
  tei_title?
tei_model.emphLike_sequenceOptionalRepeatable =
  tei_foreign*,
  tei_emph*,
  tei_distinct*,
  tei_mentioned*,
  tei_soCalled*,
  tei_gloss*,
  tei_term*,
  tei_title*
tei_model.emphLike_sequenceRepeatable =
  tei_foreign+,
  tei_emph+,
  tei_distinct+,
  tei_mentioned+,
  tei_soCalled+,
  tei_gloss+,
  tei_term+,
  tei_title+
tei_model.highlighted = tei_model.hiLike | tei_model.emphLike
tei_model.highlighted_alternation =
  tei_model.hiLike_alternation | tei_model.emphLike_alternation
tei_model.highlighted_sequence =
  tei_model.hiLike_sequence, tei_model.emphLike_sequence
tei_model.highlighted_sequenceOptional =
  tei_model.hiLike_sequenceOptional?,
  tei_model.emphLike_sequenceOptional?
tei_model.highlighted_sequenceOptionalRepeatable =
  tei_model.hiLike_sequenceOptionalRepeatable*,
  tei_model.emphLike_sequenceOptionalRepeatable*
tei_model.highlighted_sequenceRepeatable =
  tei_model.hiLike_sequenceRepeatable+,
  tei_model.emphLike_sequenceRepeatable+
tei_model.dateLike = tei_date | tei_time
tei_model.dateLike_alternation = tei_date | tei_time
tei_model.dateLike_sequence = tei_date, tei_time
tei_model.dateLike_sequenceOptional = tei_date?, tei_time?
tei_model.dateLike_sequenceOptionalRepeatable = tei_date*, tei_time*
tei_model.dateLike_sequenceRepeatable = tei_date+, tei_time+
tei_model.dimLike = tei_height | tei_depth | tei_width
tei_model.measureLike =
  tei_num
  | tei_measure
  | tei_measureGrp
  | tei_dim
  | tei_height
  | tei_depth
  | tei_width
tei_model.measureLike_alternation =
  tei_num
  | tei_measure
  | tei_measureGrp
  | tei_dim
  | tei_height
  | tei_depth
  | tei_width
tei_model.measureLike_sequence =
  tei_num,
  tei_measure,
  tei_measureGrp,
  tei_dim,
  tei_height,
  tei_depth,
  tei_width
tei_model.measureLike_sequenceOptional =
  tei_num?,
  tei_measure?,
  tei_measureGrp?,
  tei_dim?,
  tei_height?,
  tei_depth?,
  tei_width?
tei_model.measureLike_sequenceOptionalRepeatable =
  tei_num*,
  tei_measure*,
  tei_measureGrp*,
  tei_dim*,
  tei_height*,
  tei_depth*,
  tei_width*
tei_model.measureLike_sequenceRepeatable =
  tei_num+,
  tei_measure+,
  tei_measureGrp+,
  tei_dim+,
  tei_height+,
  tei_depth+,
  tei_width+
tei_model.egLike = notAllowed
tei_model.egLike_alternation = notAllowed
tei_model.egLike_sequence = empty
tei_model.egLike_sequenceOptional = empty
tei_model.egLike_sequenceOptionalRepeatable = empty
tei_model.egLike_sequenceRepeatable = notAllowed
tei_model.graphicLike = tei_graphic | tei_formula
tei_model.graphicLike_alternation = tei_graphic | tei_formula
tei_model.graphicLike_sequence = tei_graphic, tei_formula
tei_model.graphicLike_sequenceOptional = tei_graphic?, tei_formula?
tei_model.graphicLike_sequenceOptionalRepeatable =
  tei_graphic*, tei_formula*
tei_model.graphicLike_sequenceRepeatable = tei_graphic+, tei_formula+
tei_model.pPart.msdesc =
  tei_catchwords
  | tei_dimensions
  | tei_heraldry
  | tei_locus
  | tei_locusGrp
  | tei_material
  | tei_origDate
  | tei_origPlace
  | tei_secFol
  | tei_signatures
  | tei_stamp
  | tei_watermark
  | tei_handShift
tei_model.pPart.msdesc_alternation =
  tei_catchwords
  | tei_dimensions
  | tei_heraldry
  | tei_locus
  | tei_locusGrp
  | tei_material
  | tei_origDate
  | tei_origPlace
  | tei_secFol
  | tei_signatures
  | tei_stamp
  | tei_watermark
  | tei_handShift
tei_model.pPart.msdesc_sequence =
  tei_catchwords,
  tei_dimensions,
  tei_heraldry,
  tei_locus,
  tei_locusGrp,
  tei_material,
  tei_origDate,
  tei_origPlace,
  tei_secFol,
  tei_signatures,
  tei_stamp,
  tei_watermark,
  tei_handShift
tei_model.pPart.msdesc_sequenceOptional =
  tei_catchwords?,
  tei_dimensions?,
  tei_heraldry?,
  tei_locus?,
  tei_locusGrp?,
  tei_material?,
  tei_origDate?,
  tei_origPlace?,
  tei_secFol?,
  tei_signatures?,
  tei_stamp?,
  tei_watermark?,
  tei_handShift?
tei_model.pPart.msdesc_sequenceOptionalRepeatable =
  tei_catchwords*,
  tei_dimensions*,
  tei_heraldry*,
  tei_locus*,
  tei_locusGrp*,
  tei_material*,
  tei_origDate*,
  tei_origPlace*,
  tei_secFol*,
  tei_signatures*,
  tei_stamp*,
  tei_watermark*,
  tei_handShift*
tei_model.pPart.msdesc_sequenceRepeatable =
  tei_catchwords+,
  tei_dimensions+,
  tei_heraldry+,
  tei_locus+,
  tei_locusGrp+,
  tei_material+,
  tei_origDate+,
  tei_origPlace+,
  tei_secFol+,
  tei_signatures+,
  tei_stamp+,
  tei_watermark+,
  tei_handShift+
tei_model.pPart.editorial =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.editorial_alternation =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.editorial_sequence =
  tei_choice, tei_abbr, tei_expan, tei_ex, tei_am, tei_subst
tei_model.pPart.editorial_sequenceOptional =
  tei_choice?, tei_abbr?, tei_expan?, tei_ex?, tei_am?, tei_subst?
tei_model.pPart.editorial_sequenceOptionalRepeatable =
  tei_choice*, tei_abbr*, tei_expan*, tei_ex*, tei_am*, tei_subst*
tei_model.pPart.editorial_sequenceRepeatable =
  tei_choice+, tei_abbr+, tei_expan+, tei_ex+, tei_am+, tei_subst+
tei_model.pPart.transcriptional =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_app
  | tei_damage
  | tei_restore
  | tei_supplied
  | tei_surplus
  | tei_mod
  | tei_undo
  | tei_redo
  | tei_rewrite
  | tei_metaMark
  | tei_used
tei_model.pPart.transcriptional_alternation =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_app
  | tei_damage
  | tei_restore
  | tei_supplied
  | tei_surplus
  | tei_mod
  | tei_undo
  | tei_redo
  | tei_rewrite
  | tei_metaMark
  | tei_used
tei_model.pPart.transcriptional_sequence =
  tei_sic,
  tei_corr,
  tei_reg,
  tei_orig,
  tei_add,
  tei_del,
  tei_unclear,
  tei_app,
  tei_damage,
  tei_restore,
  tei_supplied,
  tei_surplus,
  tei_mod,
  tei_undo,
  tei_redo,
  tei_rewrite,
  tei_metaMark,
  tei_used
tei_model.pPart.transcriptional_sequenceOptional =
  tei_sic?,
  tei_corr?,
  tei_reg?,
  tei_orig?,
  tei_add?,
  tei_del?,
  tei_unclear?,
  tei_app?,
  tei_damage?,
  tei_restore?,
  tei_supplied?,
  tei_surplus?,
  tei_mod?,
  tei_undo?,
  tei_redo?,
  tei_rewrite?,
  tei_metaMark?,
  tei_used?
tei_model.pPart.transcriptional_sequenceOptionalRepeatable =
  tei_sic*,
  tei_corr*,
  tei_reg*,
  tei_orig*,
  tei_add*,
  tei_del*,
  tei_unclear*,
  tei_app*,
  tei_damage*,
  tei_restore*,
  tei_supplied*,
  tei_surplus*,
  tei_mod*,
  tei_undo*,
  tei_redo*,
  tei_rewrite*,
  tei_metaMark*,
  tei_used*
tei_model.pPart.transcriptional_sequenceRepeatable =
  tei_sic+,
  tei_corr+,
  tei_reg+,
  tei_orig+,
  tei_add+,
  tei_del+,
  tei_unclear+,
  tei_app+,
  tei_damage+,
  tei_restore+,
  tei_supplied+,
  tei_surplus+,
  tei_mod+,
  tei_undo+,
  tei_redo+,
  tei_rewrite+,
  tei_metaMark+,
  tei_used+
tei_model.pPart.edit =
  tei_model.pPart.editorial | tei_model.pPart.transcriptional
tei_model.pPart.edit_alternation =
  tei_model.pPart.editorial_alternation
  | tei_model.pPart.transcriptional_alternation
tei_model.pPart.edit_sequence =
  tei_model.pPart.editorial_sequence,
  tei_model.pPart.transcriptional_sequence
tei_model.pPart.edit_sequenceOptional =
  tei_model.pPart.editorial_sequenceOptional?,
  tei_model.pPart.transcriptional_sequenceOptional?
tei_model.pPart.edit_sequenceOptionalRepeatable =
  tei_model.pPart.editorial_sequenceOptionalRepeatable*,
  tei_model.pPart.transcriptional_sequenceOptionalRepeatable*
tei_model.pPart.edit_sequenceRepeatable =
  tei_model.pPart.editorial_sequenceRepeatable+,
  tei_model.pPart.transcriptional_sequenceRepeatable+
tei_model.ptrLike = tei_ptr | tei_ref
tei_model.ptrLike_alternation = tei_ptr | tei_ref
tei_model.ptrLike_sequence = tei_ptr, tei_ref
tei_model.ptrLike_sequenceOptional = tei_ptr?, tei_ref?
tei_model.ptrLike_sequenceOptionalRepeatable = tei_ptr*, tei_ref*
tei_model.ptrLike_sequenceRepeatable = tei_ptr+, tei_ref+
tei_model.global.meta =
  tei_index
  | tei_precision
  | tei_certainty
  | tei_respons
  | tei_span
  | tei_spanGrp
  | tei_interp
  | tei_interpGrp
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
  | tei_transposeGrp
tei_model.global.meta_alternation =
  tei_index
  | tei_precision
  | tei_certainty
  | tei_respons
  | tei_span
  | tei_spanGrp
  | tei_interp
  | tei_interpGrp
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
  | tei_transposeGrp
tei_model.global.meta_sequence =
  tei_index,
  tei_precision,
  tei_certainty,
  tei_respons,
  tei_span,
  tei_spanGrp,
  tei_interp,
  tei_interpGrp,
  tei_link,
  tei_linkGrp,
  tei_timeline,
  tei_join,
  tei_joinGrp,
  tei_alt,
  tei_altGrp,
  tei_transposeGrp
tei_model.global.meta_sequenceOptional =
  tei_index?,
  tei_precision?,
  tei_certainty?,
  tei_respons?,
  tei_span?,
  tei_spanGrp?,
  tei_interp?,
  tei_interpGrp?,
  tei_link?,
  tei_linkGrp?,
  tei_timeline?,
  tei_join?,
  tei_joinGrp?,
  tei_alt?,
  tei_altGrp?,
  tei_transposeGrp?
tei_model.global.meta_sequenceOptionalRepeatable =
  tei_index*,
  tei_precision*,
  tei_certainty*,
  tei_respons*,
  tei_span*,
  tei_spanGrp*,
  tei_interp*,
  tei_interpGrp*,
  tei_link*,
  tei_linkGrp*,
  tei_timeline*,
  tei_join*,
  tei_joinGrp*,
  tei_alt*,
  tei_altGrp*,
  tei_transposeGrp*
tei_model.global.meta_sequenceRepeatable =
  tei_index+,
  tei_precision+,
  tei_certainty+,
  tei_respons+,
  tei_span+,
  tei_spanGrp+,
  tei_interp+,
  tei_interpGrp+,
  tei_link+,
  tei_linkGrp+,
  tei_timeline+,
  tei_join+,
  tei_joinGrp+,
  tei_alt+,
  tei_altGrp+,
  tei_transposeGrp+
tei_model.milestoneLike =
  tei_milestone | tei_pb | tei_lb | tei_cb | tei_anchor | tei_fw
tei_model.milestoneLike_alternation =
  tei_milestone | tei_pb | tei_lb | tei_cb | tei_anchor | tei_fw
tei_model.milestoneLike_sequence =
  tei_milestone, tei_pb, tei_lb, tei_cb, tei_anchor, tei_fw
tei_model.milestoneLike_sequenceOptional =
  tei_milestone?, tei_pb?, tei_lb?, tei_cb?, tei_anchor?, tei_fw?
tei_model.milestoneLike_sequenceOptionalRepeatable =
  tei_milestone*, tei_pb*, tei_lb*, tei_cb*, tei_anchor*, tei_fw*
tei_model.milestoneLike_sequenceRepeatable =
  tei_milestone+, tei_pb+, tei_lb+, tei_cb+, tei_anchor+, tei_fw+
tei_model.gLike = tei_g
tei_model.gLike_alternation = tei_g
tei_model.gLike_sequence = tei_g
tei_model.gLike_sequenceOptional = tei_g?
tei_model.gLike_sequenceOptionalRepeatable = tei_g*
tei_model.gLike_sequenceRepeatable = tei_g+
tei_model.biblLike = tei_bibl | tei_biblFull | tei_msDesc
tei_model.biblLike_alternation = tei_bibl | tei_biblFull | tei_msDesc
tei_model.biblLike_sequence = tei_bibl, tei_biblFull, tei_msDesc
tei_model.biblLike_sequenceOptional =
  tei_bibl?, tei_biblFull?, tei_msDesc?
tei_model.biblLike_sequenceOptionalRepeatable =
  tei_bibl*, tei_biblFull*, tei_msDesc*
tei_model.biblLike_sequenceRepeatable =
  tei_bibl+, tei_biblFull+, tei_msDesc+
tei_model.headLike = tei_head
tei_model.headLike_alternation = tei_head
tei_model.headLike_sequence = tei_head
tei_model.headLike_sequenceOptional = tei_head?
tei_model.headLike_sequenceOptionalRepeatable = tei_head*
tei_model.headLike_sequenceRepeatable = tei_head+
tei_model.labelLike = tei_desc | tei_label
tei_model.labelLike_alternation = tei_desc | tei_label
tei_model.labelLike_sequence = tei_desc, tei_label
tei_model.labelLike_sequenceOptional = tei_desc?, tei_label?
tei_model.labelLike_sequenceOptionalRepeatable = tei_desc*, tei_label*
tei_model.labelLike_sequenceRepeatable = tei_desc+, tei_label+
tei_model.listLike =
  tei_list | tei_listBibl | tei_listWit | tei_listEvent | tei_listNym
tei_model.listLike_alternation =
  tei_list | tei_listBibl | tei_listWit | tei_listEvent | tei_listNym
tei_model.listLike_sequence =
  tei_list, tei_listBibl, tei_listWit, tei_listEvent, tei_listNym
tei_model.listLike_sequenceOptional =
  tei_list?, tei_listBibl?, tei_listWit?, tei_listEvent?, tei_listNym?
tei_model.listLike_sequenceOptionalRepeatable =
  tei_list*, tei_listBibl*, tei_listWit*, tei_listEvent*, tei_listNym*
tei_model.listLike_sequenceRepeatable =
  tei_list+, tei_listBibl+, tei_listWit+, tei_listEvent+, tei_listNym+
tei_model.noteLike = tei_note | tei_witDetail
tei_model.noteLike_alternation = tei_note | tei_witDetail
tei_model.noteLike_sequence = tei_note, tei_witDetail
tei_model.noteLike_sequenceOptional = tei_note?, tei_witDetail?
tei_model.noteLike_sequenceOptionalRepeatable =
  tei_note*, tei_witDetail*
tei_model.noteLike_sequenceRepeatable = tei_note+, tei_witDetail+
tei_model.lLike = tei_l
tei_model.lLike_alternation = tei_l
tei_model.lLike_sequence = tei_l
tei_model.lLike_sequenceOptional = tei_l?
tei_model.lLike_sequenceOptionalRepeatable = tei_l*
tei_model.lLike_sequenceRepeatable = tei_l+
tei_model.pLike = tei_p | tei_ab
tei_model.pLike_alternation = tei_p | tei_ab
tei_model.pLike_sequence = tei_p, tei_ab
tei_model.pLike_sequenceOptional = tei_p?, tei_ab?
tei_model.pLike_sequenceOptionalRepeatable = tei_p*, tei_ab*
tei_model.pLike_sequenceRepeatable = tei_p+, tei_ab+
tei_model.stageLike =
  tei_stage
  | tei_move
  | tei_view
  | tei_camera
  | tei_sound
  | tei_caption
  | tei_tech
tei_model.stageLike_alternation =
  tei_stage
  | tei_move
  | tei_view
  | tei_camera
  | tei_sound
  | tei_caption
  | tei_tech
tei_model.stageLike_sequence =
  tei_stage,
  tei_move,
  tei_view,
  tei_camera,
  tei_sound,
  tei_caption,
  tei_tech
tei_model.stageLike_sequenceOptional =
  tei_stage?,
  tei_move?,
  tei_view?,
  tei_camera?,
  tei_sound?,
  tei_caption?,
  tei_tech?
tei_model.stageLike_sequenceOptionalRepeatable =
  tei_stage*,
  tei_move*,
  tei_view*,
  tei_camera*,
  tei_sound*,
  tei_caption*,
  tei_tech*
tei_model.stageLike_sequenceRepeatable =
  tei_stage+,
  tei_move+,
  tei_view+,
  tei_camera+,
  tei_sound+,
  tei_caption+,
  tei_tech+
tei_model.entryPart = notAllowed
tei_model.global.edit =
  tei_gap
  | tei_addSpan
  | tei_damageSpan
  | tei_delSpan
  | tei_space
  | tei_modSpan
tei_model.global.edit_alternation =
  tei_gap
  | tei_addSpan
  | tei_damageSpan
  | tei_delSpan
  | tei_space
  | tei_modSpan
tei_model.global.edit_sequence =
  tei_gap,
  tei_addSpan,
  tei_damageSpan,
  tei_delSpan,
  tei_space,
  tei_modSpan
tei_model.global.edit_sequenceOptional =
  tei_gap?,
  tei_addSpan?,
  tei_damageSpan?,
  tei_delSpan?,
  tei_space?,
  tei_modSpan?
tei_model.global.edit_sequenceOptionalRepeatable =
  tei_gap*,
  tei_addSpan*,
  tei_damageSpan*,
  tei_delSpan*,
  tei_space*,
  tei_modSpan*
tei_model.global.edit_sequenceRepeatable =
  tei_gap+,
  tei_addSpan+,
  tei_damageSpan+,
  tei_delSpan+,
  tei_space+,
  tei_modSpan+
tei_model.divPart =
  tei_model.lLike
  | tei_model.pLike
  | tei_lg
  | tei_sp
  | tei_floatingText
  | tei_graph
  | tei_tree
  | tei_eTree
  | tei_forest
  | tei_forestGrp
tei_model.divPart_alternation =
  tei_model.lLike_alternation
  | tei_model.pLike_alternation
  | tei_lg
  | tei_sp
  | tei_floatingText
  | tei_graph
  | tei_tree
  | tei_eTree
  | tei_forest
  | tei_forestGrp
tei_model.divPart_sequence =
  tei_model.lLike_sequence,
  tei_model.pLike_sequence,
  tei_lg,
  tei_sp,
  tei_floatingText,
  tei_graph,
  tei_tree,
  tei_eTree,
  tei_forest,
  tei_forestGrp
tei_model.divPart_sequenceOptional =
  tei_model.lLike_sequenceOptional?,
  tei_model.pLike_sequenceOptional?,
  tei_lg?,
  tei_sp?,
  tei_floatingText?,
  tei_graph?,
  tei_tree?,
  tei_eTree?,
  tei_forest?,
  tei_forestGrp?
tei_model.divPart_sequenceOptionalRepeatable =
  tei_model.lLike_sequenceOptionalRepeatable*,
  tei_model.pLike_sequenceOptionalRepeatable*,
  tei_lg*,
  tei_sp*,
  tei_floatingText*,
  tei_graph*,
  tei_tree*,
  tei_eTree*,
  tei_forest*,
  tei_forestGrp*
tei_model.divPart_sequenceRepeatable =
  tei_model.lLike_sequenceRepeatable+,
  tei_model.pLike_sequenceRepeatable+,
  tei_lg+,
  tei_sp+,
  tei_floatingText+,
  tei_graph+,
  tei_tree+,
  tei_eTree+,
  tei_forest+,
  tei_forestGrp+
tei_model.persStateLike = tei_persName | tei_affiliation
tei_model.persStateLike_alternation = tei_persName | tei_affiliation
tei_model.persStateLike_sequence = tei_persName, tei_affiliation
tei_model.persStateLike_sequenceOptional =
  tei_persName?, tei_affiliation?
tei_model.persStateLike_sequenceOptionalRepeatable =
  tei_persName*, tei_affiliation*
tei_model.persStateLike_sequenceRepeatable =
  tei_persName+, tei_affiliation+
tei_model.placeNamePart = tei_placeName | tei_country | tei_settlement
tei_model.placeNamePart_alternation =
  tei_placeName | tei_country | tei_settlement
tei_model.placeNamePart_sequence =
  tei_placeName, tei_country, tei_settlement
tei_model.placeNamePart_sequenceOptional =
  tei_placeName?, tei_country?, tei_settlement?
tei_model.placeNamePart_sequenceOptionalRepeatable =
  tei_placeName*, tei_country*, tei_settlement*
tei_model.placeNamePart_sequenceRepeatable =
  tei_placeName+, tei_country+, tei_settlement+
tei_model.placeStateLike = tei_model.placeNamePart
tei_model.placeStateLike_alternation =
  tei_model.placeNamePart_alternation
tei_model.placeStateLike_sequence = tei_model.placeNamePart_sequence
tei_model.placeStateLike_sequenceOptional =
  tei_model.placeNamePart_sequenceOptional?
tei_model.placeStateLike_sequenceOptionalRepeatable =
  tei_model.placeNamePart_sequenceOptionalRepeatable*
tei_model.placeStateLike_sequenceRepeatable =
  tei_model.placeNamePart_sequenceRepeatable+
tei_model.publicationStmtPart =
  tei_address
  | tei_date
  | tei_publisher
  | tei_pubPlace
  | tei_distributor
  | tei_authority
  | tei_idno
  | tei_availability
tei_model.glossLike =
  tei_desc | tei_gloss | tei_precision | tei_certainty | tei_respons
tei_model.quoteLike = tei_quote | tei_cit
tei_model.quoteLike_alternation = tei_quote | tei_cit
tei_model.quoteLike_sequence = tei_quote, tei_cit
tei_model.quoteLike_sequenceOptional = tei_quote?, tei_cit?
tei_model.quoteLike_sequenceOptionalRepeatable = tei_quote*, tei_cit*
tei_model.quoteLike_sequenceRepeatable = tei_quote+, tei_cit+
tei_model.qLike = tei_model.quoteLike | tei_said | tei_q
tei_model.qLike_alternation =
  tei_model.quoteLike_alternation | tei_said | tei_q
tei_model.qLike_sequence = tei_model.quoteLike_sequence, tei_said, tei_q
tei_model.qLike_sequenceOptional =
  tei_model.quoteLike_sequenceOptional?, tei_said?, tei_q?
tei_model.qLike_sequenceOptionalRepeatable =
  tei_model.quoteLike_sequenceOptionalRepeatable*, tei_said*, tei_q*
tei_model.qLike_sequenceRepeatable =
  tei_model.quoteLike_sequenceRepeatable+, tei_said+, tei_q+
tei_model.respLike =
  tei_author
  | tei_editor
  | tei_respStmt
  | tei_sponsor
  | tei_funder
  | tei_principal
tei_model.respLike_alternation =
  tei_author
  | tei_editor
  | tei_respStmt
  | tei_sponsor
  | tei_funder
  | tei_principal
tei_model.respLike_sequence =
  tei_author,
  tei_editor,
  tei_respStmt,
  tei_sponsor,
  tei_funder,
  tei_principal
tei_model.respLike_sequenceOptional =
  tei_author?,
  tei_editor?,
  tei_respStmt?,
  tei_sponsor?,
  tei_funder?,
  tei_principal?
tei_model.respLike_sequenceOptionalRepeatable =
  tei_author*,
  tei_editor*,
  tei_respStmt*,
  tei_sponsor*,
  tei_funder*,
  tei_principal*
tei_model.respLike_sequenceRepeatable =
  tei_author+,
  tei_editor+,
  tei_respStmt+,
  tei_sponsor+,
  tei_funder+,
  tei_principal+
tei_model.divWrapper =
  tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_salute
  | tei_docAuthor
  | tei_docDate
tei_model.divWrapper_alternation =
  tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_salute
  | tei_docAuthor
  | tei_docDate
tei_model.divWrapper_sequence =
  tei_byline,
  tei_dateline,
  tei_argument,
  tei_epigraph,
  tei_salute,
  tei_docAuthor,
  tei_docDate
tei_model.divWrapper_sequenceOptional =
  tei_byline?,
  tei_dateline?,
  tei_argument?,
  tei_epigraph?,
  tei_salute?,
  tei_docAuthor?,
  tei_docDate?
tei_model.divWrapper_sequenceOptionalRepeatable =
  tei_byline*,
  tei_dateline*,
  tei_argument*,
  tei_epigraph*,
  tei_salute*,
  tei_docAuthor*,
  tei_docDate*
tei_model.divWrapper_sequenceRepeatable =
  tei_byline+,
  tei_dateline+,
  tei_argument+,
  tei_epigraph+,
  tei_salute+,
  tei_docAuthor+,
  tei_docDate+
tei_model.divTopPart = tei_model.headLike | tei_opener
tei_model.divTopPart_alternation =
  tei_model.headLike_alternation | tei_opener
tei_model.divTopPart_sequence = tei_model.headLike_sequence, tei_opener
tei_model.divTopPart_sequenceOptional =
  tei_model.headLike_sequenceOptional?, tei_opener?
tei_model.divTopPart_sequenceOptionalRepeatable =
  tei_model.headLike_sequenceOptionalRepeatable*, tei_opener*
tei_model.divTopPart_sequenceRepeatable =
  tei_model.headLike_sequenceRepeatable+, tei_opener+
tei_model.divTop = tei_model.divWrapper | tei_model.divTopPart
tei_model.frontPart.drama =
  tei_set | tei_prologue | tei_epilogue | tei_performance | tei_castList
tei_model.frontPart.drama_alternation =
  tei_set | tei_prologue | tei_epilogue | tei_performance | tei_castList
tei_model.frontPart.drama_sequence =
  tei_set, tei_prologue, tei_epilogue, tei_performance, tei_castList
tei_model.frontPart.drama_sequenceOptional =
  tei_set?,
  tei_prologue?,
  tei_epilogue?,
  tei_performance?,
  tei_castList?
tei_model.frontPart.drama_sequenceOptionalRepeatable =
  tei_set*,
  tei_prologue*,
  tei_epilogue*,
  tei_performance*,
  tei_castList*
tei_model.frontPart.drama_sequenceRepeatable =
  tei_set+,
  tei_prologue+,
  tei_epilogue+,
  tei_performance+,
  tei_castList+
tei_model.pLike.front =
  tei_head
  | tei_byline
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.divBottomPart =
  tei_trailer | tei_closer | tei_signed | tei_postscript
tei_model.divBottomPart_alternation =
  tei_trailer | tei_closer | tei_signed | tei_postscript
tei_model.divBottomPart_sequence =
  tei_trailer, tei_closer, tei_signed, tei_postscript
tei_model.divBottomPart_sequenceOptional =
  tei_trailer?, tei_closer?, tei_signed?, tei_postscript?
tei_model.divBottomPart_sequenceOptionalRepeatable =
  tei_trailer*, tei_closer*, tei_signed*, tei_postscript*
tei_model.divBottomPart_sequenceRepeatable =
  tei_trailer+, tei_closer+, tei_signed+, tei_postscript+
tei_model.divBottom = tei_model.divWrapper | tei_model.divBottomPart
tei_model.titlepagePart =
  tei_graphic
  | tei_byline
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_imprimatur
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.msQuoteLike =
  tei_title
  | tei_colophon
  | tei_explicit
  | tei_finalRubric
  | tei_incipit
  | tei_rubric
tei_model.msQuoteLike_alternation =
  tei_title
  | tei_colophon
  | tei_explicit
  | tei_finalRubric
  | tei_incipit
  | tei_rubric
tei_model.msQuoteLike_sequence =
  tei_title,
  tei_colophon,
  tei_explicit,
  tei_finalRubric,
  tei_incipit,
  tei_rubric
tei_model.msQuoteLike_sequenceOptional =
  tei_title?,
  tei_colophon?,
  tei_explicit?,
  tei_finalRubric?,
  tei_incipit?,
  tei_rubric?
tei_model.msQuoteLike_sequenceOptionalRepeatable =
  tei_title*,
  tei_colophon*,
  tei_explicit*,
  tei_finalRubric*,
  tei_incipit*,
  tei_rubric*
tei_model.msQuoteLike_sequenceRepeatable =
  tei_title+,
  tei_colophon+,
  tei_explicit+,
  tei_finalRubric+,
  tei_incipit+,
  tei_rubric+
tei_model.msItemPart =
  tei_model.quoteLike
  | tei_model.respLike
  | tei_model.msQuoteLike
  | tei_bibl
  | tei_listBibl
  | tei_filiation
  | tei_msItem
  | tei_msItemStruct
  | tei_textLang
  | tei_decoNote
tei_model.choicePart =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_unclear
  | tei_abbr
  | tei_expan
  | tei_seg
  | tei_ex
  | tei_am
tei_model.imprintPart =
  tei_publisher | tei_biblScope | tei_pubPlace | tei_distributor
tei_model.imprintPart_alternation =
  tei_publisher | tei_biblScope | tei_pubPlace | tei_distributor
tei_model.imprintPart_sequence =
  tei_publisher, tei_biblScope, tei_pubPlace, tei_distributor
tei_model.imprintPart_sequenceOptional =
  tei_publisher?, tei_biblScope?, tei_pubPlace?, tei_distributor?
tei_model.imprintPart_sequenceOptionalRepeatable =
  tei_publisher*, tei_biblScope*, tei_pubPlace*, tei_distributor*
tei_model.imprintPart_sequenceRepeatable =
  tei_publisher+, tei_biblScope+, tei_pubPlace+, tei_distributor+
tei_model.catDescPart = notAllowed
tei_model.castItemPart = tei_role | tei_roleDesc | tei_actor
tei_model.physDescPart_sequenceOptional =
  tei_objectDesc?,
  tei_handDesc?,
  tei_typeDesc?,
  tei_musicNotation?,
  tei_decoDesc?,
  tei_additions?,
  tei_bindingDesc?,
  tei_sealDesc?,
  tei_accMat?
tei_model.addressLike = tei_email | tei_address | tei_affiliation
tei_model.addressLike_alternation =
  tei_email | tei_address | tei_affiliation
tei_model.addressLike_sequence = tei_email, tei_address, tei_affiliation
tei_model.addressLike_sequenceOptional =
  tei_email?, tei_address?, tei_affiliation?
tei_model.addressLike_sequenceOptionalRepeatable =
  tei_email*, tei_address*, tei_affiliation*
tei_model.addressLike_sequenceRepeatable =
  tei_email+, tei_address+, tei_affiliation+
tei_model.nameLike =
  tei_model.nameLike.agent
  | tei_model.placeStateLike
  | tei_rs
  | tei_idno
tei_model.nameLike_alternation =
  tei_model.nameLike.agent_alternation
  | tei_model.placeStateLike_alternation
  | tei_rs
  | tei_idno
tei_model.nameLike_sequence =
  tei_model.nameLike.agent_sequence,
  tei_model.placeStateLike_sequence,
  tei_rs,
  tei_idno
tei_model.nameLike_sequenceOptional =
  tei_model.nameLike.agent_sequenceOptional?,
  tei_model.placeStateLike_sequenceOptional?,
  tei_rs?,
  tei_idno?
tei_model.nameLike_sequenceOptionalRepeatable =
  tei_model.nameLike.agent_sequenceOptionalRepeatable*,
  tei_model.placeStateLike_sequenceOptionalRepeatable*,
  tei_rs*,
  tei_idno*
tei_model.nameLike_sequenceRepeatable =
  tei_model.nameLike.agent_sequenceRepeatable+,
  tei_model.placeStateLike_sequenceRepeatable+,
  tei_rs+,
  tei_idno+
tei_model.global =
  tei_model.global.meta
  | tei_model.milestoneLike
  | tei_model.noteLike
  | tei_model.global.edit
  | tei_figure
  | tei_rewrite
  | tei_used
tei_model.biblPart =
  tei_model.respLike
  | tei_model.imprintPart
  | tei_series
  | tei_relatedItem
  | tei_edition
  | tei_extent
  | tei_msIdentifier
tei_model.frontPart =
  tei_model.frontPart.drama | tei_divGen | tei_titlePage
tei_model.addrPart = tei_model.nameLike | tei_addrLine
tei_model.pPart.data =
  tei_model.dateLike
  | tei_model.measureLike
  | tei_model.addressLike
  | tei_model.nameLike
tei_model.pPart.data_alternation =
  tei_model.dateLike_alternation
  | tei_model.measureLike_alternation
  | tei_model.addressLike_alternation
  | tei_model.nameLike_alternation
tei_model.pPart.data_sequence =
  tei_model.dateLike_sequence,
  tei_model.measureLike_sequence,
  tei_model.addressLike_sequence,
  tei_model.nameLike_sequence
tei_model.pPart.data_sequenceOptional =
  tei_model.dateLike_sequenceOptional?,
  tei_model.measureLike_sequenceOptional?,
  tei_model.addressLike_sequenceOptional?,
  tei_model.nameLike_sequenceOptional?
tei_model.pPart.data_sequenceOptionalRepeatable =
  tei_model.dateLike_sequenceOptionalRepeatable*,
  tei_model.measureLike_sequenceOptionalRepeatable*,
  tei_model.addressLike_sequenceOptionalRepeatable*,
  tei_model.nameLike_sequenceOptionalRepeatable*
tei_model.pPart.data_sequenceRepeatable =
  tei_model.dateLike_sequenceRepeatable+,
  tei_model.measureLike_sequenceRepeatable+,
  tei_model.addressLike_sequenceRepeatable+,
  tei_model.nameLike_sequenceRepeatable+
tei_model.inter =
  tei_model.egLike
  | tei_model.biblLike
  | tei_model.labelLike
  | tei_model.listLike
  | tei_model.stageLike
  | tei_model.qLike
  | tei_castList
  | tei_table
tei_model.inter_alternation =
  tei_model.egLike_alternation
  | tei_model.biblLike_alternation
  | tei_model.labelLike_alternation
  | tei_model.listLike_alternation
  | tei_model.stageLike_alternation
  | tei_model.qLike_alternation
  | tei_castList
  | tei_table
tei_model.inter_sequence =
  tei_model.egLike_sequence,
  tei_model.biblLike_sequence,
  tei_model.labelLike_sequence,
  tei_model.listLike_sequence,
  tei_model.stageLike_sequence,
  tei_model.qLike_sequence,
  tei_castList,
  tei_table
tei_model.inter_sequenceOptional =
  tei_model.egLike_sequenceOptional?,
  tei_model.biblLike_sequenceOptional?,
  tei_model.labelLike_sequenceOptional?,
  tei_model.listLike_sequenceOptional?,
  tei_model.stageLike_sequenceOptional?,
  tei_model.qLike_sequenceOptional?,
  tei_castList?,
  tei_table?
tei_model.inter_sequenceOptionalRepeatable =
  tei_model.egLike_sequenceOptionalRepeatable*,
  tei_model.biblLike_sequenceOptionalRepeatable*,
  tei_model.labelLike_sequenceOptionalRepeatable*,
  tei_model.listLike_sequenceOptionalRepeatable*,
  tei_model.stageLike_sequenceOptionalRepeatable*,
  tei_model.qLike_sequenceOptionalRepeatable*,
  tei_castList*,
  tei_table*
tei_model.inter_sequenceRepeatable =
  tei_model.egLike_sequenceRepeatable+,
  tei_model.biblLike_sequenceRepeatable+,
  tei_model.labelLike_sequenceRepeatable+,
  tei_model.listLike_sequenceRepeatable+,
  tei_model.stageLike_sequenceRepeatable+,
  tei_model.qLike_sequenceRepeatable+,
  tei_castList+,
  tei_table+
tei_model.common = tei_model.divPart | tei_model.inter | tei_include
tei_model.phrase =
  tei_model.segLike
  | tei_model.highlighted
  | tei_model.graphicLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.edit
  | tei_model.ptrLike
  | tei_model.pPart.data
tei_model.limitedPhrase =
  tei_model.emphLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.ptrLike
  | tei_model.pPart.data
tei_model.divLike = tei_div
tei_model.divGenLike = tei_divGen
tei_model.div1Like = notAllowed
tei_model.applicationLike = tei_application
tei_model.teiHeaderPart = tei_encodingDesc | tei_profileDesc
tei_model.sourceDescPart = notAllowed
tei_model.encodingDescPart =
  tei_projectDesc
  | tei_samplingDecl
  | tei_editorialDecl
  | tei_refsDecl
  | tei_classDecl
  | tei_appInfo
  | tei_geoDecl
  | tei_variantEncoding
  | tei_charDecl
tei_model.editorialDeclPart =
  tei_correction
  | tei_normalization
  | tei_quotation
  | tei_hyphenation
  | tei_segmentation
  | tei_interpretation
tei_model.profileDescPart =
  tei_creation
  | tei_langUsage
  | tei_textClass
  | tei_handNotes
  | tei_transposeGrp
  | tei_geneticGrp
tei_model.resourceLike = tei_facsimile | tei_document
tei_att.personal.attributes =
  tei_att.naming.attributes,
  tei_att.personal.attribute.full,
  tei_att.personal.attribute.sort
tei_att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an
  ## abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by
      ## one initial.
      "init"
  }?
tei_att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation
  ## to others within the personal name.
  attribute sort { xsd:nonNegativeInteger }?
tei_p =
  
  ## (paragraph) marks paragraphs in prose.
  element ns1:p {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other than that of the
  ##                 surrounding text. 
  element ns1:foreign {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for
  ##         linguistic or rhetorical effect.
  element ns1:emph {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the
  ##         surrounding text, for reasons concerning which no claim is
  ##         made. 
  element ns1:hi {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_distinct =
  
  ## identifies any word or phrase which is regarded as linguistically distinct, for example as
  ##         archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage. 
  element ns1:distinct {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    
    ## specifies the sublanguage or register to which the word or phrase is being
    ##                 assigned
    attribute type { xsd:Name }?,
    
    ## specifies how the phrase is distinct diachronically
    attribute time { xsd:anyURI }?,
    
    ## specifies how the phrase is distinct diatopically
    attribute space { xsd:anyURI }?,
    
    ## specifies how the phrase is distinct diastatically
    attribute social { xsd:anyURI }?,
    empty
  }
tei_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or
  ##     not, whether directly or indirectly reported, whether by real people or fictional characters.
  element ns1:said {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    
    ## may be used to indicate whether the quoted matter is regarded as having been vocalized
    ##         or signed.
    [ a:defaultValue = "unknown" ]
    attribute aloud { xsd:boolean | "unknown" | "inapplicable" }?,
    
    ## may be used to indicate whether the quoted matter is regarded as direct or indirect
    ##         speech.
    [ a:defaultValue = "true" ]
    attribute direct { xsd:boolean | "unknown" | "inapplicable" }?,
    empty
  }
tei_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external
  ##         to the text.
  element ns1:quote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_q =
  
  ## (separated from the surrounding text with quotation marks) contains material which is marked as (ostensibly) being somehow different than the
  ##     surrounding text, for any one of a variety of reasons including, but not limited to: direct
  ##     speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and
  ##     passages that are mentioned but not used.
  element ns1:q {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    
    ## may be used to indicate whether the offset passage is spoken or thought, or to
    ##         characterize it more finely.
    ## Suggested values include: 1] spoken; 2] thought; 3] written; 4] soCalled; 5] foreign(foreign words) ; 6] distinct(linguistically distinct) ; 7] term(technical term) ; 8] emph(rhetorically emphasized) ; 9] mentioned
    attribute type {
      
      ## representation of speech
      "spoken"
      | 
        ## representation of thought, e.g. internal monologue
        "thought"
      | 
        ## quotation from a written source
        "written"
      | 
        ## authorial distance
        "soCalled"
      | 
        ## (foreign words) 
        "foreign"
      | 
        ## (linguistically distinct) 
        "distinct"
      | 
        ## (technical term) 
        "term"
      | 
        ## (rhetorically emphasized) 
        "emph"
      | 
        ## refering to itself, not its normal referant
        "mentioned"
      | xsd:Name
    }?,
    empty
  }
tei_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to
  ##     its source. In a dictionary it may contain an example text with at least one occurrence of the
  ##     word form, used in the sense being described, or a translation of the headword, or an example. 
  element ns1:cit {
    (tei_model.qLike
     | tei_model.biblLike
     | tei_model.ptrLike
     | tei_model.global
     | tei_model.entryPart)+,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_mentioned =
  
  ## marks words or phrases mentioned, not used.
  element ns1:mentioned {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_soCalled =
  
  ## contains a word or phrase for which the author or narrator indicates a disclaiming of
  ##     responsibility, for example by the use of scare quotes or italics.
  element ns1:soCalled {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_desc =
  
  ## (description) contains a brief description of the object documented by its parent element, including its
  ##     intended usage, purpose, or application where this is appropriate.
  element ns1:desc {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.translatable.attributes,
    empty
  }
tei_gloss =
  
  ## identifies a phrase or word used to provide a gloss or definition for some other word or
  ##     phrase.
  element ns1:gloss {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.translatable.attributes,
    tei_att.typed.attributes,
    tei_att.pointing.attributes,
    
    ## (canonical reference) identifies the associated term element using a canonical reference from a
    ##         scheme defined in a refsDecl element in the TEI header
    attribute cRef { xsd:anyURI }?,
    empty
  }
tei_term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical
  ##     term.
  element ns1:term {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.canonical.attributes,
    
    ## identifies the associated gloss element using a canonical reference from a
    ##           scheme defined in a refsDecl element in the TEI header
    attribute cRef { xsd:anyURI }?,
    
    ## supplies the sort key for this term in an index.
    attribute sortKey {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
tei_sic =
  
  ## (latin for thus or so
  ##   ) contains text reproduced although apparently incorrect or inaccurate.
  element ns1:sic {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.responsibility.attributes,
    empty
  }
tei_corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text.
  element ns1:corr {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_choice =
  
  ## groups a number of alternative encodings for the same point in
  ##         a text.
  element ns1:choice {
    (tei_model.choicePart | tei_choice)*,
    tei_att.global.attributes,
    empty
  }
tei_reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense.
  element ns1:reg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized
  ##         or corrected.
  element ns1:orig {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.responsibility.attributes,
    empty
  }
tei_gap =
  
  ## (gap) indicates a point where material has been omitted in a transcription, whether for editorial
  ##     reasons described in the TEI header, as part of sampling practice, or because the material is
  ##     illegible, invisible, or inaudible.
  element ns1:gap {
    tei_model.glossLike*,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    
    ## gives the reason for omission. Sample values include sampling,
    ##         inaudible, irrelevant, cancelled.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    
    ## in the case of text omitted from the transcription because of deliberate deletion by an
    ##         identifiable hand, signifies the hand which made the deletion.
    attribute hand { xsd:anyURI }?,
    
    ## In the case of text omitted because of damage, categorizes the cause of the damage, if
    ##         it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent { xsd:Name }?,
    empty
  }
tei_add =
  
  ## (addition) contains letters, words, or phrases inserted in the text by an
  ##         author, scribe, annotator, or corrector.
  element ns1:add {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as
  ##     superfluous or spurious in the copy text by an author, scribe, annotator, or corrector.
  element ns1:del {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it
  ##         is illegible or inaudible in the source.
  element ns1:unclear {
    tei_macro.paraContent,
    
    ## indicates why the material is hard to transcribe.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    
    ## Where the difficulty in transcription arises from action (partial deletion, etc.)
    ##                 assignable to an identifiable hand, signifies the hand responsible for the action.
    attribute hand { xsd:anyURI }?,
    
    ## Where the difficulty in transcription arises from damage, categorizes the cause of
    ##                 the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent { xsd:Name }?,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase.
  element ns1:name {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_rs =
  
  ## (referencing string) contains a general purpose name or referring string.
  element ns1:rs {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    
    ## indicates more specifically the object referred to by the referencing string.
    ##                 Values might include person, place, ship,
    ##                     element etc.
    attribute type { xsd:Name }?,
    empty
  }
tei_email =
  
  ## (electronic mail address) contains an e-mail address identifying a location to which
  ##         e-mail messages can be delivered.
  ##     
  element ns1:email {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_address =
  
  ## contains a postal  address, for example of a
  ##         publisher, an organization, or an individual.
  element ns1:address {
    (tei_model.global*, (tei_model.addrPart, tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_addrLine =
  
  ## (address line) contains one line of a postal address.
  element ns1:addrLine {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_num =
  
  ## (number) contains a number, written in any form.
  element ns1:num {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.ranging.attributes,
    
    ## indicates the type of numeric value.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:Name
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
tei_measure =
  
  ## contains a word or phrase referring to some quantity of an object or commodity, usually
  ##         comprising a number, a unit, and a commodity name.
  element ns1:measure {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.measurement.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type { xsd:Name }?,
    empty
  }
tei_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example
  ##     the height and width of a manuscript page.
  element ns1:measureGrp {
    (text | tei_model.gLike | tei_model.measureLike)*,
    tei_att.global.attributes,
    tei_att.measurement.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_date =
  
  ## contains a date in any format.
  element ns1:date {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    
    ## indicates the system or calendar to which the date represented by the content of this
    ##         element belongs.
    ## Suggested values include: 1] Gregorian; 2] Julian; 3] Islamic; 4] Hebrew; 5] Revolutionary; 6] Iranian; 7] Coptic; 8] Chinese
    attribute calendar {
      
      ## Gregorian calendar
      "Gregorian"
      | 
        ## Julian calendar
        "Julian"
      | 
        ## Islamic or Muslim (hijri) lunar calendar
        "Islamic"
      | 
        ## Hebrew or Jewish lunisolar calendar
        "Hebrew"
      | 
        ## French Revolutionary calendar
        "Revolutionary"
      | 
        ## Iranian or Persian (Jalaali) solar calendar
        "Iranian"
      | 
        ## Coptic or Alexandrian calendar
        "Coptic"
      | 
        ## Chinese lunisolar calendar
        "Chinese"
      | xsd:Name
    }?,
    empty
  }
tei_time =
  
  ## contains a phrase defining a time of day in any format.
  element ns1:time {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort.
  element ns1:abbr {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.responsibility.attributes,
    
    ## allows the encoder to classify the abbreviation according to some convenient
    ##                 typology.
    ## Sample values include: 1] suspension; 2] contraction; 3] brevigraph; 4] superscription; 5] acronym; 6] title; 7] organization; 8] geographic
    attribute type { xsd:Name }?,
    empty
  }
tei_expan =
  
  ## (expansion) contains the expansion of an abbreviation.
  element ns1:expan {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_ptr =
  
  ## (pointer) defines a pointer to another location.
  element ns1:ptr {
    empty
    >> sch:pattern [
         id = "ptr-constraint-ptrAtts"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes 'target' and 'cRef' may be supplied."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    
    ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference from a
    ##         scheme defined in a refsDecl element in the TEI header
    attribute cRef {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    empty
  }
tei_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment.
  element ns1:ref {
    tei_macro.paraContent
    >> sch:pattern [
         id = "ref-constraint-refAtts"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes 'target' and 'cRef' may be supplied."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    
    ## (canonical reference) specifies the destination of the reference by supplying a canonical reference from a
    ##         scheme defined in a refsDecl element in the TEI header
    attribute cRef {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    empty
  }
tei_list =
  
  ## (list) contains any sequence of items organized as a list.
  element ns1:list {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_item, tei_model.global*)+
      | (tei_label, tei_model.global*, tei_item, tei_model.global*)+),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    
    ## describes the form of the list.
    ## Suggested values include: 1] ordered; 2] bulleted; 3] simple; 4] gloss
    [ a:defaultValue = "simple" ]
    attribute type {
      
      ## list items are numbered or lettered. 
      "ordered"
      | 
        ## list items are marked with a bullet or other typographic device. 
        "bulleted"
      | 
        ## list items are not numbered or bulleted. 
        "simple"
      | 
        ## each list item glosses some term or concept, which is given by a label element
        ##             preceding the list item.
        "gloss"
      | xsd:Name
    }?,
    empty
  }
tei_item =
  
  ## contains one component of a list.
  element ns1:item {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_label =
  
  ## contains the label associated with an item in a list; in glossaries, marks the term being
  ##     defined.
  element ns1:label {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list,
  ##     glossary, manuscript description, etc.
  element ns1:head {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_note =
  
  ## contains a note or annotation.
  element ns1:note {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.responsibility.attributes,
    tei_att.typed.attributes,
    
    ## indicates whether the copy text shows the exact place of reference for the note.
    [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?,
    
    ## points to the end of the span to which the note is attached, if the note is not embedded
    ##         in the text at that point.
    attribute targetEnd {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    empty
  }
tei_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose.
  element ns1:index {
    (tei_term, tei_index?)*,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    
    ## supplies a name to specify which index (of several) the index entry belongs to.
    attribute indexName { xsd:Name }?,
    empty
  }
tei_graphic =
  
  ## indicates the location of an inline graphic, illustration, or figure.
  element ns1:graphic {
    tei_model.glossLike*,
    tei_att.global.attributes,
    tei_att.internetMedia.attributes,
    tei_att.declaring.attributes,
    
    ## The display width of the image
    attribute width {
      xsd:token {
        pattern =
          "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
      }
    }?,
    
    ## The display height of the image
    attribute height {
      xsd:token {
        pattern =
          "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
      }
    }?,
    
    ## A scale factor to be applied to the image to make it the desired display size
    attribute scale {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    
    ## (uniform resource locator) A URL which refers to the image itself.
    attribute url { xsd:anyURI },
    empty
  }
tei_milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not
  ##     necessarily indicating a point at which some part of a standard reference system changes, where
  ##     the change is not represented by a structural element.
  element ns1:milestone {
    empty,
    
    ## provides a conventional name for the kind of section changing at this milestone.
    ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
    attribute unit {
      
      ## physical page breaks (synonymous with the pb element).
      "page"
      | 
        ## column breaks.
        "column"
      | 
        ## line breaks (synonymous with the lb element).
        "line"
      | 
        ## any units termed book, liber, etc.
        "book"
      | 
        ## individual poems in a collection.
        "poem"
      | 
        ## cantos or other major sections of a poem.
        "canto"
      | 
        ## changes of speaker or narrator.
        "speaker"
      | 
        ## stanzas within a poem, book, or canto.
        "stanza"
      | 
        ## acts within a play.
        "act"
      | 
        ## scenes within a play or act.
        "scene"
      | 
        ## sections of any kind.
        "section"
      | 
        ## passages not present in the reference edition.
        "absent"
      | 
        ## passages present in the text, but not to be included as part of the reference.
        "unnumbered"
      | xsd:Name
    },
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.typed.attributes,
    tei_att.sourced.attributes,
    empty
  }
tei_pb =
  
  ## (page break) marks the boundary between one page of a text and the next in a standard reference system.
  element ns1:pb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.sourced.attributes,
    empty
  }
tei_lb =
  
  ## (line break) marks the start of a new (typographic) line in some edition or version of a text.
  element ns1:lb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.sourced.attributes,
    empty
  }
tei_cb =
  
  ## (column break) marks the boundary between one column of a text and the next
  ##         in a standard reference system.
  element ns1:cb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.sourced.attributes,
    empty
  }
tei_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has
  ##     appeared.
  element ns1:series {
    (text
     | tei_model.gLike
     | tei_title
     | tei_ref
     | tei_editor
     | tei_respStmt
     | tei_biblScope
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_author =
  
  ## in a bibliographic reference, contains the name(s) of the
  ##   author(s), personal or corporate, of a work; for example in the same
  ##   form as that provided by a recognized bibliographic name authority. 
  element ns1:author {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_editor =
  
  ## secondary statement of responsibility for a bibliographic item, for example the name of an
  ##     individual, institution or organization, (or of several such) acting as editor, compiler,
  ##     translator, etc. 
  element ns1:editor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition,
  ##     recording, or series, where the specialized elements for authors, editors, etc. do not suffice
  ##     or do not apply.
  element ns1:respStmt {
    ((tei_resp+, tei_model.nameLike.agent+)
     | (tei_model.nameLike.agent+, tei_resp+)),
    tei_att.global.attributes,
    empty
  }
tei_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility.
  element ns1:resp {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_title =
  
  ## contains a title for any kind of work.
  element ns1:title {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    
    ## indicates the bibliographic level for a title, that is, whether
    ##                                         it identifies an article, book, journal, series, or
    ##                                         unpublished material.
    attribute level {
      
      ## (analytic) analytic title (article, poem, or other item
      ##                                                   published as part of a larger item) 
      "a"
      | 
        ## (monographic) monographic title (book, collection, or
        ##                                                   other item published as a distinct item,
        ##                                                   including single volumes of multi-volume
        ##                                                   works) 
        "m"
      | 
        ## (journal) journal title 
        "j"
      | 
        ## (series) series title 
        "s"
      | 
        ## (unpublished) title of unpublished material (including
        ##                                                   theses and dissertations unless
        ##                                                   published by a commercial press)
        "u"
    }?,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type { xsd:Name }?,
    empty
  }
tei_publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a
  ##         bibliographic item.
  element ns1:publisher {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_biblScope =
  
  ## (scope of citation) defines the scope of a bibliographic reference, for example as a
  ##         list of page numbers, or a named subdivision of a larger work.
  element ns1:biblScope {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    
    ## identifies the type of information conveyed by the element, e.g.
    ##                 columns, pages, volume.
    ## Suggested values include: 1] vol(volume) ; 2] issue; 3] pp(pages) ; 4] ll (lines) ; 5] chap(chapter) ; 6] part
    attribute type {
      
      ## (volume) the element contains a volume number.
      "vol"
      | 
        ## the element contains an issue number, or volume and
        ##                         issue numbers.
        "issue"
      | 
        ## (pages) the element contains a page number or page range.
        "pp"
      | 
        ##  (lines) the element contains a line number or line range.
        "ll"
      | 
        ## (chapter) the element contains a chapter indication (number
        ##                         and/or title)
        "chap"
      | 
        ## the element identifies a part of a book or collection.
        "part"
      | xsd:Name
    }?,
    
    ## specifies the starting point of the range of units indicated by the type attribute.
    attribute from {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies the end-point of the range of units indicated by the type attribute.
    attribute to {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
tei_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published.
  element ns1:pubPlace {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may
  ##     not be explicitly tagged. 
  element ns1:bibl {
    (text
     | tei_model.gLike
     | tei_model.highlighted
     | tei_model.pPart.data
     | tei_model.pPart.edit
     | tei_model.segLike
     | tei_model.ptrLike
     | tei_model.biblPart
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. 
  element ns1:listBibl {
    (tei_model.headLike*,
     (tei_model.biblLike | tei_model.milestoneLike | tei_listBibl)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_relatedItem =
  
  ## contains or references some other bibliographic item which is related to the present one in
  ##     some specified manner, for example as a constituent or alternative version of it.
  element ns1:relatedItem {
    ((tei_model.biblLike | tei_model.ptrLike)?)
    >> sch:pattern [
         id = "relatedItem-constraint-targetorcontent11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "If the 'target' attribute is used, the\x{a}" ~
             "        relatedItem element must be empty"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "relatedItem-constraint-targetorcontent11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a 'target' attribute\x{a}" ~
             "        or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## points to the related bibliographic element by means of an
    ##       absolute or relative URI reference
    attribute target { xsd:anyURI }?,
    empty
  }
tei_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse.
  element ns1:l {
    tei_macro.paraContent,
    tei_att.global.attributes,
    
    ## specifies whether or not the line is metrically complete. 
    [ a:defaultValue = "N" ]
    attribute part {
      
      ## (yes) the line is metrically incomplete
      "Y"
      | 
        ## (no) either the line is complete, or no claim is made as to its completeness
        "N"
      | 
        ## (initial) the initial part of an incomplete line
        "I"
      | 
        ## (medial) a medial part of an incomplete line
        "M"
      | 
        ## (final) the final part of an incomplete line
        "F"
    }?,
    empty
  }
tei_lg =
  
  ## (line group) contains a group of verse lines functioning as a formal unit, e.g. a stanza, refrain,
  ##         verse paragraph, etc.
  element ns1:lg {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.lLike | tei_lg),
     (tei_model.lLike | tei_lg | tei_model.global)*,
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_sp =
  
  ## (speech) An individual speech in a performance text, or a passage presented as such in a prose or
  ##     verse text.
  element ns1:sp {
    (tei_model.global*,
     (tei_speaker, tei_model.global*)?,
     ((tei_model.lLike
       | tei_lg
       | tei_model.pLike
       | tei_model.stageLike
       | tei_model.qLike),
      tei_model.global*)+),
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    empty
  }
tei_speaker =
  
  ## A specialized form of heading or label, giving the name of one or more speakers in a
  ##         dramatic text or fragment.
  element ns1:speaker {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment.
  element ns1:stage {
    tei_macro.specialPara,
    tei_att.global.attributes,
    
    ## indicates the kind of stage direction.
    ## Suggested values include: 1] setting; 2] entrance; 3] exit; 4] business; 5] novelistic; 6] delivery; 7] modifier; 8] location; 9] mixed
    attribute type {
      
      ## describes a setting.
      "setting"
      | 
        ## describes an entrance.
        "entrance"
      | 
        ## describes an exit.
        "exit"
      | 
        ## describes stage business.
        "business"
      | 
        ## is a narrative, motivating stage direction.
        "novelistic"
      | 
        ## describes how a character speaks.
        "delivery"
      | 
        ## gives some detail about a character.
        "modifier"
      | 
        ## describes a location.
        "location"
      | 
        ## more than one of the above
        "mixed"
      | xsd:Name
    }?,
    empty
  }
tei_teiCorpus =
  
  ## contains the whole of a TEI encoded corpus, comprising a single corpus header and one or
  ##     more TEI elements, each containing a single text header and a text.
  element ns1:teiCorpus {
    (tei_teiHeader, (tei_TEI | tei_teiCorpus)+),
    tei_att.global.attributes,
    
    ## The version of the TEI scheme
    [ a:defaultValue = "5.0" ]
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_divGen =
  
  ## (automatically generated text division) indicates the location at which a textual division generated
  ##         automatically by a text-processing application is to appear.
  element ns1:divGen {
    tei_model.headLike*,
    tei_att.global.attributes,
    
    ## specifies what type of generated text division (e.g. index,
    ##                 table of contents, etc.) is to appear.
    ## Sample values include: 1] index; 2] toc; 3] figlist; 4] tablist
    attribute type { xsd:Name }?,
    empty
  }
tei_teiHeader =
  
  ## (TEI Header) supplies the descriptive and declarative information making up an electronic title page
  ##     prefixed to every TEI-conformant text.
  element ns1:teiHeader {
    (tei_fileDesc, tei_model.teiHeaderPart*, tei_revisionDesc?),
    tei_att.global.attributes,
    
    ## specifies the kind of document to which the header is attached, for example whether it
    ##         is a corpus or individual text.
    ## Sample values include: 1] text; 2] corpus
    [ a:defaultValue = "text" ] attribute type { xsd:Name }?,
    empty
  }
tei_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file.
  element ns1:fileDesc {
    ((tei_titleStmt,
      tei_editionStmt?,
      tei_extent?,
      tei_publicationStmt,
      tei_seriesStmt?,
      tei_notesStmt?),
     tei_sourceDesc+),
    tei_att.global.attributes,
    empty
  }
tei_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its intellectual
  ##     content.
  element ns1:titleStmt {
    (tei_title+, tei_model.respLike*), tei_att.global.attributes, empty
  }
tei_sponsor =
  
  ## specifies the name of a sponsoring organization or institution.
  element ns1:sponsor {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the
  ##     funding of a project or text.
  element ns1:funder {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the
  ## creation of an electronic text.
  element ns1:principal {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text.
  element ns1:editionStmt {
    (tei_model.pLike+ | (tei_edition, tei_respStmt*)),
    tei_att.global.attributes,
    empty
  }
tei_edition =
  
  ## (edition) describes the particularities of one edition of a text.
  element ns1:edition {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_extent =
  
  ## describes the approximate size of a text as stored on some carrier medium, whether digital
  ##     or non-digital, specified in any convenient units.
  element ns1:extent {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other
  ##     text. 
  element ns1:publicationStmt {
    (tei_model.pLike+ | tei_model.publicationStmtPart+),
    tei_att.global.attributes,
    empty
  }
tei_distributor =
  
  ## supplies the name of a person or other agency responsible for the
  ## distribution of a text.
  element ns1:distributor {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for
  ##   making an electronic file available, other than a publisher or
  ##   distributor.
  element ns1:authority {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object,
  ##   such as a bibliographic item, a person, a title, an organization,
  ##   etc. in a standardized way.
  element ns1:idno {
    text,
    tei_att.global.attributes,
    
    ## categorizes the identifier, for example as an ISBN, Social
    ##       Security number, etc. 
    attribute type { xsd:Name }?,
    empty
  }
tei_availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its
  ##     use or distribution, its copyright status, etc.
  element ns1:availability {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## supplies a code identifying the current availability of the text. 
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available. 
      "free"
      | 
        ## the status of the text is unknown. 
        "unknown"
      | 
        ## the text is not freely available. 
        "restricted"
    }?,
    empty
  }
tei_seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which a publication belongs.
  element ns1:seriesStmt {
    (tei_model.pLike+
     | (tei_title+, (tei_idno | tei_respStmt)*)),
    tei_att.global.attributes,
    empty
  }
tei_notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded
  ##     in other parts of the bibliographic description.
  element ns1:notesStmt {
    tei_model.noteLike+, tei_att.global.attributes, empty
  }
tei_sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a
  ##     bibliographic description in the case of a digitized text, or a phrase such as "born digital"
  ##     for a text which has no previous existence.
  element ns1:sourceDesc {
    (tei_model.pLike+
     | (tei_model.biblLike
        | tei_model.sourceDescPart
        | tei_model.listLike)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file
  ##     description are present.
  element ns1:biblFull {
    ((tei_titleStmt,
      tei_editionStmt?,
      tei_extent?,
      tei_publicationStmt,
      tei_seriesStmt?,
      tei_notesStmt?),
     tei_sourceDesc*),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the
  ## source or sources from which it was derived.
  element ns1:encodingDesc {
    (tei_model.encodingDescPart | tei_model.pLike)+,
    tei_att.global.attributes,
    empty
  }
tei_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together
  ##     with any other relevant information concerning the process by which it was assembled or
  ##     collected.
  element ns1:projectDesc {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in sampling texts in the
  ##     creation of a corpus or collection.
  element ns1:samplingDecl {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied
  ## during the encoding of a text.
  element ns1:editorialDecl {
    (tei_model.pLike | tei_model.editorialDeclPart)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text.
  element ns1:correction {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text. 
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text has been thoroughly checked and proofread. 
      "high"
      | 
        ## the text has been checked at least once. 
        "medium"
      | 
        ## the text has not been checked. 
        "low"
      | 
        ## the correction status of the text is unknown. 
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text. 
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently 
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
tei_normalization =
  
  ## indicates the extent of normalization or regularization of the original source carried out
  ##     in converting it to electronic form.
  element ns1:normalization {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## indicates the authority for any normalization carried out. 
    attribute source { xsd:anyURI }?,
    
    ## indicates the method adopted to indicate normalizations within the text. 
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently 
      "silent"
      | 
        ## normalization represented using markup 
        "markup"
    }?,
    empty
  }
tei_quotation =
  
  ## specifies editorial practice adopted with respect to quotation marks in the original. 
  element ns1:quotation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text. 
    [ a:defaultValue = "all" ]
    attribute marks {
      
      ## no quotation marks have been retained 
      "none"
      | 
        ## some quotation marks have been retained 
        "some"
      | 
        ## all quotation marks have been retained 
        "all"
    }?,
    
    ## specifies how quotation marks are indicated within the text.
    [ a:defaultValue = "unknown" ] attribute form { text }?,
    empty
  }
tei_hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been treated in an encoded
  ##     version of it.
  element ns1:hyphenation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the
      ##             original may not have been. 
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases. 
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-od-line
        ##             hyphenation should be retained. 
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred
        ##             within the line. 
        "none"
    }?,
    empty
  }
tei_segmentation =
  
  ## describes the principles according to which the text has been segmented, for example into
  ##     sentences, tone-units, graphemic strata, etc.
  element ns1:segmentation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_interpretation =
  
  ## describes the scope of any analytic or interpretive information added to the text in
  ##     addition to the transcription. 
  element ns1:interpretation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this
  ##   text.
  element ns1:refsDecl {
    (tei_model.pLike+ | tei_cRefPattern+ | tei_refState+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_cRefPattern =
  
  ## (canonical reference pattern) specifies an expression and replacement pattern for transforming a canonical reference into
  ##     a URI. 
  element ns1:cRefPattern {
    tei_model.pLike*,
    tei_att.global.attributes,
    
    ## specifies a regular expression against which the values of cRef attributes
    ##         can be matched.
    attribute matchPattern { xsd:token },
    
    ## specifies a replacement pattern which, once subpattern substitution
    ##         has been performed, provides a URI.
    attribute replacementPattern { text },
    empty
  }
tei_refState =
  
  ## (reference state) specifies one component of a canonical reference defined by the milestone method.
  element ns1:refState {
    empty,
    tei_att.global.attributes,
    tei_att.sourced.attributes,
    
    ## indicates what kind of state is changing at this milestone.
    ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] stanza; 8] act; 9] scene; 10] section; 11] absent
    attribute unit {
      
      ## page breaks in the reference edition. 
      "page"
      | 
        ## column breaks. 
        "column"
      | 
        ## line breaks. 
        "line"
      | 
        ## any units termed book, liber, etc. 
        "book"
      | 
        ## individual poems in a collection. 
        "poem"
      | 
        ## cantos or other major sections of a poem. 
        "canto"
      | 
        ## stanzas within a poem, book, or canto. 
        "stanza"
      | 
        ## acts within a play. 
        "act"
      | 
        ## scenes within a play or act. 
        "scene"
      | 
        ## sections of any kind. 
        "section"
      | 
        ## passages not present in the reference edition.
        "absent"
      | xsd:Name
    },
    
    ## specifies the fixed length of the reference component.
    attribute length { xsd:nonNegativeInteger }?,
    
    ## (delimiter) supplies a delimiting string following the reference component.
    attribute delim { text }?,
    empty
  }
tei_classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory
  ## codes used elsewhere in the text.
  element ns1:classDecl {
    tei_taxonomy+, tei_att.global.attributes, empty
  }
tei_taxonomy =
  
  ## defines a typology used to classify texts either implicitly, by means of a bibliographic
  ##     citation, or explicitly by a structured taxonomy.
  element ns1:taxonomy {
    (tei_model.glossLike*
     | tei_category+
     | (tei_model.biblLike, tei_category*)),
    tei_att.global.attributes,
    empty
  }
tei_category =
  
  ## contains an individual descriptive category, possibly nested within a superordinate
  ##     category, within a user-defined taxonomy.
  element ns1:category {
    ((tei_catDesc+ | tei_model.glossLike*), tei_category*),
    tei_att.global.attributes,
    empty
  }
tei_catDesc =
  
  ## (category description) describes some category within a taxonomy or text typology, either in the form of a brief
  ##     prose description or in terms of the situational parameters used by the TEI formal textDesc.
  element ns1:catDesc {
    (text | tei_model.limitedPhrase | tei_model.catDescPart)*,
    tei_att.global.attributes,
    empty
  }
tei_appInfo =
  
  ## (application information) records information about an application which has
  ##   edited the TEI file. 
  element ns1:appInfo {
    tei_model.applicationLike+, tei_att.global.attributes, empty
  }
tei_application =
  
  ## provides information about an application which has acted upon the document.
  element ns1:application {
    (tei_model.labelLike+, (tei_model.ptrLike* | tei_model.pLike*)),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    
    ## Supplies an identifier for the application, independent of its version number or display
    ##         name.
    attribute ident { xsd:Name },
    
    ## Supplies a version number for the application, independent of its identifier or display
    ##         name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
tei_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the
  ##     languages and sublanguages used, the situation in which it was produced, the participants and
  ##     their setting.
  element ns1:profileDesc {
    tei_model.profileDescPart*, tei_att.global.attributes, empty
  }
tei_handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript.
  element ns1:handNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    empty
  }
tei_creation =
  
  ## contains information about the creation of a text.
  element ns1:creation {
    tei_macro.phraseSeq.limited,
    tei_stageNotes?,
    tei_att.global.attributes,
    empty
  }
tei_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc.
  ## represented within a text.
  element ns1:langUsage {
    tei_language+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_language =
  
  ## characterizes a single language or sublanguage used within a text.
  element ns1:language {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the
    ##         language documented by this element, and which is referenced by the global
    ##         xml:lang attribute.
    attribute ident { xsd:language },
    
    ## specifies the approximate percentage (by volume) of the text which uses this language. 
    attribute usage {
      xsd:nonNegativeInteger { maxInclusive = "100" }
    }?,
    empty
  }
tei_textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard
  ##     classification scheme, thesaurus, etc.
  element ns1:textClass {
    (tei_classCode | tei_catRef | tei_keywords)*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_keywords =
  
  ## contains a list of keywords or phrases identifying the topic or nature of a text.
  element ns1:keywords {
    (tei_term+ | tei_list),
    tei_att.global.attributes,
    
    ## identifies the controlled vocabulary within which the set of keywords concerned is
    ##         defined. 
    attribute scheme { xsd:anyURI },
    empty
  }
tei_classCode =
  
  ## (classification code) contains the classification code used for this text in some standard classification system.
  element ns1:classCode {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    
    ## identifies the classification system or taxonomy in use.
    attribute scheme { xsd:anyURI },
    empty
  }
tei_catRef =
  
  ## (category reference) specifies one or more defined categories within some taxonomy or text typology.
  element ns1:catRef {
    empty,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    
    ## identifies the classification scheme within which the set of categories concerned is
    ##         defined 
    attribute scheme { xsd:anyURI }?,
    empty
  }
tei_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file.
  element ns1:revisionDesc {
    (tei_list | tei_change+),
    tei_att.global.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_change =
  
  ## summarizes a particular change or correction made to a particular version of an electronic
  ##     text which is shared between several researchers.
  element ns1:change {
    (text
     | tei_model.limitedPhrase
     | tei_model.inter
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    tei_att.datable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_typeNote =
  
  ## describes a particular font or other significant typographic feature distinguished within
  ##     the description of a printed resource.
  element ns1:typeNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    empty
  }
tei_geoDecl =
  
  ## (geographic coordinates declaration) documents the notation and the datum used for geographic coordinates expressed as content of
  ##     the geo element elsewhere within the document.
  element ns1:geoDecl {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## supplies a commonly used code name for the datum employed.
    ## Suggested values include: 1] WGS84(World Geodetic System) ; 2] MGRS(Military Grid Reference System) ; 3] OSGB36(ordnance survey great britain) ; 4] ED50(European Datum coordinate system) 
    [ a:defaultValue = "WGS84" ]
    attribute datum {
      
      ## (World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude according to
      ##             the World Geodetic System.
      "WGS84"
      | 
        ## (Military Grid Reference System) the values supplied are geospatial entity object codes, based on
        "MGRS"
      | 
        ## (ordnance survey great britain) the value supplied is to be interpreted as a British National Grid Reference.
        "OSGB36"
      | 
        ## (European Datum coordinate system) the value supplied is to be interpreted as latitude followed by longitude according
        ##             to the European Datum coordinate system.
        "ED50"
      | xsd:Name
    }?,
    empty
  }
tei_TEI =
  
  ## (TEI document) contains a single TEI-conformant document,
  ## comprising a TEI header and a text, either in isolation or as part of a
  ## teiCorpus element.
  element ns1:TEI {
    (tei_teiHeader,
     ((tei_model.resourceLike+, tei_text?) | tei_text)),
    tei_att.global.attributes,
    
    ## specifies the version number of the TEI Guidelines against
    ##       which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or
  ##     drama, a collection of essays, a novel, a dictionary, or a corpus sample.
  element ns1:text {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter.
  element ns1:body {
    (tei_model.global*,
     (tei_model.divTop, (tei_model.global | tei_model.divTop)*)?,
     (tei_model.divGenLike,
      (tei_model.global | tei_model.divGenLike)*)?,
     ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
      | (tei_model.div1Like,
         (tei_model.global | tei_model.divGenLike)*)+
      | ((tei_model.common, tei_model.global*)+,
         ((tei_model.divLike,
           (tei_model.global | tei_model.divGenLike)*)+
          | (tei_model.div1Like,
             (tei_model.global | tei_model.divGenLike)*)+)?)),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_group =
  
  ## contains the body of a composite text, grouping together a sequence of distinct texts (or
  ##     groups of such texts) which are regarded as a unit for some purpose, for example the collected
  ##     works of an author, a sequence of prose essays, etc.
  element ns1:group {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_text | tei_group),
      (tei_text | tei_group | tei_model.global)*),
     tei_model.divBottom*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_floatingText =
  
  ## contains a single text of any kind, whether unitary or composite, which interrupts the text
  ##     containing it at any point and after which the surrounding text resumes.
  element ns1:floatingText {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text.
  element ns1:div {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.divLike | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.divLike | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. 
  element ns1:trailer {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_byline =
  
  ## contains the primary statement of responsibility given for a work
  ## on its title page or at the head or end of the work.
  element ns1:byline {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_docAuthor
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter,
  ##     newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. 
  element ns1:dateline {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_argument =
  
  ## A formal list or prose description of the topics addressed by
  ##	a subdivision of a text.
  element ns1:argument {
    ((tei_model.global | tei_model.headLike)*,
     (tei_model.common, tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_epigraph =
  
  ## contains a quotation, anonymous or attributed, appearing at the start of a section or
  ##     chapter, or on a title page. 
  element ns1:epigraph {
    (tei_model.common | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_opener =
  
  ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary
  ##     group at the start of a division, especially of a letter.
  element ns1:opener {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_argument
     | tei_byline
     | tei_dateline
     | tei_epigraph
     | tei_salute
     | tei_signed
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_closer =
  
  ## groups together salutations, datelines, and similar phrases appearing as a final group at
  ##     the end of a division, especially of a letter.
  element ns1:closer {
    (text
     | tei_model.gLike
     | tei_signed
     | tei_dateline
     | tei_salute
     | tei_model.phrase
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other
  ##     division of a text, or the salutation in the closing of a letter, preface, etc.
  element ns1:salute {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword,
  ## dedicatory epistle, or other division of a text. 
  element ns1:signed {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_postscript =
  
  ## contains a postscript, e.g. to a letter.
  element ns1:postscript {
    (tei_model.common | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_titlePage =
  
  ## (title page) contains the title page of a text, appearing within the front or back matter. 
  element ns1:titlePage {
    (tei_model.global*,
     tei_model.titlepagePart,
     (tei_model.titlepagePart | tei_model.global)*),
    tei_att.global.attributes,
    
    ## classifies the title page according to any convenient typology.
    attribute type { xsd:Name }?,
    empty
  }
tei_docTitle =
  
  ## (document title) contains the title of a document, including all its
  ## constituents, as given on a title page.
  element ns1:docTitle {
    (tei_model.global*, (tei_titlePart, tei_model.global*)+),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_titlePart =
  
  ## contains a subsection or division of the title of a work, as
  ## indicated on a title page.
  element ns1:titlePart {
    tei_macro.paraContent,
    tei_att.global.attributes,
    
    ## specifies the role of this subdivision of the title.
    ## Suggested values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## main title of the work
      ##         
      "main"
      | 
        ## (subordinate) subtitle  of the work
        ##         
        "sub"
      | 
        ## (alternate) alternative title  of the work
        ##         
        "alt"
      | 
        ## abbreviated form of title
        "short"
      | 
        ## (descriptive) descriptive paraphrase of the work 
        ##    
        "desc"
      | xsd:Name
    }?,
    empty
  }
tei_docAuthor =
  
  ## (document author) contains the name of the author of the document, as given on the
  ## title page (often but not always contained in a byline).
  element ns1:docAuthor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_imprimatur =
  
  ## contains a formal statement authorizing the publication of a work, sometimes required to
  ##     appear on a title page or its verso.
  element ns1:imprimatur {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_docEdition =
  
  ## (document edition) contains an edition statement as presented on a title page of a
  ## document.
  element ns1:docEdition {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication,
  ## publisher name), as given
  ## (usually) at the foot of a title page.
  element ns1:docImprint {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_pubPlace
     | tei_docDate
     | tei_publisher
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_docDate =
  
  ## (document date) contains the date of a document, as given
  ## (usually) on a title page.
  element ns1:docDate {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    
    ## gives the value of the date in standard form, i.e. YYYY-MM-DD.
    attribute when {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    empty
  }
tei_front =
  
  ## (front matter) contains any prefatory matter (headers,
  ## title page, prefaces, dedications, etc.)
  ## found  at the start of a document, before the main body.
  element ns1:front {
    ((tei_model.frontPart | tei_model.pLike.front | tei_model.global)*,
     ((tei_model.div1Like,
       (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
      | (tei_model.divLike,
         (tei_model.frontPart
          | tei_model.divLike
          | tei_model.global)*))?,
     (tei_model.divBottomPart,
      (tei_model.divBottomPart | tei_model.global)*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text.
  element ns1:back {
    ((tei_model.frontPart | tei_model.pLike.front | tei_model.global)*,
     ((tei_model.div1Like,
       (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
      | (tei_model.divLike,
         (tei_model.frontPart
          | tei_model.divLike
          | tei_model.global)*))?,
     (tei_model.divBottomPart,
      (tei_model.divBottomPart | tei_model.global)*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_precision =
  
  ## indicates the numerical accuracy or precision  associated
  ##   with some aspect of the text markup. 
  element ns1:precision {
    tei_model.glossLike*,
    tei_att.global.attributes,
    tei_att.scoping.attributes,
    
    ## indicates the degree of precision to be assigned as a
    ##       value between 0 (none) and 1 (optimally precise)
    attribute degree {
      xsd:double { minInclusive = "0" maxInclusive = "1" }
    }?,
    
    ## supplies a standard deviation associated with the value in
    ##       question
    attribute stdDeviation {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
tei_certainty =
  
  ## indicates the degree of certainty associated
  ##   with some aspect of the text markup. 
  element ns1:certainty {
    tei_model.glossLike*,
    tei_att.global.attributes,
    tei_att.scoping.attributes,
    
    ## indicates more exactly the aspect concerning which
    ##       certainty is being expressed: specifically, whether the markup
    ##       is correctly located, whether the correct element or attribute
    ##       name has been used, or whether the content of the element or
    ##       attribute is correct,
    ##	etc.
    attribute locus {
      
      ## uncertainty concerns whether the name of the element
      ##	  or attribute  used is correctly applied.
      "name"
      | 
        ## uncertainty concerns whether the start of the element
        ##	  is correctly identified.
        "start"
      | 
        ## uncertainty concerns whether the end of the element
        ##	  is correctly identified.
        "end"
      | 
        ## uncertainty concerns both the start and the end of the
        ##	  element.
        "location"
      | 
        ## uncertainty concerns the content (for an element) or
        ##	  the value (for an attribute)
        "value"
    },
    
    ## provides an alternative value for the aspect of the markup in
    ## question—an alternative generic identifier, transcription,
    ## or attribute value, or the identifier of an anchor element (to
    ## indicate an alternative starting or ending location).  If an
    ## assertedValue is given, the confidence level specified by
    ## degree applies to the alternative markup specified by
    ## assertedValue; if none is given, it applies to the markup
    ## in the text.
    attribute assertedValue {
      xsd:anyURI
      | xsd:Name
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates conditions assumed in the assignment of a degree
    ##       of confidence.
    attribute given {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    
    ## indicates the degree of confidence assigned to the aspect
    ## of the markup named by the locus attribute.
    attribute degree {
      xsd:double { minInclusive = "0" maxInclusive = "1" }
    }?,
    empty
  }
tei_respons =
  
  ## (responsibility) identifies the individual(s) responsible for some aspect of the
  ## markup of particular element(s).
  element ns1:respons {
    tei_model.glossLike*,
    tei_att.global.attributes,
    tei_att.scoping.attributes,
    
    ## indicates the specific aspect of the markup for which
    ## responsibility is being assigned.
    attribute locus {
      list {
        (
         ## responsibility is being assigned concerning the name of the element
         ##	  or attribute used.
         "name"
         | 
           ## responsibility is being assigned concerning the start of the element
           ##	  concerned.
           "start"
         | 
           ## responsibility is being assigned concerning the end of the element
           ##	  concerned.
           "end"
         | 
           ## responsibility is being assigned concerning the location of the element
           ##	  concerned.
           "location"
         | 
           ## responsibility is being assigned concerning the content (for an element) or
           ##	  the value (for an attribute)
           "value"),
        (
         ## responsibility is being assigned concerning the name of the element
         ##	  or attribute used.
         "name"
         | 
           ## responsibility is being assigned concerning the start of the element
           ##	  concerned.
           "start"
         | 
           ## responsibility is being assigned concerning the end of the element
           ##	  concerned.
           "end"
         | 
           ## responsibility is being assigned concerning the location of the element
           ##	  concerned.
           "location"
         | 
           ## responsibility is being assigned concerning the content (for an element) or
           ##	  the value (for an attribute)
           "value")*
      }
    },
    
    ## (responsible party) identifies the individual or agency responsible for the indicated
    ## aspect of the electronic text.
    attribute resp { xsd:anyURI },
    empty
  }
tei_s =
  
  ## (s-unit) contains a sentence-like division of a text.
  element ns1:s {
    tei_macro.phraseSeq
    >> sch:pattern [
         id = "s-constraint-noNestedS"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:s"
           "\x{a}" ~
           "               "
           sch:report [
             test = "tei:s"
             "You may not nest one s element within\x{a}" ~
             "      another: use seg instead"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_phr =
  
  ## (phrase) represents a grammatical phrase.
  element ns1:phr {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_m =
  
  ## (morpheme) represents a grammatical morpheme.
  element ns1:m {
    (text | tei_model.gLike | tei_seg | tei_m | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    
    ## identifies the morpheme's base form.
    attribute baseForm {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
tei_pc =
  
  ##  (punctuation character) a character or string of characters regarded as constituting a
  ##   single punctuation mark.
  element ns1:pc {
    (text | tei_model.gLike)*,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    
    ## indicates the extent to which this punctuation mark
    ##       conventionally separates words or phrases
    attribute force {
      
      ## the punctuation mark is a word separator
      "strong"
      | 
        ## the punctuation mark is not a word separator
        "weak"
      | 
        ## the punctuation mark may or may not be a
        ## word separator
        "inter"
    }?,
    
    ## provides a name for the kind of unit delimited by  this punctuation mark.
    attribute unit { xsd:Name }?,
    
    ## indicates whether this punctuation mark precedes or
    ##       follows the unit it delimits.
    attribute pre { xsd:boolean }?,
    empty
  }
tei_att.global.analytic.attributes =
  tei_att.global.analytic.attribute.ana
tei_att.global.analytic.attribute.ana =
  
  ## (analysis) indicates one or more elements containing interpretations of the
  ## element on which the ana attribute appears.
  attribute ana {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_span =
  
  ## associates an interpretative annotation directly with a span of text.
  element ns1:span {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    
    ## specifies the beginning of the passage being annotated; if not accompanied by a
    ##         to attribute, then specifies the entire passage.
    attribute from { xsd:anyURI },
    
    ## specifies the end of the passage being annotated.
    attribute to { xsd:anyURI }?,
    empty
  }
tei_spanGrp =
  
  ## (span group) collects together span tags.
  element ns1:spanGrp {
    tei_span*,
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_interp =
  
  ## (interpretation) summarizes a specific interpretative annotation which can be linked to a span of text.
  element ns1:interp {
    (text | tei_model.gLike | tei_model.glossLike)*,
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_interpGrp =
  
  ## (interpretation group) collects together a set of related interpretations which share responsibility or type.
  element ns1:interpGrp {
    (tei_model.glossLike*, tei_interp+),
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_set =
  
  ## (setting) contains a description of the setting, time, locale, appearance, etc., of the action of a
  ##     play, typically found in the front matter of a printed performance text (not a stage direction).
  element ns1:set {
    ((tei_model.headLike | tei_model.global)*,
     (tei_model.common, tei_model.global*)*),
    tei_att.global.attributes,
    empty
  }
tei_prologue =
  
  ## contains the prologue to a drama, typically spoken by an actor out of character, possibly in
  ##     association with a particular performance or venue.
  element ns1:prologue {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.common, tei_model.global*)+,
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    empty
  }
tei_epilogue =
  
  ## contains the epilogue to a drama, typically spoken by an actor out of character, possibly in
  ##     association with a particular performance or venue.
  element ns1:epilogue {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.common, tei_model.global*)+,
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    empty
  }
tei_performance =
  
  ## contains a section of front or back matter describing how a dramatic piece is to be
  ##     performed in general or how it was performed on some specific occasion. 
  element ns1:performance {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.common, tei_model.global*)+,
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    empty
  }
tei_castList =
  
  ## (cast list) contains a single cast list or dramatis personae.
  element ns1:castList {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.common, tei_model.global*)*,
     ((tei_castItem | tei_castGroup), tei_model.global*)+,
     (tei_model.common, tei_model.global*)*),
    tei_att.global.attributes,
    empty
  }
tei_castGroup =
  
  ## (cast list grouping) groups one or more individual castItem
  ## elements within a cast list.
  element ns1:castGroup {
    ((tei_model.global | tei_model.headLike)*,
     ((tei_castItem | tei_castGroup | tei_roleDesc),
      tei_model.global*)+,
     (tei_trailer, tei_model.global*)?),
    tei_att.global.attributes,
    empty
  }
tei_castItem =
  
  ## (cast list item) contains a single entry within a cast list, describing
  ## either a single role or a list of non-speaking roles.
  element ns1:castItem {
    (text
     | tei_model.gLike
     | tei_model.castItemPart
     | tei_model.phrase
     | tei_model.global)*,
    tei_att.global.attributes,
    
    ## characterizes the cast item.
    ##    
    [ a:defaultValue = "role" ]
    attribute type {
      
      ## the item describes a single role.
      ##        
      "role"
      | 
        ## the item describes a list of non-speaking roles.
        ##    
        "list"
    }?,
    empty
  }
tei_role =
  
  ## the name of a dramatic role, as given in a cast list.
  element ns1:role {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_roleDesc =
  
  ## (role description) describes a character's role in a drama.
  element ns1:roleDesc {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_actor =
  
  ## Name of an actor appearing within a cast list.
  element ns1:actor {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_move =
  
  ## (movement) marks the actual entrance or exit of one or more characters on stage.
  element ns1:move {
    empty,
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    
    ## characterizes the movement, for example as an entrance or exit.
    ## Suggested values include: 1] entrance; 2] exit; 3] onStage
    attribute type {
      
      ## character is entering the stage.
      "entrance"
      | 
        ## character is exiting the stage.
        "exit"
      | 
        ## character moves on stage
        "onStage"
      | xsd:Name
    }?,
    
    ## specifies the direction of a stage movement.
    ## Sample values include: 1] L(left) ; 2] R(right) ; 3] C(center) 
    attribute where {
      list { xsd:Name, xsd:Name* }
    }?,
    
    ## (performance) identifies the performance or performances in which this movement occurred as specified.
    attribute perf {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    empty
  }
tei_view =
  
  ## describes the visual context of some part of a screen play in
  ## terms of what the spectator sees, generally independent of any
  ## dialogue.
  element ns1:view {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_camera =
  
  ## describes a particular camera angle or viewpoint in a screen play.
  element ns1:camera {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_sound =
  
  ## describes a sound effect or musical sequence specified within a screen play or radio script.
  element ns1:sound {
    tei_macro.paraContent,
    tei_att.global.attributes,
    
    ## categorizes the sound in some respect, e.g. as music, special effect, etc.
    attribute type { xsd:Name }?,
    
    ## indicates whether the sound overlaps the surrounding speeches or interrupts them.
    [ a:defaultValue = "unknown" ]
    attribute discrete { xsd:boolean | "unknown" | "inapplicable" }?,
    empty
  }
tei_caption =
  
  ## contains the text of a caption or other text displayed as part of
  ## a film script or screenplay.
  element ns1:caption {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_tech =
  
  ## (technical stage direction) describes a special-purpose stage direction that is not
  ## meant for the actors.
  element ns1:tech {
    tei_macro.paraContent,
    tei_att.global.attributes,
    
    ## categorizes the technical stage direction.
    attribute type {
      
      ## a lighting cue
      "light"
      | 
        ## a sound cue
        "sound"
      | 
        ## a prop cue
        "prop"
      | 
        ## a blocking instruction
        "block"
    }?,
    
    ## (performance) identifies the performance or performances to which this
    ## technical direction applies.
    attribute perf { xsd:Name }?,
    empty
  }
tei_link =
  
  ## defines an association or hypertextual link among elements or passages, of some type not more precisely specifiable by other elements.
  element ns1:link {
    empty
    >> sch:pattern [
         id = "link-constraint-linkTargets1"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @targets"
             "You may not supply both \x{a}" ~
             "	@target and @targets"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "link-constraint-linkTargets2"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@target) and not(@targets)"
             "You must\x{a}" ~
             "	supply either @target or @targets"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "link-constraint-linkTargets3"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "You must supply at least two\x{a}" ~
             "values for @target"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    
    ## specifies the identifiers of the elements or passages to be linked or associated. 
    attribute targets {
      list { xsd:anyURI, xsd:anyURI, xsd:anyURI* }
    }?,
    empty
  }
tei_linkGrp =
  
  ## (link group) defines a collection of associations or hypertextual links.
  element ns1:linkGrp {
    (tei_link | tei_ptr)+,
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    empty
  }
tei_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph.
  element ns1:ab {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    
    ## specifies whether or not the block is complete. 
    [ a:defaultValue = "N" ]
    attribute part {
      
      ## (yes) the block is incomplete
      "Y"
      | 
        ## (no) either the block is complete, or no claim is made as to its completeness
        "N"
      | 
        ## (initial) the initial part of an incomplete block
        "I"
      | 
        ## (medial) a medial part of an incomplete block
        "M"
      | 
        ## (final) the final part of an incomplete block
        "F"
    }?,
    empty
  }
tei_anchor =
  
  ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element.
  element ns1:anchor {
    empty, tei_att.global.attributes, tei_att.typed.attributes, empty
  }
tei_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level.
  element ns1:seg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.responsibility.attributes,
    empty
  }
tei_when =
  
  ## indicates a point in time either relative to other elements in the same timeline tag, or absolutely.
  element ns1:when {
    empty,
    tei_att.global.attributes,
    
    ## supplies an absolute value for the time.
    attribute absolute {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    
    ## specifies the unit of time in which the interval value is expressed, if this is not inherited from the parent timeline.
    ## Suggested values include: 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:Name
    }?,
    
    ## specifies the numeric portion of a time interval
    attribute interval {
      xsd:float { minExclusive = "0" }
      | "unknown"
    }?,
    
    ## identifies the reference point for determining the time of the current when element, which is obtained by adding the interval to the time of the reference point.
    attribute since { xsd:anyURI }?,
    empty
  }
tei_timeline =
  
  ## (timeline) provides a set of ordered points in time which can be linked to elements of a spoken text to create a temporal alignment of that text.
  element ns1:timeline {
    tei_when+,
    tei_att.global.attributes,
    
    ## designates the origin of the timeline, i.e. the time at which it begins.
    attribute origin { xsd:anyURI }?,
    
    ## specifies the unit of time corresponding to the interval value of the timeline or of its constituent points in time.
    ## Suggested values include: 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:Name
    }?,
    
    ## specifies the numeric portion of a time interval
    attribute interval {
      xsd:float { minExclusive = "0" }
      | "regular"
      | "irregular"
    }?,
    empty
  }
tei_join =
  
  ## identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it.
  element ns1:join {
    (tei_model.glossLike*)
    >> sch:pattern [
         id = "join-constraint-joinTargets1"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @targets"
             "You may not supply both \x{a}" ~
             "	@target and @targets"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "join-constraint-joinTargets2"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@target) and not(@targets)"
             "You must\x{a}" ~
             "	supply either @target or @targets"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "join-constraint-joinTargets3"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "You must supply at least two\x{a}" ~
             "values for @target"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    
    ## specifies the identifiers of the elements or passages to be joined into a virtual element.
    attribute targets {
      list { xsd:anyURI, xsd:anyURI, xsd:anyURI* }
    }?,
    
    ## specifies the name of an element which this aggregation may be understood to represent.
    attribute result { xsd:Name }?,
    
    ## indicates whether the targets to be joined include the entire element indicated (the entire subtree including its root), or just the children of the target (the branches of the subtree).
    [ a:defaultValue = "root" ]
    attribute scope {
      
      ## the rooted subtrees indicated by the targets attribute are joined, each subtree become a child of the virtual element created by the join
      "root"
      | 
        ## the children of the subtrees indicated by the targets attribute become the children of the virtual element (i.e. the roots of the subtrees are discarded)
        "branches"
    }?,
    empty
  }
tei_joinGrp =
  
  ## (join group) groups a collection of join elements and possibly pointers.
  element ns1:joinGrp {
    (tei_model.glossLike*, (tei_join | tei_ptr)+),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    
    ## describes the result of the joins gathered in this collection.
    attribute result { xsd:Name }?,
    empty
  }
tei_alt =
  
  ## (alternation) identifies an alternation or a set of choices among elements or passages.
  element ns1:alt {
    empty
    >> sch:pattern [
         id = "alt-constraint-altTargets1"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:alt"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @targets"
             "You may not supply both \x{a}" ~
             "	@target and @targets"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "alt-constraint-altTargets2"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:alt"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@target) and not(@targets)"
             "You must\x{a}" ~
             "	supply either @target or @targets"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "alt-constraint-altTargets3"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:alt"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "You must supply at least two\x{a}" ~
             "values for @target"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    
    ## specifies the identifiers of the alternative elements or passages.
    attribute targets {
      list { xsd:anyURI, xsd:anyURI, xsd:anyURI* }
    }?,
    
    ## states whether the alternations gathered in this collection are exclusive or
    ##                 inclusive.
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at most one of the
      ##                         alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that one or more of
        ##                         the alternatives occur.
        "incl"
    }?,
    
    ## If mode is , each weight states the probability that
    ##                 the corresponding alternative occurs. If mode is incl each
    ##                 weight states the probability that the corresponding alternative occurs given that
    ##                 at least one of the other alternatives occurs.
    attribute weights {
      list {
        xsd:double { minInclusive = "0" maxInclusive = "1" },
        xsd:double { minInclusive = "0" maxInclusive = "1" },
        xsd:double { minInclusive = "0" maxInclusive = "1" }*
      }
    }?,
    empty
  }
tei_altGrp =
  
  ## (alternation group) groups a collection of alt elements and possibly pointers.
  element ns1:altGrp {
    (tei_alt | tei_ptr)*,
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    
    ## states whether the alternations gathered in this collection are exclusive or
    ##                 inclusive.
    [ a:defaultValue = "excl" ]
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at most one of the
      ##                         alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that one or more of
        ##                         the alternatives occur.
        "incl"
    }?,
    empty
  }
tei_att.global.linking.attributes =
  tei_att.global.linking.attribute.corresp,
  tei_att.global.linking.attribute.synch,
  tei_att.global.linking.attribute.sameAs,
  tei_att.global.linking.attribute.copyOf,
  tei_att.global.linking.attribute.next,
  tei_att.global.linking.attribute.prev,
  tei_att.global.linking.attribute.exclude,
  tei_att.global.linking.attribute.select
tei_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current
  ##       element in some way.
  attribute corresp {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current
  ##       element.
  attribute synch {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current
  ##       element.
  attribute sameAs { xsd:anyURI }?
tei_att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a
  ##	copy.
  attribute copyOf { xsd:anyURI }?
tei_att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which
  ##       the current element is part.
  attribute next { xsd:anyURI }?
tei_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of
  ##       which the current element is part.
  attribute prev { xsd:anyURI }?
tei_att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation
  ##       with the current element.
  attribute exclude {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is
  ##       selected, the ambiguity or uncertainty is marked as resolved. If
  ##       more than one alternant is selected, the degree of ambiguity or
  ##       uncertainty is marked as reduced by the number of alternants not
  ##       selected.
  attribute select {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_msDesc =
  
  ## (manuscript description) contains a description of a single identifiable
  ## manuscript or other text-bearing object.
  element ns1:msDesc {
    (tei_msIdentifier,
     tei_model.headLike*,
     (tei_model.pLike+
      | (tei_msContents?,
         tei_physDesc?,
         tei_history?,
         tei_additional?,
         tei_msPart*))),
    tei_att.global.attributes,
    empty
  }
tei_catchwords =
  
  ## describes the system used to ensure
  ## correct ordering of the quires making up a codex or incunable,
  ## typically by means of annotations at the foot of the page.
  element ns1:catchwords {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_dimensions =
  
  ## contains a dimensional specification.
  element ns1:dimensions {
    ((tei_dim | tei_model.dimLike)*)
    >> sch:pattern [
         id = "dimensions-constraint-duplicateDim1"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "	Width element may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "dimensions-constraint-duplicateDim2"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "	Height element may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "dimensions-constraint-duplicateDim3"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "	Depth element may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    
    ## indicates which aspect of the object is being measured. 
    ## Sample values include: 1] leaves; 2] ruled; 3] pricked; 4] written; 5] miniatures; 6] binding; 7] box
    attribute type { xsd:Name }?,
    empty
  }
tei_dim =
  
  ## contains any single measurement forming part of a dimensional
  ## specification of some sort.
  element ns1:dim {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_height =
  
  ## contains a measurement measured along the
  ##   axis at right angles to the bottom of the written surface,
  ##   i.e. parallel to the spine for a codex or book. 
  element ns1:height {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_depth =
  
  ## contains a measurement measured across the
  ##   spine of a book or codex, or (for other text-bearing objects) perpendicular to the measurement given by the
  ##   width element. 
  element ns1:depth {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_width =
  
  ## contains a measurement measured along the
  ##   axis parallel to the bottom of the written surface, i.e. 
  ## perpendicular to the spine of a book or codex. 
  element ns1:width {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_heraldry =
  
  ## contains a heraldic formula
  ## or phrase, typically found as part of a blazon, coat of arms, etc. 
  ##
  element ns1:heraldry {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_locus =
  
  ## defines a location within a manuscript or manuscript part, usually as a
  ##     (possibly discontinuous) sequence of folio references. 
  element ns1:locus {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    
    ## identifies the foliation scheme in terms of which the location is being
    ##         specified.
    attribute scheme { xsd:anyURI }?,
    
    ## specifies the starting point of the location in a normalized form.
    attribute from {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies the end-point of the location in a normalized form.
    attribute to {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
tei_locusGrp =
  
  ## groups a number of locations which together form a
  ##   distinct but discontinuous item within a manuscript or manuscript
  ##   part, according to a specific foliation.
  ##   
  element ns1:locusGrp {
    tei_locus+,
    tei_att.global.attributes,
    
    ## identifies the foliation scheme in terms of which all the
    ##       locations contained by the group are specified.
    attribute scheme { xsd:anyURI }?,
    empty
  }
tei_material =
  
  ## contains a word or phrase describing the
  ##   material of which  the object being described is composed.
  ##   
  element ns1:material {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_origDate =
  
  ## (origin date) contains any form of date, used to
  ##   identify the date of origin for a manuscript or manuscript part.
  ##   
  element ns1:origDate {
    (text | tei_model.gLike | tei_model.hiLike)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_origPlace =
  
  ## (origin place) contains any form of place name, used to identify the
  ## place of origin for a manuscript or manuscript part. 
  element ns1:origPlace {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_secFol =
  
  ## (second folio) The word or words taken from a fixed point
  ## in a codex (typically the beginning of the
  ## second leaf) in order
  ## to provide a unique identifier for it.
  ## 
  ##
  element ns1:secFol {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_signatures =
  
  ## contains discussion of the leaf or quire signatures found within a codex.
  element ns1:signatures {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_stamp =
  
  ## contains a word or phrase describing a
  ## stamp or similar device.
  element ns1:stamp {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_watermark =
  
  ## contains a word or phrase describing a
  ## watermark or similar device.
  element ns1:watermark {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify
  ## the  manuscript being described. 
  element ns1:msIdentifier {
    ((tei_model.placeNamePart_sequenceOptional,
      tei_institution?,
      tei_repository?,
      tei_collection*,
      tei_idno?),
     (tei_msName | tei_altIdentifier)*)
    >> sch:pattern [
         id = "msIdentifier-constraint-msId_minimal"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "local-name(*[1])='idno' or                              local-name(*[1])='altIdentifier' or        .='' "
             "\x{a}" ~
             "	    You must supply either a locator of some type or a\x{a}" ~
             "	    name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    empty
  }
tei_institution =
  
  ## contains the name of an organization such as a university or
  ##   library, with which a manuscript is identified, generally its
  ##   holding institution.
  element ns1:institution {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_repository =
  
  ## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution.
  element ns1:repository {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_collection =
  
  ## contains the name of a collection of
  ## manuscripts, not necessarily located within a single repository. 
  element ns1:collection {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for
  ## a manuscript, such as a former catalogue number.
  element ns1:altIdentifier {
    (tei_model.placeNamePart_sequenceOptional,
     tei_institution?,
     tei_repository?,
     tei_collection?,
     tei_idno,
     tei_note?),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_msName =
  
  ## (alternative name) contains any form of unstructured alternative
  ## name used for a manuscript, such as an  ocellus
  ## nominum, or nickname. 
  element ns1:msName {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_colophon =
  
  ## contains the  colophon
  ## of a  manuscript item: that is, a statement providing information regarding the date, place, agency, or reason for production of the manuscript.
  element ns1:colophon {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_explicit =
  
  ## contains the  explicit of a
  ## manuscript item, that is, the closing words of the text proper,
  ## exclusive of any rubric or colophon which might follow it.
  ##   
  element ns1:explicit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_filiation =
  
  ## contains information concerning the manuscript's filiation, i.e. its relationship to other surviving manuscripts of the same text, its protographs, antigraphs and apographs.
  element ns1:filiation {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_finalRubric =
  
  ## contains the string of words that denotes the end of a text division, often with an assertion as to its author and title, usually set off from the text itself by red ink, by a different size or type of script, or by some other such visual device.
  element ns1:finalRubric {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_incipit =
  
  ## contains the incipit of a manuscript item, that is the opening words of the text proper, exclusive of any rubric which might precede it, of sufficient length to identify the work uniquely; such incipts were, in fomer times, frequently used a means of reference to a work, in place of a title.
  element ns1:incipit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript or manuscript
  ##     part, either as a series of paragraphs or as a series of structured manuscript items.
  element ns1:msContents {
    (tei_model.pLike+
     | (tei_summary?,
        tei_textLang?,
        tei_titlePage?,
        (tei_msItem | tei_msItemStruct)*)),
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    
    ## identifies the text types or classifications applicable to this object.
    attribute class { xsd:anyURI }?,
    empty
  }
tei_msItem =
  
  ## (manuscript item) describes an individual work or item within the intellectual
  ##   content of a manuscript or manuscript part. 
  element ns1:msItem {
    ((tei_locus | tei_locusGrp)*,
     (tei_model.pLike+
      | (tei_model.titlepagePart
         | tei_model.msItemPart
         | tei_model.global)+)),
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    
    ## identifies the text types or classifications applicable to this
    ## item
    attribute class { xsd:anyURI }?,
    empty
  }
tei_msItemStruct =
  
  ## (structured manuscript item) contains a structured description for an
  ##   individual work or item within the intellectual content of a
  ##   manuscript or manuscript part.
  element ns1:msItemStruct {
    (tei_locus?,
     (tei_model.pLike+
      | (tei_author*,
         tei_respStmt*,
         tei_title*,
         tei_rubric?,
         tei_incipit?,
         tei_msItemStruct*,
         tei_explicit?,
         tei_finalRubric?,
         tei_colophon*,
         tei_decoNote*,
         tei_listBibl*,
         tei_bibl*,
         tei_filiation*,
         tei_model.noteLike*,
         tei_textLang?))),
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    
    ## identifies the text types or classifications applicable to this
    ## item
    attribute class { xsd:anyURI }?,
    empty
  }
tei_rubric =
  
  ## contains the text of any rubric or heading attached to a particular manuscript item, that is, a string of words through which a
  ## manuscript signals the beginning of a text division, often with an assertion as to its author and title, which is in some way set off from the text itself, usually in red ink, or by use of different size or type of script, or some other such visual device.
  element ns1:rubric {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_summary =
  
  ## contains an overview of the available
  ##   information concerning some aspect of an item (for example, its
  ## intellectual content, history, layout, typography etc.) as a
  ## complement or alternative to the  more detailed information  carried by
  ##   more specific elements.
  element ns1:summary {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_textLang =
  
  ## (text language) in a manuscript description, describes
  ##   the languages and writing systems identified within the manuscript
  ##   being described. 
  element ns1:textLang {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    
    ## (main language) supplies a code which identifies the chief language used in the manuscript.
    attribute mainLang { xsd:language }?,
    
    ## (other languages) one or more codes identifying any other languages used in the manuscript.
    attribute otherLangs {
      list { xsd:language* }
    }?,
    empty
  }
tei_att.msExcerpt.attributes = tei_att.msExcerpt.attribute.defective
tei_att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective,
  ##       i.e. incomplete through loss or damage.
  [ a:defaultValue = "false" ]
  attribute defective { xsd:boolean | "unknown" | "inapplicable" }?
tei_physDesc =
  
  ## (physical description) contains a full physical description of a
  ## manuscript or manuscript part, optionally subdivided using more
  ## specialised elements from the model.physDescPart class.
  element ns1:physDesc {
    (tei_model.pLike*, tei_model.physDescPart_sequenceOptional),
    tei_att.global.attributes,
    empty
  }
tei_objectDesc =
  
  ## contains a description of the physical
  ##   components making up the object which is being described.
  element ns1:objectDesc {
    (tei_model.pLike+ | (tei_supportDesc?, tei_layoutDesc?)),
    tei_att.global.attributes,
    
    ## a short  project-specific name identifying the physical form of
    ##       the carrier, for example as a codex, roll, fragment, partial leaf,
    ##       cutting etc.
    attribute form { xsd:Name }?,
    empty
  }
tei_supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript.
  element ns1:supportDesc {
    (tei_model.pLike+
     | (tei_support?,
        tei_extent?,
        tei_foliation*,
        tei_collation?,
        tei_condition?)),
    tei_att.global.attributes,
    
    ## a short project-defined name for the material composing
    ##       the majority of the support
    ## Suggested values include: 1] paper (paper) ; 2] parch(parchment) ; 3] mixed
    attribute material {
      
      ##  (paper) 
      "paper"
      | 
        ## (parchment) 
        "parch"
      | 
        ##
        "mixed"
      | xsd:Name
    }?,
    empty
  }
tei_support =
  
  ## contains a description of the materials
  ## etc. which make up the physical support for the written part of a manuscript.
  element ns1:support {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_collation =
  
  ## contains a description of how the leaves or bifolia are physically
  ## arranged.
  element ns1:collation {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_foliation =
  
  ## describes the numbering system or systems used to 
  ## count the leaves or pages in a codex.
  element ns1:foliation {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_condition =
  
  ## contains a description of the physical
  ## condition of the manuscript. 
  element ns1:condition {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_layoutDesc =
  
  ## (layout description) collects the set of layout descriptions applicable to a manuscript.
  element ns1:layoutDesc {
    (tei_model.pLike+ | (tei_summary?, tei_layout+)),
    tei_att.global.attributes,
    empty
  }
tei_layout =
  
  ## describes how text is laid out on the
  ##   page, including information about any ruling, pricking, or other
  ##   evidence of page-preparation techniques.
  element ns1:layout {
    tei_macro.specialPara,
    tei_att.global.attributes,
    
    ## specifies the number of columns per page
    attribute columns {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## specifies the number of ruled lines per column
    attribute ruledLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## specifies the number of written lines per
    ##       column
    attribute writtenLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    empty
  }
tei_handDesc =
  
  ## (description of hands) contains a description of all the different kinds of writing  used in a manuscript.
  element ns1:handDesc {
    (tei_model.pLike+ | (tei_summary?, tei_handNote+)),
    tei_att.global.attributes,
    
    ## specifies the number of distinct hands identified within the manuscript
    attribute hands { xsd:nonNegativeInteger }?,
    empty
  }
tei_typeDesc =
  
  ## contains a description of the typefaces or other aspects of
  ##   the printing of an incunable or other printed source.
  element ns1:typeDesc {
    (tei_model.pLike+ | (tei_summary?, tei_typeNote+)),
    tei_att.global.attributes,
    empty
  }
tei_musicNotation =
  
  ## contains description of type of musical notation.
  element ns1:musicNotation {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_decoDesc =
  
  ## (decoration description) contains a description of the decoration of a manuscript, either as a sequence of paragraphs, or as a sequence of topically organised decoNote elements.
  element ns1:decoDesc {
    (tei_model.pLike+ | (tei_summary?, tei_decoNote+)),
    tei_att.global.attributes,
    empty
  }
tei_decoNote =
  
  ## (note on decoration) contains a note describing either a
  ## decorative component of a manuscript, or a fairly homogenous class of
  ## such components.
  element ns1:decoNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_additions =
  
  ## contains a description of any significant additions found
  ## within a manuscript, such as marginalia or other annotations. 
  element ns1:additions {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_bindingDesc =
  
  ## (binding description) describes the present and former bindings of a manuscript, either
  ## as a series of paragraphs or as a series of distinct binding elements,
  ## one for each binding of the manuscript. 
  element ns1:bindingDesc {
    ((tei_model.pLike | tei_decoNote | tei_condition)+ | tei_binding+),
    tei_att.global.attributes,
    empty
  }
tei_binding =
  
  ## contains a description of one binding, i.e. type of covering, boards,
  ##     etc. applied to a manuscript.
  element ns1:binding {
    (tei_model.pLike | tei_condition | tei_decoNote)+,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    
    ## specifies whether or not the binding is contemporary with the majority of its
    ##         contents
    attribute contemporary {
      xsd:boolean | "unknown" | "inapplicable"
    }?,
    empty
  }
tei_sealDesc =
  
  ## (seal description) describes the seals or other external items attached to a manuscript, either
  ## as a series of paragraphs or as a series of distinct seal elements,
  ## possibly with additional decoNotes. 
  element ns1:sealDesc {
    (tei_model.pLike+ | (tei_decoNote | tei_seal | tei_condition)+),
    tei_att.global.attributes,
    empty
  }
tei_seal =
  
  ## contains a description of one seal or similar
  ##   attachment applied to a manuscript.
  element ns1:seal {
    (tei_model.pLike | tei_decoNote)+,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    
    ## specifies whether or not the seal is contemporary with the
    ##       item to which it is affixed
    attribute contemporary {
      xsd:boolean | "unknown" | "inapplicable"
    }?,
    empty
  }
tei_accMat =
  
  ## (accompanying material) contains details of any significant additional
  ## material which may be closely associated with the manuscript being
  ## described, such as non-contemporaneous documents or fragments bound in
  ## with the manuscript at some earlier historical period.
  element ns1:accMat {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_history =
  
  ##  groups elements
  ## describing the full history of a manuscript or manuscript part.
  element ns1:history {
    (tei_model.pLike+
     | (tei_summary?, tei_origin?, tei_provenance*, tei_acquisition?)),
    tei_att.global.attributes,
    empty
  }
tei_origin =
  
  ## contains any descriptive or other information
  ## concerning the origin of  a manuscript or manuscript part. 
  element ns1:origin {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_provenance =
  
  ## contains any descriptive or other information
  ## concerning a single identifiable episode during the history of a manuscript
  ## or manuscript part, after its creation but before its acquisition. 
  element ns1:provenance {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_acquisition =
  
  ## contains any descriptive or other information
  ## concerning the process by which a manuscript or manuscript part entered the holding
  ## institution. 
  element ns1:acquisition {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_additional =
  
  ## groups additional information, combining
  ## bibliographic information about a manuscript, or surrogate copies of
  ## it with  curatorial or administrative information. 
  element ns1:additional {
    (tei_adminInfo?, tei_surrogates?, tei_listBibl?),
    tei_att.global.attributes,
    empty
  }
tei_adminInfo =
  
  ## (administrative information) contains information about the present
  ## custody and availability of the manuscript, and also about the record
  ## description itself. 
  element ns1:adminInfo {
    (tei_recordHist?,
     tei_availability?,
     tei_custodialHist?,
     tei_model.noteLike?),
    tei_att.global.attributes,
    empty
  }
tei_recordHist =
  
  ## (recorded history) provides information about the source and
  ## revision status of the parent manuscript description itself. 
  element ns1:recordHist {
    (tei_model.pLike+ | (tei_source, tei_change*)),
    tei_att.global.attributes,
    empty
  }
tei_source =
  
  ## describes the original source for the information contained with a manuscript description. 
  element ns1:source {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_custodialHist =
  
  ## (custodial history) contains a description of a manuscript's custodial history, either
  ## as running prose or as a series of dated custodial events. 
  element ns1:custodialHist {
    (tei_model.pLike+ | tei_custEvent+),
    tei_att.global.attributes,
    empty
  }
tei_custEvent =
  
  ## (custodial event) describes a single event during the custodial history of a manuscript.
  element ns1:custEvent {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_surrogates =
  
  ## contains information about any representations of the manuscript being described which
  ## may exist in the holding institution or elsewhere. 
  element ns1:surrogates {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_msPart =
  
  ## (manuscript part) contains information about an originally
  ## distinct manuscript or part of a manuscript, now forming part of a composite manuscript.
  element ns1:msPart {
    (tei_altIdentifier,
     tei_model.headLike*,
     (tei_model.pLike+
      | (tei_msContents?,
         tei_physDesc?,
         tei_history?,
         tei_additional?,
         tei_msPart*))),
    tei_att.global.attributes,
    empty
  }
tei_graph =
  
  ## encodes a graph, which is a collection of nodes, and arcs which
  ## connect the nodes.
  element ns1:graph {
    ((tei_label, tei_model.global*)?,
     (((tei_node, tei_model.global*)+, (tei_arc, tei_model.global*)*)
      | ((tei_arc, tei_model.global*)+,
         (tei_node, tei_model.global*)+))),
    tei_att.global.attributes,
    
    ## describes the type of graph.
    ## Suggested values include: 1] undirected; 2] directed; 3] transitionNetwork; 4] transducer
    attribute type {
      
      ## undirected graph
      "undirected"
      | 
        ## directed graph
        "directed"
      | 
        ## a directed graph with distinguished initial and final nodes
        "transitionNetwork"
      | 
        ## a transition network with up to two labels on each arc
        "transducer"
      | xsd:Name
    }?,
    
    ## states the order of the graph, i.e., the number of its nodes.
    attribute order { xsd:nonNegativeInteger }?,
    
    ## states the size of the graph, i.e., the number of its arcs.
    attribute size { xsd:nonNegativeInteger }?,
    empty
  }
tei_node =
  
  ## encodes a node, a possibly labeled point in a graph.
  element ns1:node {
    (tei_label, tei_label?)?,
    tei_att.global.attributes,
    
    ## provides the value of a node, which is a feature structure or
    ## other analytic element.
    attribute value { xsd:anyURI }?,
    
    ## provides a type for a node.
    ## Suggested values include: 1] initial; 2] final
    attribute type {
      
      ## initial node in a transition network
      "initial"
      | 
        ## final node in a transition network
        "final"
      | xsd:Name
    }?,
    
    ## (adjacent to) gives the identifiers of the nodes which are adjacent to the current node.
    attribute adjTo {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    
    ## (adjacent from) gives the identifiers of the nodes which are adjacent from the current
    ## node.
    attribute adjFrom {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    
    ## (adjacent) gives the identifiers of the nodes which are both adjacent to and
    ## adjacent from the current node.
    attribute adj {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    
    ## gives the in degree of the node, the number of nodes which
    ## are adjacent from the given node.
    attribute inDegree { xsd:nonNegativeInteger }?,
    
    ## gives the out degree of the node, the number of nodes which
    ## are adjacent to the given node.
    attribute outDegree { xsd:nonNegativeInteger }?,
    
    ## gives the degree of the node, the number of arcs with which
    ## the node is incident.
    attribute degree { xsd:nonNegativeInteger }?,
    empty
  }
tei_arc =
  
  ## encodes an arc, the connection from one node to another in a graph.
  element ns1:arc {
    (tei_label, tei_label?)?,
    
    ## provides the value of an arc, which is a feature structure or other
    ##                            analytic element.
    attribute value { xsd:anyURI }?,
    
    ## gives the identifier of the node which is adjacent from this arc.
    attribute from { xsd:anyURI },
    
    ## gives the identifier of the node which is adjacent to this arc.
    attribute to { xsd:anyURI },
    tei_att.global.attributes,
    empty
  }
tei_tree =
  
  ## encodes a tree, which is made up of a root, internal nodes,
  ## leaves, and arcs from root to leaves.
  element ns1:tree {
    (tei_label?,
     ((tei_leaf | tei_iNode)*, tei_root, (tei_leaf | tei_iNode)*)),
    tei_att.global.attributes,
    
    ## gives the maximum number of children of the root and internal
    ## nodes of the tree.
    attribute arity { xsd:nonNegativeInteger }?,
    
    ## (ordered) indicates whether or not the tree is ordered, or if it is
    ## partially ordered.
    [ a:defaultValue = "true" ]
    attribute ord {
      
      ## indicates that all of the branching nodes of the tree are ordered.
      "true"
      | 
        ## indicates that some of the branching nodes of the tree are ordered
        ## and some are unordered.
        "partial"
      | 
        ## indicates that all of the branching nodes of the tree are
        ## unordered.
        "false"
    },
    
    ## gives the order of the tree, i.e., the number of its nodes.
    attribute order { xsd:nonNegativeInteger }?,
    empty
  }
tei_root =
  
  ## (root node) represents the root node of a tree.
  element ns1:root {
    tei_label?,
    tei_att.global.attributes,
    
    ## provides the value of the root, which is a feature structure or
    ## other analytic element.
    attribute value { xsd:anyURI }?,
    
    ## provides a list of identifiers of the elements which are the children of
    ## the root node.
    attribute children {
      list { xsd:anyURI, xsd:anyURI* }
    },
    
    ## (ordered) indicates whether or not the root is ordered.
    attribute ord { xsd:boolean | "unknown" | "inapplicable" }?,
    
    ## gives the out degree of the root, the number of its children.
    attribute outDegree { xsd:nonNegativeInteger }?,
    empty
  }
tei_iNode =
  
  ## (intermediate (or internal) node) represents an intermediate (or internal) node of a tree.
  element ns1:iNode {
    tei_label?,
    tei_att.global.attributes,
    
    ## provides the value of an intermediate node, which is a feature
    ## structure or other analytic element.
    attribute value { xsd:anyURI }?,
    
    ## provides a list of identifiers of the elements which are the children of
    ## the intermediate node.
    attribute children {
      list { xsd:anyURI, xsd:anyURI* }
    },
    
    ## provides the identifier of the element which is the parent of this node.
    attribute parent { xsd:anyURI }?,
    
    ## (ordered) indicates whether or not the internal node is ordered.
    attribute ord { xsd:boolean | "unknown" | "inapplicable" }?,
    
    ## provides an identifier of
    ## the element which this node
    ## follows.
    attribute follow { xsd:anyURI }?,
    
    ## gives the out degree of an intermediate node, the number of its
    ## children.
    attribute outDegree { xsd:nonNegativeInteger }?,
    empty
  }
tei_leaf =
  
  ## encodes the leaves (terminal nodes) of a tree.
  element ns1:leaf {
    tei_label?,
    tei_att.global.attributes,
    
    ## provides a pointer to a feature
    ## structure or other analytic element.
    attribute value { xsd:anyURI }?,
    
    ## provides the identifier of parent of a leaf.
    attribute parent { xsd:anyURI }?,
    
    ## provides an identifier of an element which this leaf follows.
    attribute follow { xsd:anyURI }?,
    empty
  }
tei_eTree =
  
  ## (embedding tree) provides an alternative to tree element for representing ordered rooted tree structures.
  element ns1:eTree {
    (tei_label?,
     (tei_eTree | tei_triangle | tei_eLeaf | tei_model.ptrLike)*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## provides the value of an embedding tree, which is a feature
    ## structure or other analytic element.
    attribute value { xsd:anyURI }?,
    empty
  }
tei_triangle =
  
  ## (underspecified embedding tree, so called because of its
  ##   characteristic shape when drawn) Provides for an underspecified eTree, that is, an eTree with
  ##   information left out.
  element ns1:triangle {
    (tei_label?, (tei_eTree | tei_triangle | tei_eLeaf)*),
    tei_att.global.attributes,
    
    ## provides the value of a triangle, which is the identifier of a feature
    ## structure or other analytic element.
    attribute value { xsd:anyURI }?,
    empty
  }
tei_eLeaf =
  
  ## (leaf or terminal node of an embedding tree) provides explicitly for a leaf of an embedding tree, which may also
  ## be encoded with the eTree element.
  element ns1:eLeaf {
    (tei_label?, tei_model.ptrLike?),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## provides the value of an embedding leaf, which is a feature
    ## structure or other analytic element.
    attribute value { xsd:anyURI }?,
    empty
  }
tei_forest =
  
  ## provides for groups of rooted trees.
  element ns1:forest {
    (tei_tree | tei_eTree | tei_triangle)+,
    tei_att.global.attributes,
    
    ## identifies the type of the forest.
    attribute type { xsd:Name }?,
    empty
  }
tei_forestGrp =
  
  ## (forest group) provides for groups of forests.
  element ns1:forestGrp {
    tei_forest+,
    tei_att.global.attributes,
    
    ## identifies the type of the forest group.
    attribute type { xsd:Name }?,
    empty
  }
tei_table =
  
  ## contains text displayed in tabular form, in rows and columns.
  element ns1:table {
    ((tei_model.headLike | tei_model.global)*,
     (tei_row, tei_model.global*)+),
    
    ## indicates the number of rows in the table.
    attribute rows { xsd:nonNegativeInteger }?,
    
    ## (columns) indicates the number of columns in each row of the table.
    attribute cols { xsd:nonNegativeInteger }?,
    tei_att.global.attributes,
    empty
  }
tei_row =
  
  ## contains one row of a table. 
  element ns1:row {
    tei_cell+,
    tei_att.global.attributes,
    tei_att.tableDecoration.attributes,
    empty
  }
tei_cell =
  
  ## contains one cell of a table. 
  element ns1:cell {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.tableDecoration.attributes,
    empty
  }
tei_formula =
  
  ## contains a mathematical or other formula.
  element ns1:formula {
    (text | tei_model.graphicLike)*,
    tei_att.global.attributes,
    
    ## supplies the name of a previously defined notation used for the content of the element.
    attribute notation { xsd:anyURI }?,
    empty
  }
tei_figure =
  
  ## groups elements representing or containing graphic information such as an illustration or
  ##     figure.
  element ns1:figure {
    (tei_model.headLike
     | tei_model.pLike
     | tei_figDesc
     | tei_model.graphicLike
     | tei_model.egLike
     | tei_floatingText
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    empty
  }
tei_figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content
  ## of a graphic figure, for use when documenting an image without
  ## displaying it.
  element ns1:figDesc {
    tei_macro.limitedContent, tei_att.global.attributes, empty
  }
tei_model.rdgLike = tei_rdg
tei_app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional
  ## lemma and at least one reading.
  element ns1:app {
    (tei_model.global*,
     (tei_lem, tei_model.global*, (tei_wit, tei_model.global*)?)?,
     ((tei_model.rdgLike,
       tei_model.global*,
       (tei_wit, tei_model.global*)?)
      | (tei_rdgGrp,
         tei_model.global*,
         (tei_wit, tei_model.global*)?))*),
    tei_att.global.attributes,
    
    ## classifies the variation contained in this element according to
    ## some convenient typology.
    attribute type { xsd:Name }?,
    
    ## identifies the beginning of the lemma in the base text, if
    ## necessary.
    attribute from { xsd:anyURI }?,
    
    ## identifies the endpoint of the lemma in the base text, if
    ## necessary.
    attribute to { xsd:anyURI }?,
    
    ## (location) indicates the location of the variation, when the
    ## location-referenced method of apparatus markup is used.
    attribute loc {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    empty
  }
tei_lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation.
  element ns1:lem {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    empty
  }
tei_rdg =
  
  ## (reading) contains a single reading within a textual variation.
  element ns1:rdg {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    empty
  }
tei_rdgGrp =
  
  ## (reading group) within a textual variation,
  ## groups two or more readings perceived to have a genetic
  ## relationship or other affinity.
  element ns1:rdgGrp {
    ((tei_rdgGrp, tei_wit?)
     | ((tei_lem, tei_wit?)?, (tei_model.rdgLike, tei_wit?))*)+,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    empty
  }
tei_witDetail =
  
  ## (witness detail) gives further information about a particular witness, or
  ## witnesses, to a particular reading.
  element ns1:witDetail {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.responsibility.attributes,
    tei_att.pointing.attributes,
    
    ## (witnesses) indicates the sigil or sigla for the witnesses to which the
    ## detail refers.
    attribute wit {
      list { xsd:anyURI, xsd:anyURI* }
    },
    
    ## describes the type of information given about the witness.
    attribute type { xsd:Name }?,
    empty
  }
tei_wit =
  
  ## contains a list of one or more sigla of witnesses attesting a
  ## given reading, in a textual variation.
  element ns1:wit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.rdgPart.attributes,
    empty
  }
tei_listWit =
  
  ## (witness list) lists definitions for all the witnesses referred to by a critical
  ##   apparatus, optionally grouped hierarchically.
  element ns1:listWit {
    (tei_model.headLike?, (tei_witness | tei_listWit)+),
    tei_att.global.attributes,
    empty
  }
tei_witness =
  
  ## contains either a description of a single witness referred to
  ## within the critical apparatus, or a list of witnesses which is to be
  ## referred to by a single sigil.
  element ns1:witness {
    tei_macro.limitedContent, tei_att.global.attributes, empty
  }
tei_witStart =
  
  ## (fragmented witness start) indicates the beginning, or resumption, of the text of a
  ## fragmentary witness.
  element ns1:witStart {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_witEnd =
  
  ## (fragmented witness end) indicates the end, or suspension, of the text of a fragmentary
  ## witness.
  element ns1:witEnd {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_lacunaStart =
  
  ## indicates the beginning of a lacuna in the text of a mostly
  ## complete textual witness.
  element ns1:lacunaStart {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_lacunaEnd =
  
  ## indicates the end of a lacuna in a mostly complete textual
  ## witness.
  element ns1:lacunaEnd {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_variantEncoding =
  
  ## declares the method used to encode text-critical variants.
  element ns1:variantEncoding {
    empty,
    tei_att.global.attributes,
    
    ## indicates which method is used to encode the apparatus of
    ## variants.
    attribute method {
      
      ## apparatus uses line numbers or other canonical reference scheme
      ## referenced in a base text.
      "location-referenced"
      | 
        ## apparatus indicates the precise locations of the beginning and
        ## ending of each lemma relative to a base text.
        "double-end-point"
      | 
        ## alternate readings of a passage are given in parallel in the
        ## text; no notion of a base text is necessary.
        "parallel-segmentation"
    },
    
    ## indicates whether the apparatus appears within the running text
    ## or external to it.
    attribute location {
      
      ## apparatus appears within the running text.
      "internal"
      | 
        ## apparatus appears outside the base text.
        "external"
    },
    empty
  }
tei_model.rdgPart =
  tei_wit | tei_witStart | tei_witEnd | tei_lacunaStart | tei_lacunaEnd
tei_att.rdgPart.attributes = tei_att.rdgPart.attribute.wit
tei_att.rdgPart.attribute.wit =
  
  ## (witness or witnesses) contains a list of one or more sigla indicating the witnesses
  ## which begin or end at this point.
  attribute wit {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.textCritical.attributes =
  tei_att.responsibility.attributes,
  tei_att.textCritical.attribute.wit,
  tei_att.textCritical.attribute.type,
  tei_att.textCritical.attribute.cause,
  tei_att.textCritical.attribute.varSeq,
  tei_att.textCritical.attribute.hand
tei_att.textCritical.attribute.wit =
  
  ## (witness or witnesses) contains a list of one or more pointers indicating the witnesses
  ## which attest to a given reading.
  attribute wit {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.textCritical.attribute.type =
  
  ## classifies the reading according to some useful typology.
  ## Sample values include: 1] substantive; 2] orthographic
  attribute type { xsd:Name }?
tei_att.textCritical.attribute.cause =
  
  ## classifies the cause for the variant reading, according to
  ## any appropriate typology of possible origins.
  ## Sample values include: 1] homeoteleuton; 2] homeoarchy; 3] paleographicConfusion; 4] haplography; 5] dittography; 6] falseEmendation
  attribute cause { xsd:Name }?
tei_att.textCritical.attribute.varSeq =
  
  ## (variant sequence) provides a number indicating the position of this reading in a
  ## sequence, when there is reason to presume a sequence to the variants
  ## on any one lemma.
  attribute varSeq { xsd:nonNegativeInteger }?
tei_att.textCritical.attribute.hand =
  
  ## signifies the hand responsible for a particular reading in the
  ## witness.
  attribute hand { xsd:anyURI }?
tei_facsimile =
  
  ## contains a representation of some written source in the form of
  ## a set of images rather than as transcribed or encoded text.
  element ns1:facsimile {
    (tei_front?, (tei_model.graphicLike | tei_surface)+, tei_back?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_att.global.facs.attributes = tei_att.global.facs.attribute.facs
tei_att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with the content of the element.
  attribute facs {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_surface =
  
  ## defines a written surface in terms of a rectangular
  ## coordinate space, optionally  grouping one or more graphic representations of
  ## that space, and rectangular zones of interest
  ## within it.
  element ns1:surface {
    (tei_model.global
     | tei_model.glossLike
     | tei_model.graphicLike
     | tei_zone
     | tei_patch)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.coordinated.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_att.coordinated.attributes =
  tei_att.coordinated.attribute.start,
  tei_att.coordinated.attribute.ulx,
  tei_att.coordinated.attribute.uly,
  tei_att.coordinated.attribute.lrx,
  tei_att.coordinated.attribute.lry,
  tei_att.coordinated.attribute.points
tei_att.coordinated.attribute.start =
  
  ## indicates the element within a transcription of the text
  ## containing at least the start of the writing represented by this zone
  ## or surface.
  attribute start { xsd:anyURI }?
tei_att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a
  ## rectangular space.
  attribute ulx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a
  ## rectangular space.
  attribute uly {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a
  ## rectangular space.
  attribute lrx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a
  ## rectangular space.
  attribute lry {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.points =
  
  ## identifies a non-rectangular area within the bounding box
  ## specified by the other attributes  by specifying
  ## a series of pairs of numbers, each of which gives the x,y coordinates
  ## of a point on a line defining the non-rectangular area.
  attribute points {
    list {
      xsd:token { pattern = "[d]+,[\d]+([\s]+[\d]+,[\d]+){2,}" },
      xsd:token { pattern = "[d]+,[\d]+([\s]+[\d]+,[\d]+){2,}" }*
    }
  }?
tei_zone =
  
  ## defines a rectangular area contained within a surface
  ## element. 
  element ns1:zone {
    (text | tei_model.zonePart | tei_model.global)*,
    
    ## indicates the amount by which this zone has been rotated clockwise,
    ##                            with respect to the normal orientation of the parent surface
    ##                            element as implied by the dimensions given in the msDesc section
    ##                            or by the coordinates of the surface itself. The orientation is
    ##                            expressed in arc degrees.
    [ a:defaultValue = "0" ]
    attribute rotate { xsd:nonNegativeInteger }?,
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    empty
  }
tei_addSpan =
  
  ## (added span of text) marks the beginning of a longer sequence of text added by an
  ##   author, scribe, annotator or corrector (see also add).
  element ns1:addSpan {
    empty
    >> sch:pattern [
         id = "addSpan-constraint-spanTo"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "addSpan-constraint-spanTo_fr"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    empty
  }
tei_damage =
  
  ## contains an area of damage to the text witness.
  element ns1:damage {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.damaged.attributes,
    empty
  }
tei_damageSpan =
  
  ## (damaged span of text) marks the beginning of a longer sequence of text which is
  ##   damaged in some way but still legible.
  element ns1:damageSpan {
    empty
    >> sch:pattern [
         id = "damageSpan-constraint-spanTo"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The spanTo= attribute of\x{a}" ~
             "	"
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "damageSpan-constraint-spanTo_fr"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.damaged.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    empty
  }
tei_delSpan =
  
  ## (deleted span of text) marks the beginning of a longer sequence of text deleted,
  ## marked as deleted, or otherwise signaled as superfluous or spurious by an
  ## author, scribe, annotator, or corrector.
  element ns1:delSpan {
    empty
    >> sch:pattern [
         id = "delSpan-constraint-spanTo"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             sch:name [ ]
             "\x{a}" ~
             "      is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "delSpan-constraint-spanTo_fr"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    empty
  }
tei_ex =
  
  ## (editorial expansion) contains a sequence of letters added by an editor or
  ##   transcriber when expanding an abbreviation.
  element ns1:ex {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or
  ##   similar material appearing on the current page.
  element ns1:fw {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## Sample values include: 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type { xsd:Name }?,
    empty
  }
tei_handNotes =
  
  ## contains one or more handNote elements documenting the
  ## different hands identified within the source texts.
  element ns1:handNotes {
    tei_handNote+, tei_att.global.attributes, empty
  }
tei_handShift =
  
  ## marks the beginning of a sequence of text written in a new
  ## hand, or the beginning of a scribal stint.
  element ns1:handShift {
    empty,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    tei_att.responsibility.attributes,
    
    ## identifies the new hand.
    attribute new { xsd:anyURI }?,
    empty
  }
tei_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an
  ##   abbreviation which are omitted or replaced in the expanded form of
  ##   the abbreviation.
  element ns1:am {
    (text | tei_model.gLike | tei_model.pPart.transcriptional)*,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_restore =
  
  ## indicates restoration of text to an earlier state by
  ## cancellation of an editorial or authorial marking or instruction.
  element ns1:restore {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_space =
  
  ## indicates the location of a significant space in the copy text.
  element ns1:space {
    tei_model.glossLike*,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    
    ## (dimension) indicates whether the space is horizontal or vertical.
    attribute dim {
      
      ## the space is horizontal.
      "horizontal"
      | 
        ## the space is vertical.
        "vertical"
    }?,
    
    ## (responsible party) indicates the individual responsible for identifying and measuring
    ## the space.
    attribute resp { xsd:anyURI }?,
    empty
  }
tei_subst =
  
  ## (substitution) groups one or more deletions with one or more additions when
  ##   the combination is to be regarded as a single intervention in the text.
  element ns1:subst {
    (tei_model.pPart.transcriptional,
     (text | tei_model.pPart.transcriptional)+),
    
    ## The type of substitution.
    attribute type { xsd:Name }?,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    empty
  }
tei_supplied =
  
  ## signifies text supplied by the transcriber or editor for any
  ##   reason, typically because the original cannot be read because of
  ##   physical damage or loss to the original.
  element ns1:supplied {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    
    ## indicates why the text has had to be supplied.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    empty
  }
tei_surplus =
  
  ##  (Texte superflu) marks text present in the source which the editor believes to
  ##   be superfluous or redundant.
  element ns1:surplus {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    
    ## indicates the grounds for believing this text to be superfluous.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" },
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }*
      }
    }?,
    empty
  }
tei_g =
  
  ## (character or glyph) represents a non-standard character or glyph.
  element ns1:g {
    text,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## points to a description of the character or glyph intended.
    attribute ref { xsd:anyURI }?,
    empty
  }
tei_char =
  
  ## (character) provides descriptive information about a character. 
  element ns1:char {
    (tei_charName?,
     tei_model.glossLike*,
     tei_charProp*,
     tei_mapping*,
     tei_figure*,
     tei_model.graphicLike*,
     tei_model.noteLike*),
    tei_att.global.attributes,
    empty
  }
tei_charName =
  
  ## (character name) contains the name of a character, expressed following Unicode conventions. 
  element ns1:charName { text, tei_att.global.attributes, empty }
tei_charProp =
  
  ## (character property) provides a name and value for some property of the parent character or glyph. 
  element ns1:charProp {
    ((tei_unicodeName | tei_localName), tei_value),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_charDecl =
  
  ## (character declarations) provides information about nonstandard characters and glyphs. 
  element ns1:charDecl {
    (tei_desc?, (tei_char | tei_glyph)+),
    tei_att.global.attributes,
    empty
  }
tei_glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. 
  element ns1:glyph {
    (tei_glyphName?,
     tei_model.glossLike*,
     tei_charProp*,
     tei_mapping*,
     tei_figure*,
     tei_model.noteLike*),
    tei_att.global.attributes,
    empty
  }
tei_glyphName =
  
  ## (character glyph name) contains the name of a glyph, expressed following Unicode conventions for character names. 
  element ns1:glyphName { text, tei_att.global.attributes, empty }
tei_localName =
  
  ## (locally-defined property name) contains a locally defined name for some property. 
  element ns1:localName { text, tei_att.global.attributes, empty }
tei_mapping =
  
  ## (character mapping) contains one or more
  ##	 characters which are related to the parent character or glyph
  ##	 in some respect, as specified by the type
  ##	 attribute.
  ##
  element ns1:mapping {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_unicodeName =
  
  ## (unicode property name) contains the name of a registered Unicode normative or informative property. 
  element ns1:unicodeName {
    text,
    tei_att.global.attributes,
    
    ## specifies the version number of the Unicode Standard in which this property name is
    ##         defined.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_value =
  
  ## (value) contains a single value for some property, attribute, or other
  ##   analysis.
  element ns1:value {
    tei_macro.xtext, tei_att.global.attributes, empty
  }
tei_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including any
  ##     or all of the person's forenames, surnames, honorifics, added names, etc.
  element ns1:persName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_placeName =
  
  ## contains an absolute or relative place name. 
  element ns1:placeName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_country =
  
  ## (country) contains the name of a geo-political unit, such as a nation, country, colony, or
  ##     commonwealth, larger than or administratively superior to a region and smaller than a bloc.
  element ns1:country {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_settlement =
  
  ## contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit.
  element ns1:settlement {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_affiliation =
  
  ## (affiliation) contains an informal description of a person's present or past affiliation with some
  ##         organization, for example an employer or sponsor.
  element ns1:affiliation {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_climate =
  
  ## (climate) contains information about the physical climate of a place.
  element ns1:climate {
    (tei_model.headLike*,
     (tei_model.pLike+ | tei_model.labelLike+),
     (tei_model.noteLike | tei_model.biblLike)*,
     tei_climate*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_listEvent =
  
  ## (list of events) contains a list of descriptions, each of which provides information
  ##     about an identifiable event. 
  element ns1:listEvent {
    (tei_model.headLike*,
     tei_listEvent+,
     (tei_relation | tei_relationGrp)*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_relationGrp =
  
  ## (relation group) provides information about relationships identified amongst people, places, and
  ##     organizations, either informally as prose or as formally expressed relation links. 
  element ns1:relationGrp {
    (tei_model.pLike+ | tei_relation+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_relation =
  
  ## (relationship) describes any kind of relationship or linkage amongst a specified group of participants.
  element ns1:relation {
    (tei_desc?)
    >> sch:pattern [
         id = "relation-constraint-activemutual"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@active and @mutual"
             "Only one of the attributes\x{a}" ~
             "	'active' and 'mutual' may be supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "relation-constraint-activepassive"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@passive and not(@active)"
             "the attribute 'passive'\x{a}" ~
             "	may be supplied only if the attribute 'active' is\x{a}" ~
             "	supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    
    ## categorizes the relationship in some respect, e.g. as social, personal or other.
    ## Suggested values include: 1] social; 2] personal; 3] other
    [ a:defaultValue = "personal" ]
    attribute type {
      
      ## relationship concerned with social roles
      "social"
      | 
        ## relationship concerned with personal roles, e.g. kinship, marriage, etc.
        "personal"
      | 
        ## other kinds of relationship
        "other"
      | xsd:Name
    }?,
    
    ## supplies a name for the kind of relationship of which this is an instance.
    attribute name { xsd:Name },
    
    ## identifies the passive participants in a non-mutual relationship.
    attribute passive {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    (
     ## identifies the active participants in a non-mutual relationship, or all the participants in a mutual
     ##                     one.
     attribute active {
       list { xsd:anyURI, xsd:anyURI* }
     }?
     | 
       ## supplies a list of participants amongst all of whom the relationship holds equally.
       attribute mutual {
         list { xsd:anyURI, xsd:anyURI* }
       }?),
    empty
  }
tei_listNym =
  
  ## (list of canonical names) contains a list of nyms, that is, standardized names for any thing. 
  element ns1:listNym {
    (tei_model.headLike*,
     tei_listNym+,
     (tei_relationGrp | tei_relation)*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_att.datable.iso.attributes =
  tei_att.datable.iso.attribute.when-iso,
  tei_att.datable.iso.attribute.notBefore-iso,
  tei_att.datable.iso.attribute.notAfter-iso,
  tei_att.datable.iso.attribute.from-iso,
  tei_att.datable.iso.attribute.to-iso
tei_att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_model.zonePart =
  tei_model.segLike
  | tei_model.hiLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.pPart.transcriptional
  | tei_model.gLike
  | tei_table
  | tei_zone
  | tei_line
tei_model.linePart =
  tei_model.segLike
  | tei_model.hiLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.pPart.transcriptional
  | tei_model.gLike
tei_att.staged.attributes = tei_att.staged.attribute.stage
tei_att.staged.attribute.stage =
  
  ## points to one or more stageNote elements which contain a
  ##                            description of a text-stage to which the editors think the alteration/
  ##                            text passage marked by the element bearing this attribute (and its
  ##                            children) belongs.
  attribute stage {
    list { xsd:anyURI, xsd:anyURI* }
  }?
tei_att.repeatable.attributes = tei_att.repeatable.attribute.cause
tei_att.repeatable.attribute.cause =
  
  ## documents the presumed cause of the repeated act of writing.
  attribute cause {
    
    ## repeated for the purpose of fixation
    "fix"
    | 
      ## repeated to clarify a previously illegible or badly written text
      ##                                  or mark
      "unclear"
  }?
tei_document =
  
  ## contains a document-centric transcription of a primary source, providing
  ##                      topographical information as well as transcription
  element ge:document {
    (tei_surface, tei_model.global.edit*)+,
    tei_att.global.attributes,
    empty
  }
tei_patch =
  
  ## contains a part of a written surface which was originally physically
  ##                      distinct but became attached to it at the time that one or more written zones
  ##                      were created.
  element ge:patch {
    (text | tei_model.global | tei_zone)*,
    tei_att.coordinated.attributes,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## Describe the method by which a patch is or was connected to the main
    ##                            surface
    ## Sample values include: 1] glue; 2] pin; 3] sewn
    attribute binder { xsd:Name }?,
    
    ## indicates whether the patch is attached and folded in such a way as to
    ##                            provide two writing surfaces
    attribute flipping { xsd:boolean }?,
    
    ## height of the patch in mm
    attribute height {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    
    ## width of the patch in mm
    attribute width {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
tei_line =
  
  ## contains the transcription of a topographic line in the source document
  element ge:line {
    (text | tei_model.global | tei_model.linePart)*,
    tei_att.typed.attributes,
    tei_att.global.attributes,
    empty
  }
tei_stageNotes =
  
  ## contains one or more descriptions of the stages which have been identified
  ##                      in the genesis of a text.
  element ge:stageNotes {
    (tei_stageNotes | tei_stageNote)+,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## indicates whether or not the order in which the children of this
    ##                            element are presented is significant
    [ a:defaultValue = "true" ] attribute ordered { xsd:boolean }?,
    empty
  }
tei_stageNote =
  
  ## documents a particular stage in the genesis of a text.
  element ge:stageNote {
    (tei_macro.specialPara | tei_stageNote)*,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## points to one or more elements that belong to this stage.
    attribute target {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    empty
  }
tei_mod =
  
  ## represents any kind of modification identified within a text at a
  ##                      documentary level.
  element ge:mod {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_modSpan =
  
  ## represents any kind of modification identified within a text at a
  ##                      documentary level, where this extends over other XML markup constructs in the
  ##                      document.
  element ge:modSpan {
    empty,
    tei_att.spanning.attributes,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_transposeGrp =
  
  ## supplies a list of transpositions indicated at some point in the text,
  ##                      typically by means of metamarks.
  element ge:transposeGrp {
    tei_transpose+, tei_att.global.attributes, empty
  }
tei_transpose =
  
  ##  describes a single textual transposition as an ordered list of at least two
  ##                      pointers specifying the order in which the elements indicated should be
  ##                      re-combined. 
  element ge:transpose {
    (tei_ptr, tei_ptr+), tei_att.global.attributes, empty
  }
tei_undo =
  
  ## points to any marked-up intervention in a text which has subsequently been
  ##                      marked as to be cancelled or undone.
  element ge:undo {
    empty,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    
    ## points to the element representing the intervention to be undone.
    attribute target { xsd:anyURI }?,
    empty
  }
tei_redo =
  
  ## points to a marked-up intervention in a text which has subsequently been
  ##                      marked for a second time in a different way. 
  element ge:redo {
    empty,
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    
    ## points to the element representing the intervention which is to be
    ##                            repeated.
    attribute target { xsd:anyURI }?,
    empty
  }
tei_rewrite =
  
  ## contains a sequence of text which has been rewritten by the author, for
  ##                      example by over-inking, to clarify or fix it.
  element ge:rewrite {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    empty
  }
tei_metaMark =
  
  ## contains any textual or graphical mark in a written text intended to signal
  ##                      how the text should be read and not forming part of the text itself.
  element ge:metaMark {
    tei_macro.specialPara,
    tei_att.spanning.attributes,
    tei_att.placement.attributes,
    tei_att.global.attributes,
    
    ## describes the function (e.g. add, delete, alternate) of the mark.
    attribute function {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates the element(s) to which the function of the meta-mark
    ##                            refers. Pointers are separated by a white space
    attribute target {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    empty
  }
tei_used =
  
  ## a passage of text which has been marked as used, usually meaning that it has
  ##                      been transcribed to a fair copy.
  element ge:used {
    empty, tei_att.spanning.attributes, tei_att.global.attributes, empty
  }
tei_geneticGrp =
  
  ## Group texts and document which are somehow related in a genetic process
  element ge:geneticGrp {
    tei_geneticNote+, tei_att.global.attributes, empty
  }
tei_geneticNote =
  
  ## describes a particular set of documents or document fragments which are
  ##                      considered to be mutually associated in some way.
  element ge:geneticNote {
    tei_linkGrp+,
    tei_model.pLike+,
    tei_att.typed.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    empty
  }
tei_include =
  
  ## The W3C XInclude element
  element include {
    tei_fallback?,
    
    ## pointer to the resource being included
    attribute href { xsd:anyURI }?,
    
    ##
    [ a:defaultValue = "xml" ]
    attribute parse {
      
      ##
      "xml"
      | 
        ##
        "text"
    }?,
    
    ##
    attribute xpointer { text }?,
    
    ##
    attribute encoding { text }?,
    
    ##
    attribute accept { text }?,
    
    ##
    attribute accept-charset { text }?,
    
    ##
    attribute accept-language { text }?,
    empty
  }
tei_fallback =
  
  ## Wrapper for fallback elements if an XInclude fails
  element fallback { tei_AnyThing, empty }
start = tei_TEI | tei_teiCorpus
