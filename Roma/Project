Summary
-------

The Roma tool at http://tei.oucs.ox.ac.uk/Roma/
provides a way of constructing specifications
from which TEI schemas and documentation 
can be derived. The aim of this project is to
make a series of incremental improvements to
Roma:
 * adding new features
 * making the back end more robust
 * improving the user interface

Roma
----
Roma's basic job is to construct an XML document,
the TEI "ODD". To generate output, this
is processed using a set of XSLT stylesheets
which can produce RELAXNG schemas, W3C schemas,
HTML documentation, etc. This library
of XSLT is maintained separately, and can be
assumed to do the right thing.

Roma is written in PHP 5, supported by
XSLT stylesheets and requests to a data
source, using XQuery. It's basic interface
is to simulate state via a series of tabs;
each of these saves state in a PHP session
for the next call to the web site to read.
The source for all of Roma is on Sourceforge, 
through http://tei.sf.net, following the link
to the Subversion repository.

At various points, Roma offers lists of components
of the TEI; these are created by accessing
an eXist XML database, sending XQuery via HTTP.


Familiarisation
---------------
1. Visit http://tei.oucs.ox.ac.uk/Roma/ and http://www.tei-c.org/
and gain some understanding of what it is that Roma is trying to do.

2. Install Roma locally, to give a testbed for 
changes. If possible, install on a Debian Linux box,
as there are Debian packages ready at
http://tei.oucs.ox.ac.uk/teideb/. The TEI Ubuntu CD
also has a working system.

3. Write a report on the user interface, with suggestions
on where it can be improved.

Projects
--------
1. The backend eXist database is not very robust. One alternative
is Berkeley DB XML, at
http://www.oracle.com/database/berkeley-db/xml/index.html. 
The task is to work out how to integrate this with Roma
so that the existing XQuery scripts can be applied to dbxml
instead of eXist.

2. The Roma interface has a lot of lists of elements, modules, etc; 
it constantly goes back to the database to gather this information.
Can some of this be avoided by just-in-time lookup using AJAX
techniques?

3. The person user of Roma wants a graphic view of how what they
are building fits together. Can we give them a tree diagram
showing where they are in the process, and what the effects are
when they eg add modules? http://tei.oucs.ox.ac.uk/TV/ has some
ideas in this respect, for visualizing TEI content models.
I propose a graphical editor showing TEI modules and their
elements, which would allow you to add and remove modules
and their elements. 

4. There are some things you can do in the ODD language which
are not supported in Roma, eg editing macro specifications. Can
we add a way of editing them?

Sebastian Rahtz
sebastian.rahtz@oucs.ox.ac.uk





