<script language="php">
// ######################################################################
//
// Path: /usr/local/includes/php/roma/docdom.php
//
// ######################################################################

/**
 * This class is responsible for Romas documentation file
 *
 * @author: Arno Mittelbach <arno@mittelbach-online.de>
 * @version: 0.9
 * @access:  public
 * @package: roma
 */
class docDom extends domDocument
  {
    private $m_oRomaDom;

    private $bBar;

    function __construct( $oRomaDom, $bBar = false )
      {
	parent::__construct();

	$this->m_oRomaDom = $oRomaDom;
	$this->bBar = $bBar;

	if ( $this->bBar )
	  {
	    $this->m_oRomaDom->loadProgressBar();
	    $this->m_oRomaDom->updateProgressBar( '5' );
	  }

	$this->constructDocument();
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '10' );
	$this->parseCustomization();
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '50' );
      }

    private function constructDocument()
      {
	$szXML = '<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"><teiHeader><fileDesc><titleStmt><title>The Title</title>
        <author>generated by Roma</author>
      </titleStmt>
      <publicationStmt>
        <p>part of P5</p>
      </publicationStmt>
      <sourceDesc>
        <p>written from scratch</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <div0>
        <head>ODD SUBSET</head>
        <div1 id="REFCLA">
          <head>Class catalogue</head>
          <divGen type="classcat"/>
        </div1>
        <div1 id="REFENT">
          <head>Pattern catalogue</head>
          <divGen type="patterncat"/>
          <p/>
        </div1>
        <div1 id="REFTAG">
          <head>Element catalogue</head>
          <divGen type="tagcat"/>
        </div1>
      </div0>
    </body>
  </text>
</TEI>';

	$this->loadXML( $szXML );
      }

    /**
     * This is the heart of the domDoc class.
     * Here the customization file is parsed and the
     * documentation Document is created.
     */
    private function parseCustomization()
      {
	$oBody = $this->getElementsByTagname( 'body' )->item(0);

	// get selected Modules
	$this->m_oRomaDom->getSelectedModules( $aszModules );

	foreach ( $aszModules as $szModule )
	  {
            $theMod = $this->createElementNS( 'http://www.tei-c.org/ns/1.0', 'module' );
	    $oModule = $oBody->appendChild( $theMod );
	    $oModule->setAttribute( 'ident', $szModule );
	    
	    $this->m_oRomaDom->getIncludedElementsInModule( $szModule, $aszElements );
	    foreach ( $aszElements as $szElement )
	      {
		$oElementDom = new domDocument();
		$oElementDom->loadXML( join( '', file( 'http://' . roma_exist_server . ':8080/exist/tei/copytag.xq?name=' . $szElement ) ) );
		$oSpec = $oElementDom->getElementsByTagname( 'elementSpec' )->item(0);
		
		$oSpec = $this->importNode( $oSpec, true );
		$oModule->appendChild( $oSpec );
		
		$this->m_oRomaDom->getElementsChangedNameInModule( $szModule, $szElement, $szNewName );
		if ( $szNewName != $szElement ) 
		  {
		    $oSpec->setAttribute( 'mode', 'change' );
		    $oSpec->insertBefore( new domElement( 'altIdent', $szNewName, 'http://www.tei-c.org/ns/1.0' ), $oSpec->firstChild );
		  }

		$this->m_oRomaDom->getContentsByElementNameInModuleDom( $szElement, $szModule, $oNewContents );
		$oContent = $oSpec->getElementsByTagname( 'content' )->item(0);
		$oNewContent = $this->importNode( $oNewContents->documentElement, true );
		$oSpec->removeChild( $oContent );
		$oSpec->insertBefore( $oNewContent, $oSpec->getElementsByTagname( 'attList' )->item(0) );

		$this->m_oRomaDom->getDescriptionByElementNameInModule( $szElement, $szModule, $szNewDesc );
		$oSpec->getElementsByTagname( 'desc' )->item(0)->removeChild( $oSpec->getElementsByTagname( 'desc' )->item(0)->firstChild );
		$oSpec->getElementsByTagname( 'desc' )->item(0)->appendChild( new domText( $szNewDesc ) );

		$this->m_oRomaDom->getAttributeDomByElementInModule( $szElement, $szModule, '', $oAttDom );
		//delete attributes
		$oAttList = $oSpec->getElementsByTagname( 'attList' )->item(0);

		$oXPath = new domxpath( $this );
		$oXPath->registerNamespace( 'tei', 'http://www.tei-c.org/ns/1.0' );

		foreach( $oAttDom->documentElement->childNodes as $oAtt )
		  {
		    $szAttribute = $oAtt->getElementsByTagname( 'name' )->item(0)->nodeValue;

		    $oAttDef = $oXPath->query( "/tei:TEI/tei:text/tei:body/tei:module[@ident='{$szModule}']/tei:elementSpec[@ident='{$szElement}']/tei:attList/tei:attDef[@ident='{$szAttribute}']" )->item(0);

		    if ( is_object( $oAttDef ) )
		      {
			$oAttDef->setAttribute( 'usage', $oAtt->getElementsByTagname( 'name' )->item(0)->getAttribute( 'usage' ) );

			$szMode = ( $oAtt->getElementsByTagname( 'added' )->item(0)->nodeValue == 'true' ) ? 'add' : 'change';
			$szMode = ( $oAtt->getElementsByTagname( 'include' )->item(0)->nodeValue == 'delete' ) ? 'delete' : $szMode;
			
			$oAttDef->setAttribute( 'mode',  $szMode );

			$oAttDef->insertBefore( $oAttDef->firstChild, $oAtt->getElementsByTagname( 'altName' )->item(0)->nodeValue );
		      }
		  }
	      }

	    if ( $this->bBar )
	      $this->m_oRomaDom->updateProgressBar( 6, true, 40 );
	  }
	echo $this->SaveHTML();

	//new Elements
	if ( $this->m_oRomaDom->getAddedElements( $oElementsDom ) === false )
	  {
	    foreach( $oElementsDom->documentElement->childNodes as $oElement )
	      {
		$oElementSpec = $oBody->appendChild( new domElement( 'elementSpec' ) );
		$szElement = $oElement->getElementsByTagname( 'elementName' )->item(0)->nodeValue;
		$oElementSpec->setAttribute( 'ident', $szElement );
		$oElementSpec->setAttribute( 'mode', 'add' );

		$oClasses = $oElementSpec->appendChild( new domElement( 'classes' ) );
		$oContent = $oElementSpec->appendChild( new domElement( 'content' ) );

		$this->m_oRomaDom->getAddedElementsClasses( $szElement, $aszClasses );
		foreach( $aszClasses as $szClass )
		  {
		    $oMember = $oClasses->appendChild( new domElement( 'memberOf' ) );
		    $oMember->setAttribute( 'key', $szClass );
		  }

		$this->m_oRomaDom->getAddedElementsDescription( $szElement, $szDesc );
		$oElementSpec->appendChild( new domElement( 'desc', $szDesc ) );

		$this->m_oRomaDom->getAddedElementsContents( $szElement, $szContents );
		switch( $szContents )
  	  	  {
		  case 'empty':
		  case 'text':
		    $oRNG = $this->createElementNS( 'http://www.relaxng/ns/structure/1.0', 'rng:' . $szContents );
		    $oContent->appendChild( $oRNG );
		    break; 
		  default:
		    $oRNG = $this->createElementNS( 'http://www.relaxng/ns/structure/1.0', 'rng:ref' );
		    $oRef = $oContent->appendChild( $oRNG );
		    $oRef->setAttribute( 'name', $szContents );
		    break;
		  }
	      }

	    if ( $this->bBar )
	      $this->m_oRomaDom->updateProgressBar( 2, true, 50 );
	  } 
      }

    // #####################################################################
    // --- Little Helpers
    // #####################################################################

    /**
     * Creates a TEI Lite document out of the documentation Dom
     * and returns it as a domDocument.
     */
    public function getTeiLiteDom( &$oTeiLite )
      {
	//create the teiLite
        $oXSL = new domDocument();
 	$oXSL->load( roma_schemaStylesheetDir . '/' . 'teixml-odds.xsl'  );

	$oProc = new XsltProcessor();
	$oProc->importStylesheet( $oXSL );
	
	$oTeiLite = $oProc->transformToDoc( $this );
      }

    // #####################################################################
    // --- Create some Output
    // #####################################################################

    public function outputTeiLite( &$szTeiLite )
      {
	$this->getTeiLiteDom( $oTeiLiteDom );
	if ( $this->bBar )
	    $this->m_oRomaDom->updateProgressBar( '70' );

	$oTidy = new tidy();
	$aszOptions = array( 'indent' => true,
			     'indent-spaces' => 4,
			     'wrap' => 72,
			     'input-xml' => true,
			     'output-xml' => true
			     );
	$oTidy->parseString( $oTeiLiteDom->SaveXML(), $aszOptions );
	if ( $this->bBar )
	    $this->m_oRomaDom->updateProgressBar( '80' );

	$oTidy->cleanRepair();
	$szTeiLite = $oTidy;
	if ( $this->bBar )
	    $this->m_oRomaDom->updateProgressBar( '100' );
      }

    public function outputLatex( &$szLatex )
      {
	$this->getTeiLiteDom( $oTeiLiteDom );
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '70' );

	$oXSL = new domDocument();
	$oXSL->load( roma_styleheet_docLatex );
	
	$oProc = new XsltProcessor();
	$oProc->importStylesheet( $oXSL );
	
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '85' );
	
	$szLatex = $oProc->transformToDoc( $oTeiLiteDom )->SaveHTML();
	
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '100' );
      }

    public function outputPdfLatex( &$szPdf )
      {
	$this->getTeiLiteDom( $oTeiLiteDom );
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '70' );

	
	$oXSL = new domDocument();
	$oXSL->load( roma_styleheet_docLatex );
	
	$oProc = new XsltProcessor();
	$oProc->importStylesheet( $oXSL );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '75' );

	$oTmpDom = $oProc->transformToDoc( $oTeiLiteDom );
	
	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '80' );

	//Save File
	$szID = md5( uniqid(rand(), true ) );
	
	$szInputFile = roma_temporaryFilesDir . '/' . $szID . '.tex';    
	$szOutputFile = roma_temporaryFilesDir . '/' . $szID . '.pdf';    
	
	file_put_contents( $szInputFile , $oTmpDom->SaveHTML() );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '85' );
	
	$szCurrentDir = getcwd();
	chdir( roma_temporaryFilesDir );
	exec( roma_pdflatex . ' -interaction=nonstopmode ' . $szInputFile );
	chdir( $szCurrentDir );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '90' );
	
	$szPdf = join( '', file( $szOutputFile ) );
	
	unlink( $szInputFile );
	unlink( $szOutputFile );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '100' );
      }

    public function outputPDF( &$szPdf )
      {
	$this->getTeiLiteDom( $oTeiLiteDom );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '60' );

	$oXSL = new domDocument();
	$oXSL->load( roma_styleheet_docPDF );
	
	$oProc = new XsltProcessor();
	$oProc->importStylesheet( $oXSL );
	$oTmpDom = $oProc->transformToDoc( $oTeiLiteDom );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '70' );
	
	//Save File
	$szID = md5( uniqid(rand(), true ) );
	
	$szInputFile = roma_temporaryFilesDir . '/' . $szID . '.fo';    
	$szOutputFile = roma_temporaryFilesDir . '/' . $szID . '.pdf';    
	
	file_put_contents( $szInputFile , $oTmpDom->SaveXML() );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '80' );

	exec( roma_fop . ' ' . $szInputFile . ' ' . $szOutputFile );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '90' );

	$szPdf = join( '', file( $szOutputFile ) );
	
	unlink( $szInputFile );
	unlink( $szOutputFile );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '100' );
      }

    public function outputDVI ( &$szDVI )
      {
	$this->getTeiLiteDom( $oTeiLiteDom );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '60' );

	$oXSL = new domDocument();
	$oXSL->load( roma_styleheet_docLatex );
	
	$oProc = new XsltProcessor();
	$oProc->importStylesheet( $oXSL );
	$oTmpDom = $oProc->transformToDoc( $oTeiLiteDom );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '70' );
	
	//Save File
	$szID = md5( uniqid(rand(), true ) );
	
	$szInputFile = roma_temporaryFilesDir . '/' . $szID . '.tex';    
	$szOutputFile = roma_temporaryFilesDir . '/' . $szID . '.dvi';    
	
	file_put_contents( $szInputFile , $oTmpDom->SaveHTML() );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '80' );

	$szCurrentDir = getcwd();
	chdir( roma_temporaryFilesDir );
	exec( roma_latex . ' -interaction=nonstopmode ' . $szInputFile );
	chdir( $szCurrentDir );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '90' );
	
	$szDVI = join( '', file( $szOutputFile ) );
	
	unlink( $szInputFile );
	unlink( $szOutputFile );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '100' );
      }

    public function outputHTML ( &$szHTML )
      {
	$this->getTeiLiteDom( $oTeiLiteDom );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '70' );

	$oXSL = new domDocument();
	$oXSL->load( roma_styleheet_docHtml );
	
	$oProc = new XsltProcessor();
	$oProc->importStylesheet( $oXSL );

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '80' );

	$szHTML = $oProc->transformToDoc( $oTeiLiteDom )->SaveHTML();

	if ( $this->bBar )
	  $this->m_oRomaDom->updateProgressBar( '100' );
      }

  }

</script>