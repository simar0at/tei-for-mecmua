<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:/C:/Users/Peter/Documents/data/fl/TEI/gettingstarted/gsschema.rng" type="xml"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Getting started using TEI</title>
            </titleStmt>
            <publicationStmt>
                <publisher>TEI consortium</publisher>
            </publicationStmt><sourceDesc>
                <p>No source</p>
            </sourceDesc></fileDesc>
    </teiHeader>
    <text>
        <front>
            <div>
                <head>About the getting started document</head>
                <p>Here we document, for the time being, arguments and decisions about the contents,
                the audience, the writing style etc. of the 'Getting started' document.</p>
                <div>
                    <head>Purpose</head>
                    <p>Someone that has read this document and that has gone through the steps the document describes (installing and using an editor, 
                    etc.) should be able to create, modify and validate a simple TEI document. He/she should be able to create an HTML representation of that document. 
                    He/she should also be able to assess the hurdles he/she faces in using TEI in his/her project and to decide on a proper course of action (e.g.: undertake 
                    project on his/her own, seek help in local institution or in wider TEI community, seek formal training).</p>
                </div>
                <div>
                    <head>Audience</head>
                    <p>The document targets an academic  (postgraduate, PhD, 
                        researcher, professor) that wants to start understanding and using the TEI: e.g. a graduate student who wants to make an
                        edition of a book he/she is writing a thesis on. The document assumes
                        someone working on his/her own, willing to learn something new, ready to
                        work hard and to try various solutions. We assume someone that is reasonably
                        comfortable using computers, but has no experience in programming and no
                        previous knowledge of XML or HTML. </p>
                </div>
                <div>
                    <head>Software</head>
                    <p>Because we want to help people getting started, there is no way we can avoid
                        talking about specific software programs. We must be specific. Neither can
                        we avoid talking about commercial software, as oXygen is the environment of
                        choice for so many people using TEI. </p>
                    <p>We should avoid the editors that are favoured by programmers and other
                        technically oriented persons, such as emacs or vi. We want to
                        minimise the learning effort expended on tools; what people should learn
                        here is the TEI.</p>
                    <p>What we also want to avoid are expensive editors. We're writing this for
                        people that are getting started. They are probably unwilling to invest a
                        large amount of money.</p>
                    <p>If possible, we should avoid command-line tools. In fact, we want to
                        recommend an editor that comes with validation and facilities for running a
                        transformation. </p>
                    <p>We should try to discuss editors that work on the three major platforms. </p>
                    <p>The upshot of this is, for me: we discuss oXygen (inexpensive, works everywhere, very powerful, but not open source) 
                    and the XML Copy editor  (Open source, works on Windows and Linux, reasonably powerful). Arianna suggests including jEdit.</p>
                    <p>All of these either come with an xslt processor (oXygen and XML Copy editor) or have a plugin for the purpose (jEdit).</p>
                </div>
                <div>
                    <head>Schema's and ODD</head>
                    <p>From a logical point of view, for any project that uses the TEI, ODD is the
                        starting point. ODD helps you make a schema and the schema helps you create
                        and validate xml documents. From an educational point of view, however, it
                        makes more sense to start with an XML transcription of a document, and
                        introduce the schema after that. A schema, let alone ODD, makes no sense to
                        someone who is not familiar with xml documents. Therefore, the idea of
                        making a schema that fits your documents, and the way of making such a
                        schema, is introduced only after the reader is familiar with modifying and
                        validating XML documents. </p>
                </div>
                <div>
                    <head>Contents</head>
                    <p>As to TEI elements, this document stresses elementary things such as div, p,
                        lg, l, hi, etc. As a TEI document must have a header, it will mention the
                        header and provide some instruction for filling it, but it will focus on
                        quickly attaining results, rather that on the administrative side of things.</p>
                    <p>As to schema's: throughout the getting started document, we use RELAX NG. We
                        mention DTD's and W3C Schema's as an option, without going into their
                        syntax. We explain RELAX using the XML syntax, and mention the existence of
                        the compact syntax.</p>
                    <p>As to XSLT: the document will explain some of the concepts of XSLT
                        (templates, XPATH, ...), and it will encourage readers to make some small
                        changes to a toy stylesheet. It will discuss the stylesheets provided by the TEI and guide readers in 
                        making a simple customisation. It will not try to provide further instruction
                        in XSLT.</p>
                </div>
                <div>
                    <head>Style</head>
                    <p>We should try to be as clear and simple as possible. In a way, council members
                        are not the best persons to write this document, as they may be too familiar
                        with the technicalities to avoid terminology not immediately clear to
                        beginners. We should be prepared to have this document reviewed by people
                        less experienced in TEI and XML than we are. </p>
                    <p>Evidently, divisions of this document authored by non-native speakers of English should be reviewed 
                        by native speakers. </p>
                </div>
                <div>
                    <head>Media use</head>
                    <p>The document should include lots of screen shots. It may also contains links
                        to video's of screen capture.</p>
                </div>
            </div>
        </front>
        <body>
            <div>
                <head>Introduction</head>
                <div>
                    <head>TEI: a very high-level overview</head>
                    <p>TEI: a set of guidelines, but also a community. 4p</p>
                    <p>Why you would want to use TEI; explain the term 'encoding'; XML; what
                        encoding entails; using an editor; validation; what you can then do with
                        your document (transform it into other representations, have it searched;
                        create selections). Possibilities for interchange and interoperability. 10p.</p>
                </div>
                <div>
                    <head>What this document does, and what it doesn't</head>
                    <p>One paragraph explaining that this getting started document is more elaborate
                        than many other documents with a similar name: that is because learning TEI
                        is similar in effort and in reward to things like learning a new language
                        or mastering a musical instrument: 1p</p>
                    <p>Helps you get started, recognising that learning TEI is never going to be
                        easy: 1p</p>
                    <p>It is not: a full course in using xml, in tei, in xslt, in html: 1p</p>
                    <p>Structure of the document. 2p</p>
                    <p>Intended readership: 1p</p>
                    <p>The reader is expected to have basic computer skills: create disk folders, move files, run programs, install
                        programs, use unzip software. Not explain these, but just state you need the
                        skills and suggest a way to acquire them. 2p.</p>
                </div>
                <div>
                    <head>Conventions used in this document</head>
                    <p>How we label examples, program names, elements and attributes. 1p</p>
                    <p>How this document serves users on different platforms. 1p</p>
                </div>
            </div>
            <div>
                <head>Should you use TEI?</head>
                <p>Discuss nature of material, desired result, competence of encoder,
                    available technical support, intellectual and practical benefits, effort to be
                    expected, place of TEI in humanities computing: 12p</p>
            </div>
            <div>
                <head>Technical background</head>
                <p>XML: explain a few basics, then refer to gentle XML introduction: 5p</p>
                <p>The web, web servers, html, browsers. One very simple HTML example, then point to
                    other resources: 5p</p>
                <p>Even gentler intro into creating html from xml using xslt (mention but not discuss: pdf
                    creation and other output formats): 5 p's</p>
            </div>
            <div>
                <head>Overall structure of a TEI text</head>
                <p>Introduce sample document (without header), explain elements and attributes. 8p</p>
                <p>Add header. 5p</p>
            </div>
            <div>
                <head>Choosing and installing an editor</head>
                <p>Point out that XML is application independent. This implies you can select an editor suited to 
                    the task at hand. You don't select an editor for the document's lifetime. 2p</p>
                <p>Discuss functions that an editor can handle: syntax highlighting, assisted entry,
                    content completion, validation (dtd, w3c schema, relax ng), validation as you
                    type, run xslt conversions, xslt debugging. Discuss source views: code view,
                    wysiwyg view, tree view. Discussion illustrated with screen shots from multiple applications. 10 p</p>
                <p>Discuss a number of editors: .... Mention, but discourage from, option of using
                    plain text editor. 10 p</p>
            </div>
            <div>
                <head>Load, modify, validate a complete ready-made document</head>
                <p>This will be a document that we provide, together with a schema. Instructions for download. 2p</p>
                <p>Show number of functions of editor: 18 p (because of multiple editors)</p>
                <list>
                    <item>different source views (maybe refer to oXygen video to explain editing in oXygen's author mode)</item>
                    <item>different side views: model, outline, attributes</item>
                    <item>find and replace</item>
                    <item>etc...</item>
                </list>
            </div>
            <div>
                <head>Running stylesheets </head>
                <p>Explain what XSLT is and what it does. 2p</p>
                <p>Installing XSLT processor, if not included in editor. 3p</p>
                <p>Discuss a simple stylesheet to transform the sample document, and based on this a number of xslt instructions. 10p</p>
                <p>Run the stylesheet and view the output. 2p</p>
                <p>Do some simple modifications. 2p</p>
                <p>Explain standard stylesheets. Download them. 4p</p>
                <p>Customise standard stylesheets: first using Stylebear, then by actually overriding some templates. 5p</p>
                <p>Running standard stylesheets. 1p</p>
            </div>
            <div>
                <head>Getting this to work on sample of own text</head>
                <p>Preparing text in XML vs. converting prepared text to XML: argue it is better to
                    use structured text from scratch. 3p</p>
                <p>Create an empty TEI document, using a template that we point to. 2p</p>
                <p>Fill in the blanks in the header. 2p</p>
                <p>Create a document snippet in the body. Validate. Generate HTML. 6p</p>
                <p>Urge reader to put up both HTML and XML on web site: is motivating, helps
                    discussion with others, .... 3p</p>
            </div>
            <div>
                <head>Schema's</head>
                <p>Explain the need for schema's that fit the texts. A few words about TEI
                    conformance and TEI extensions. 4p</p>
                <p>Explain modules, classes, macro's. 6p</p>
                <p>Introducing ODD and Roma. Reference to 'Getting started with P5 ODD's. 6p</p>
                <p>Setting up ODD, (de)selecting elements and attributes. 3p</p>
                <p>Extension: creating a new element. Example: including tune indication for song. 3p</p>
                <p>Add documentation, save customisation, create new schema and use it for validation. 5p</p>
            </div>
            <div>
                <head>Where to go from here</head>
                <p>What you probably need to do now: do document analysis, enter data, and create or
                    modify a stylesheet that helps you display the data. 2p</p>
                <p>Document analysis: study the appropriate portions of the Guidelines, perhaps sets
                    of local TEI guidelines developed elsewhere, discuss this with others, get help. Urge asking for feedback. 3p</p>
                <p>Enter data: if you have your texts in another format, it may help to learn some
                    regular expressions: reference elsewhere. 2p</p>
                <p>Create or modify stylesheet: serious work on xslt stylesheets is not for
                everyone. 2p</p>
                <p>Places to look for tuition. 2p</p>
            </div>
            <div>
                <head>Glossary</head>
                <list type="gloss">
                    <label>ODD</label><item>One Document Does it all: document describing a TEI
                schema. See ...</item>
                    <label>HTML</label>
                    <item>HyperText Markup Language, the language used to write web pages. </item>
                </list>
                <p>etc...</p>
            </div>
            <div>
                <head>Literature</head>
                <p>References to other introductory material</p>
            </div>
        </body>
    </text>
</TEI>

