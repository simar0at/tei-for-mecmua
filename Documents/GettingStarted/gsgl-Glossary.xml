<?xml version="1.0" encoding="UTF-8"?>
<div xml:id="gl" xmlns="http://www.tei-c.org/ns/1.0">
    <head>Glossary</head>
    <list type="gloss">
        <label xml:id="glodd">ODD</label>
        <item>One Document Does it all: document describing a TEI
            schema. See <ptr target="#scodd"/></item>
        <label xml:id="glhtml">HTML</label>
        <item>HyperText Markup Language, the language used to write web pages. </item>
        <label xml:id="glns">namespace</label>
        <item>Namespaces are collections of XML elements that belong to some common vocabulary. All TEI elements 
            belong to the TEI namespace. XML documents can use elements from multiple namespaces.  See <ptr target="#tbxml"></ptr></item>
        <label xml:id="gltei">TEI</label>
        <item>Text Encoding Initiative.</item>
        <label xml:id="glxml">XML</label>
        <item>eXtensible Mark-up Language. For the purposes of the TEI, XML can be seen as a generic syntax for encoding properties, structural and others, of texts. The TEI 
        encoding scheme is applied using XML. But non-textual data structures can also be expressed using XML. See <ptr target="#tbxml"></ptr>.</item>
        <label xml:id="glxslt">XSLT</label>
        <item>eXtensible Stylesheet Language - Transformations. Language that is used to define transformations from XML documents into
        new XML documents, HTML documents, or plain text documents.</item>
        <label xml:id="glurl">URL</label>
        <item>Uniform Resource Locator. An internet address, such as <ptr target="http://www.tei-c.org/"/>. A URL need not be absolute (contain a full 
            address) but can also be relative to the current address, such as 'images/page4.jpg'. A URL can point to a location in the current document by using 
            the value of an <att>xml:id</att> attribute somewhere in the document, preceded by '#'. 
        </item>
        <label xml:id="glwys">wysiwyg</label>
        <item>What You See Is What You Get. In modern word processors, what you see is what you get: the document on the screen looks like the document 
        that comes out of the printer. Word processors can work this way because the information in the document serves a single purpose: it is meant to 
        look a certain way and that is it. The information in an XML document is meant to be used in multiple ways, and therefore there is no single 
        'what you get'. See <ptr target="#dm"/></item>
    </list>
    <p>etc...</p>
</div>
